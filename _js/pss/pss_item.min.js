//Const 
const NonceValue = "rdsystem2020";
const CancelPss = "#CancelSave";
const CancelPssSHD = "#CancelSHDSave";
const ConfirmStatus = "#ConfirmStatus";
const RejectStatus = "#RejectStatus";
const DuplicatePSS = "#DuplicatePSS";
const ActivatedPss = "#activatepss";
const ToggleHeader = "#togleheader";
const ChangeNegosiator = "#HeaderNegosiator";
const CountCharLeft = "#AddItemDescription";
const CalETA = "#CalETASample";
const SignDesigner = "#psssigndesigner";
const SignSecHead = "#psssignsechead";

//Activate dropdown & tab
$(".ui.pssdropdown").dropdown();
$(".ui.dropdown").dropdown();
$(".menu .item").tab();
$(".changenego").dropdown({
  selectOnKeydown: false,
});
moment().format();

// Global Variable for Header Authorization
var vusrnm = getCookie("usrnm");
var vtoken = getCookie("token");
var restlocpss = decodeURIComponent(getCookie("restlocpss"));
var restlocpssshd = decodeURIComponent(getCookie("restlocpssshd"));
var filelocpss = decodeURIComponent(getCookie("filelocpss"));
var restlocuploadexcel = decodeURIComponent(getCookie("restlocpscxls"));

//Read Encryption Data Value
var EncValue = $("#EncValue").val();
let EDCrypt = new Encryption();
var ValuesCode = EDCrypt.decrypt(EncValue, NonceValue);
var Values = ValuesCode.split("|");
var Username = Values[0];
var StatusPSS = Values[1];
var StatusDelItem = Values[2];
var ResultSign = Values[3];
var EditingRole = Values[4];
var PSSID = Values[5];
var NoPSS = Values[6];

//Read Reffer ID PSS
var ReffIDPSS = $("#ReffIDPSS").val();

//Change Negosiator
$(ChangeNegosiator).on("change", function () {
  var idpss = PSSID;
  var nego = $(ChangeNegosiator).val();
  var user = Username;
  $.ajax({
    type: "POST",
    url: `${restlocpss}change_negosiator`,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: {
      idpss: idpss,
      nego: nego,
      user: user,
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(JSON.parse(response));
      if (isEmpty(obj)) {
        console.log("Gagal Simpan mas brooo, data error");
      } else if (obj) {
        if (obj.status == false) {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: "warning",
            showConfirmButton: false,
          });
        } else {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: "success",
            showConfirmButton: false,
          });
        }
      } else {
        Swal.fire(
          "Error",
          "Ada kendal di koneksi/database, data tidak tersimpan !",
          "error"
        );
      }
    },
    error: function () {
      window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
  //set focus on pss add item button
  $("#pssadditem").focus();
});

//-----------------------------------------------------------------------------------------------------------

$(ConfirmStatus).on("click", function (e) {
  var idpss = PSSID;
  var nopss = NoPSS;
  var user = Username;
  var request = "APPROVE";

  $.ajax({
    type: "POST",
    url: `${restlocpss}confirm_status`,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: {
      idpss: idpss,
      nopss: nopss,
      request: request,
      user: user,
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(JSON.parse(response));
      if (isEmpty(obj)) {
        console.log("Gagal Request, data kosong");
      } else if (obj) {
        if (obj.status == false) {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: "warning",
            showConfirmButton: false,
          });
        } else {
          Swal.fire({
            text: "Request Approved",
            icon: "success",
            showConfirmButton: true,
          }).then((result) => {
            if (result.value) {
              window.location.href = "./?link=pss";
            }
          });
        }
      } else {
        Swal.fire("Error", "Data Error ?.", "error");
      }
    },
    error: function () {
      window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
});

$(RejectStatus).on("click", function (e) {
  var idpss = PSSID;
  var nopss = NoPSS;
  var user = Username;
  var request = "REJECT";

  $.ajax({
    type: "POST",
    url: `${restlocpss}confirm_status`,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: {
      idpss: idpss,
      nopss: nopss,
      request: request,
      user: user,
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(JSON.parse(response));
      if (isEmpty(obj)) {
        console.log("Gagal Request, data kosong");
      } else if (obj) {
        if (obj.status == false) {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: "warning",
            showConfirmButton: false,
          });
        } else {
          Swal.fire({
            text: "Request Rejected",
            icon: "success",
            showConfirmButton: true,
          }).then((result) => {
            if (result.value) {
              window.location.href = "./?link=pss";
            }
          });
        }
      } else {
        Swal.fire("Error", "Data Error ?.", "error");
      }
    },
    error: function () {
      window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
});

//Cancel PSS ( by user/designer )
$(CancelPss).on("click", function (e) {
  var idpss = PSSID;
  var nopss = NoPSS;
  var user = Username;
  var jabatan = "DESIGNER";
  var reason = $("#psscancelreason").val();

  Swal.fire({
    title: "<h3>CANCEL PSS Num: " + nopss + "</h3>",
    text: "Are you sure ?!",
    icon: "warning",
    confirmButtonText: "Yes",
    cancelButtonColor: "#8b9da4",
    cancelButtonText: "Back",
    showCancelButton: true,
    allowEnterKey: false,
  }).then((result) => {
    if (result.value) {
      $.ajax({
        type: "POST",
        url: `${restlocpss}cancel_pss`,
        headers: {
          user: vusrnm,
          token: vtoken,
        },
        data: {
          idpss: idpss,
          nopss: nopss,
          reason: reason,
          jabatan: jabatan,
          user: user,
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(JSON.parse(response));
          if (isEmpty(obj)) {
            console.log("Gagal Cancel, data kosong");
          } else if (obj) {
            if (obj.status == false) {
              Swal.fire({
                text: obj.message,
                timer: 1500,
                icon: "warning",
                showConfirmButton: false,
              });
            } else {
              Swal.fire({
                text: "PSS sudah berubah status menjadi CANCEL",
                icon: "success",
                showConfirmButton: true,
              }).then((result) => {
                if (result.value) {
                  window.location.href = "./?link=pss";
                }
              });
            }
          } else {
            Swal.fire("Error", "Data Error ?.", "error");
          }
        },
        error: function () {
          window.location.href = "./?link=loclogout";
          console.log(
            "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
          );
        },
      });
    }
  });
});

//-----------------------------------------------------------------------------------------------------------

//Cancel PSS ( by Head Of )
$(CancelPssSHD).on("click", function (e) {
  var idpss = PSSID;
  var nopss = NoPSS;
  var user = Username;
  var jabatan = "HEAD OF";
  var reason = $("#psscancelreason").val();

  Swal.fire({
    title: "<h3>CANCEL PSS Num: " + nopss + "</h3>",
    text: "Are you sure ?!",
    icon: "warning",
    confirmButtonText: "Yes",
    cancelButtonColor: "#8b9da4",
    cancelButtonText: "Back",
    showCancelButton: true,
    allowEnterKey: false,
  }).then((result) => {
    if (result.value) {
      $.ajax({
        type: "POST",
        url: `${restlocpss}cancel_pss`,
        headers: {
          user: vusrnm,
          token: vtoken,
        },
        data: {
          idpss: idpss,
          nopss: nopss,
          reason: reason,
          jabatan: jabatan,
          user: user,
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(JSON.parse(response));
          if (isEmpty(obj)) {
            console.log("Gagal Cancel, data kosong");
          } else if (obj) {
            if (obj.status == false) {
              Swal.fire({
                text: obj.message,
                timer: 1500,
                icon: "warning",
                showConfirmButton: false,
              });
            } else {
              Swal.fire({
                text: "PSS ditolak dan telah kembali ke Designer.",
                icon: "success",
                showConfirmButton: true,
              }).then((result) => {
                if (result.value) {
                  window.location.href = "./?link=pss";
                }
              });
            }
          } else {
            Swal.fire("Error", "Data Error ?.", "error");
          }
        },
        error: function () {
          window.location.href = "./?link=loclogout";
          console.log(
            "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
          );
        },
      });
    }
  });
});

//Copy-Duplikat PSS
$(DuplicatePSS).on("click", function (e) {
  var idpss = PSSID;
  var nopss = NoPSS;

  Swal.fire({
    title: "<h3>Duplicate PSS Num: " + nopss + "</h3>",
    text: "Are you sure ?!",
    icon: "warning",
    confirmButtonText: "Yes",
    cancelButtonColor: "#8b9da4",
    cancelButtonText: "Back",
    showCancelButton: true,
    allowEnterKey: false,
  }).then((result) => {
    if (result.value) {
      $.ajax({
        type: "POST",
        url: `${restlocpss}copy_pss`,
        headers: {
          user: vusrnm,
          token: vtoken,
        },
        data: {
          idpss: idpss,
          nopss: nopss,
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(JSON.parse(response));
          if (isEmpty(obj)) {
            console.log("Gagal Cancel, data kosong");
          } else if (obj) {
            if (obj.status == false) {
              Swal.fire({
                text: obj.message,
                timer: 1500,
                icon: "warning",
                showConfirmButton: false,
              });
            } else {
              Swal.fire({
                text:
                  "PSS telah di duplikasi, silakan klik edit dan tambahkan item yang diperlukan.",
                icon: "success",
                showConfirmButton: true,
              }).then((result) => {
                if (result.value) {
                  window.location.href = "./?link=pss";
                }
              });
            }
          } else {
            Swal.fire("Error", "Data Error ?.", "error");
          }
        },
        error: function () {
          window.location.href = "./?link=loclogout";
          console.log(
            "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
          );
        },
      });
    }
  });
});

//-----------------------------------------------------------------------------------------------------------

//Activate PSS ( by user )
$(ActivatedPss).on("click", function (e) {
  var idpss = PSSID;
  var nopss = $("#HeaderDraftNum").val();
  var user = $("#PSSUser").val();
  // var vusrnm     = getCookie('usrnm');
  // var vtoken     = getCookie('token');
  // var restlocpss = decodeURIComponent(getCookie('restlocpss'));

  Swal.fire({
    title: `<h3>Activate PSS Num: ${nopss}</h3>`,
    text: "Are you sure ?",
    icon: "warning",
    confirmButtonText: "Yes",
    cancelButtonColor: "#8b9da4",
    cancelButtonText: "Back",
    showCancelButton: true,
    allowEnterKey: false,
  }).then((result) => {
    if (result.value) {
      $.ajax({
        type: "POST",
        url: `${restlocpss}active_pss`,
        headers: {
          user: vusrnm,
          token: vtoken,
        },
        data: {
          idpss: idpss,
          nopss: nopss,
          user: user,
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(JSON.parse(response));
          //console.log(obj);
          if (isEmpty(obj)) {
            console.log("Gagal save edit Status PSS, data kosong");
          } else if (obj) {
            if (obj.status == false) {
              Swal.fire({
                text: obj.message,
                timer: 1500,
                icon: "warning",
                showConfirmButton: false,
              });
            } else {
              Swal.fire({
                text: "PSS sudah berubah status menjadi ACTIVE",
                icon: "success",
                showConfirmButton: true,
              }).then((result) => {
                if (result.value) {
                  window.location.href = "./?link=pss";
                }
              });
            }
          } else {
            Swal.fire("Error", "Data Error ?.", "error");
          }
        },
        error: function () {
          window.location.href = "./?link=loclogout";
          console.log(
            "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
          );
        },
      });
    }
  });
});

//Count Character left
$(CountCharLeft).keyup(function () {
  FCountCharLeft();
});

//hide-show Char, Left
$(CountCharLeft).on("focus", function () {
  $("#charleft").show();
});
$(CountCharLeft).on("blur", function () {
  $("#charleft").hide();
});

function FCountCharLeft() {
  var maxLength = 40;
  var textlen = maxLength - $(CountCharLeft).val().length;
  $(".char-count").text(textlen + "/40");
  if (textlen < 10) {
    $(".char-count").removeClass("grey").addClass("red");
  } else {
    $(".char-count").removeClass("red").addClass("grey");
  }
}

//Function Remove Last comma
function removeLastComma(str) {
  return str.replace(/,(\s+)?$/, "");
}

//Datepicker ETA
function DatePickerETA() {
  var today = new Date();
  $(CalETA).calendar({
    type: "date",
    //monthFirst: false,
    minDate: new Date(today.getFullYear(), today.getMonth(), today.getDate()),
    formatter: {
      date: function (date, settings) {
        if (!date) return "";
        var day = date.getDate() + "";
        if (day.length < 2) {
          day = "0" + day;
        }
        var month = date.getMonth() + 1 + "";
        if (month.length < 2) {
          month = "0" + month;
        }
        var year = date.getFullYear();
        return year + "-" + month + "-" + day;
      },
    },
  });
}

//Function Read Data Item PSS
function ReadItemPSSTable() {
  var idpss = PSSID;
  var user = Username;

  if (ResultSign == 0 && StatusPSS != "CANCEL" && EditingRole == "editable") {
    $.ajax({
      type: "POST",
      url: `${restlocpss}table_itempss`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        user: user,
        idpss: idpss,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        if (isEmpty(obj)) {
          console.log('-Empty-');
          $("#ItemListPSStbody").empty();
          // $('.psssigndesigner' ).addClass("disabled");
          $('.psssigndesigner' ).hide();
          $('.psssignsechead' ).addClass("disabled");
          return false;
        } else if (obj) {
          jmlData = obj.length;
          $("#ItemListPSStbody").empty();
          // $('.psssigndesigner' ).removeClass("disabled");
          $('.psssigndesigner' ).show();
          $('.psssignsechead' ).removeClass("disabled");
          if (StatusPSS == "CANCEL") {
            var actdelete = "";
            var delicon = "";
          } else {
            if (StatusDelItem) {
              var actdelete = "actdelete";
              var delicon = "iconcoloredit icon";
            } else {
              var actdelete = "";
              var delicon = "";
            }
          }

          for (a = 0; a < jmlData; a++) {
            if ((obj[a]["link_documents"] !== null && obj[a]["link_documents"] !== "") || (obj[a]["nama_file"] !== null && obj[a]["nama_file"] !== "")) {
              var link ="<span class='listspec' iditem='"+obj[a]["id_item"]+"'><i class='file outline red icon'></i></span>";
              // var upload ="<i class='actupload upload iconcoloredit icon' namaitem='" +obj[a]["description_item"] +"' iditem='" +obj[a]["id_item"] +"'></i>";
              var upload = "<span class='actupload' namaitem='" +obj[a]["description_item"] +"' iditem='" +obj[a]["id_item"] +"' data-tooltip='Upload Spec/Drawing' data-inverted='' data-position='right center'><i class='upload link circular teal icon'></i></span>";
            } else {
              var link = "";
              // var upload ="<i class='actupload upload iconcoloredit icon' namaitem='" +obj[a]["description_item"] +"' iditem='" +obj[a]["id_item"] +"'></i>";
              var upload = "<span class='actupload' namaitem='" +obj[a]["description_item"] +"' iditem='" +obj[a]["id_item"] +"' data-tooltip='Upload Spec/Drawing' data-inverted='' data-position='right center'><i class='upload link circular teal icon'></i></span>";
            }
            if (obj[a]["req_pinbl"] == "LENGKAP") {
              var pin = "L";
            } else {
              var pin = obj[a]["req_pinbl"];
            }

            var tahap = obj[a]["tahap"];
            
            if (tahap == null) {
              tahap = "";
            }
            
            if (obj[a]["status_item"] == null) {
              obj[a]["status_item"] = "";
            }
            
            if (obj[a]["nama_operator"]) {
              var oprname =
                obj[a]["nama_operator"].length > 10 ? obj[a]["nama_operator"].substring(0, 10) + "..." : obj[a]["nama_operator"];
            } else {
              var oprname = "-";
            }

            $("#ItemListPSS")
              .find("tbody")
              .append(
                "<tr id='"+a+"'>"+
                  // "<td><i class='edit outline actedit iconcoloredit icon' id='"+obj[a]["id_item"]+"'></i>"+"</td>"+
                  "<td><span class='actedit' id='"+obj[a]["id_item"]+"' data-tooltip='Edit Item' data-inverted='' data-position='right center'><i class='pencil alternate link circular teal icon'></i></span></td>"+
                  "<td></td>"+
                  "<td>"+link+"</a> "+obj[a]["description_item"]+"</td>"+
                  "<td>"+upload+"</td>"+
                  "</td><td class='center' style='text-align: center;'>"+tahap+"</td>"+
                  "<td class='center'>"+obj[a]["status_item"]+"</td>"+
                  "<td class='center'>"+obj[a]["vendor_material_number"]+"</td>"+
                  "<td class='center'>"+obj[a]["plant"]+"</td>"+
                  "<td class='center'>"+obj[a]["sloc"] +"</td>"+
                  "<td class='center'>"+obj[a]["qty_sample"] +" <sub>"+obj[a]["base_unit"]+"</td>"+
                  "<td class='center'>"+moment(obj[a]["eta_sample"]).format('ddd, DD MMM YYYY')+"</td>"+
                  "<td class='center'>"+pin+"</td>"+
                  "<td class='center'>"+obj[a]["note"]+"</td>"+
                  "<td class='center'>"+oprname+"</td>"+
                  // "<td class='center'><i class='trash "+actdelete+" "+delicon+"' nm='"+obj[a]["description_item"]+"' id='"+obj[a]["id_item"]+"'></i></td>"+
                  "<td><span class='"+actdelete+" "+delicon+"' nm='"+obj[a]["description_item"]+"' id='"+obj[a]["id_item"]+"' data-tooltip='Delete Item' data-inverted='' data-position='left center'><i class='trash link circular red icon'></i></span></td>"+
                "</tr>"
              );
          }
        }
        DelItemPSSTable();
        UploadSpec();
        EditItemPSSTable();
        SpecDrwList();
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });
  // } else if (
  //   ResultSign == 0 &&
  //   StatusPSS != "CANCEL" &&
  //   EditingRole == "editnegosiator"
  // ) {
    //----- SCRIPT INI DI DISABLE KARENA SUDAH ADA DI HALAMAN EDIT ITEM NEGOSIATOR
    // $.ajax({
    //   type  : "POST",
    //   url   : `${restlocpss}table_itempss`,
    //   headers : {
    //     user  : vusrnm,
    //     token : vtoken
    //   },
    //   data    : {
    //     user  : user,
    //     idpss : idpss
    //   },
    //   cache   : false,
    //   success: function (response){
    //     var obj = JSON.parse(response);
    //     if(isEmpty(obj)) {
    //       //console.log('-Empty-');
    //       $('#ItemListPSStbody').empty();
    //       //$('#psssigndesigner' ).removeClass("green");
    //       return false;
    //     } else if(obj) {
    //       jmlData = obj.length;
    //       $('#ItemListPSStbody').empty();
    //       //$('#psssigndesigner' ).addClass("green");
    //       if (StatusPSS =="CANCEL"){
    //         var actdelete = "";
    //         var delicon = "";
    //       } else {
    //         if (StatusDelItem){
    //           var actdelete = "actdelete";
    //           var delicon = "iconcoloredit icon";
    //         } else {
    //           var actdelete = "";
    //           var delicon = "";
    //         }
    //       }
    //       for(a = 0; a < jmlData; a++){
    //         if(obj[a]["no_itempss"] == obj[a]["refer_noitem"]){
    //           var upload  = "";
    //           var delitem = "";
    //           var addplus = "<i class='plus square outline blue icon'></i>";
    //           if(obj[a]["link_documents"]!==""){
    //             var link   = "<a target='_blank' href='"+obj[a]["link_documents"]+"'>"
    //           } else if((obj[a]["file"]!==null) && (obj[a]["file"]!=="")){
    //             var link   = "<a target='_blank' href='"+filelocpss+obj[a]["file"]+"'>"
    //           } else {
    //             var link   = "<span class='nospec'>";
    //           }
    //         } else {
    //           var addplus = "";
    //           var delitem = "<i class='trash "+actdelete+" "+delicon+"' nm='"+obj[a]["description_item"]+"' id='"+obj[a]["id_item"]+"'></i>";
    //           if(obj[a]["link_documents"]!==""){
    //             var link   = "<a target='_blank' href='"+obj[a]["link_documents"]+"'>"
    //             var upload = "<i class='linkify green icon'></i>";
    //           } else if((obj[a]["file"]!==null) && (obj[a]["file"]!=="")){
    //             var link   = "<a target='_blank' href='"+filelocpss+obj[a]["file"]+"'>"
    //             var upload = "<i class='actupload upload iconcoloredit icon' namaitem='"+obj[a]["description_item"]+"' iditem='"+obj[a]["id_item"]+"'></i>";
    //           } else {
    //             var link   = "<span class='nospec'>";
    //             var upload = "<i class='actupload upload iconcoloredit icon' namaitem='"+obj[a]["description_item"]+"' iditem='"+obj[a]["id_item"]+"'></i>";
    //           }
    //         }
    //         $('#ItemListPSS').find('tbody').append(
    //         "<tr id='"+a+"'><td><i class='edit outline actedit iconcoloredit icon' id='"+obj[a]["id_item"]+"'></i>"+
    //         "</td><td>"+addplus+"</td>"+
    //         "</td><td>"+link+" "+obj[a]["description_item"]+"</a>"+
    //         "</td><td>"+upload+"</td>"+
    //         "</td><td class='center'>"+obj[a]["vendor_material_number"]+
    //         "</td><td class='center'>"+obj[a]["plant"]+
    //         "</td><td class='center'>"+obj[a]["sloc"]+
    //         "</td><td class='center'>"+obj[a]["qty_sample"]+
    //         "</td><td class='center'>"+obj[a]["base_unit"]+
    //         "</td><td class='center'>"+moment(obj[a]["eta_sample"]).format("DD-MM-YYYY")+
    //         "</td><td class='center'>"+obj[a]["note"]+
    //         "</td><td class='center'>"+delitem+"</td></tr>");
    //       }
    //     }
    //     DelItemPSSTable();
    //     UploadSpec();
    //     EditItemPSSTable();
    //   },
    //   error: function(){
    //     window.location.href = "./?link=loclogout";
    //     console.log('Server tidak merespon, segera hubungi Administrator di ext. 3553 !');
    //   }
    // });
  } else {
    $.ajax({
      type: "POST",
      url: `${restlocpss}table_itempss`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        user: user,
        idpss: idpss,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        if (isEmpty(obj)) {
          console.log('-Empty-');
          $("#ItemListPSStbody").empty();
          $('.psssigndesigner' ).addClass("disabled");
          $('.psssignsechead' ).addClass("disabled");
          return false;
        } else if (obj) {
          jmlData = obj.length;
          $("#ItemListPSStbody").empty();
          $('.psssigndesigner' ).removeClass("disabled");
          $('.psssignsechead' ).removeClass("disabled");
          for (a = 0; a < jmlData; a++) {

            if (obj[a]["no_itempss"] == obj[a]["refer_noitem"]) {
              var icon = "";
              var subitem = "";

              if ((obj[a]["link_documents"] !== null && obj[a]["link_documents"] !== "") || (obj[a]["nama_file"] !== null && obj[a]["nama_file"] !== "")) {
                var link ="<span class='listspec' iditem='"+obj[a]["id_item"]+"'><i class='file outline red icon'></i></span>";
              } else {
                var link = "";
              }

            } else {
              var icon = "<i class='vertically flipped share grey icon '></i>";
              var subitem = "subitem";
              var link = "";
            }
            
            var tahap = obj[a]["tahap"];


            if (tahap == null) {
              tahap = "";
            }
            if (obj[a]["status_item"] == null) {
              obj[a]["status_item"] = "";
            }
            if (obj[a]["req_pinbl"] == "LENGKAP") {
              var pin = "L";
            } else {
              var pin = obj[a]["req_pinbl"];
            }
            if (obj[a]["nama_operator"]) {
              var oprname =
                obj[a]["nama_operator"].length > 10
                  ? obj[a]["nama_operator"].substring(0, 10) + "..."
                  : obj[a]["nama_operator"];
            } else {
              var oprname = "-";
            }

            $("#ItemListPSS")
              .find("tbody")
              .append(
                "<tr class='"+subitem +"' id='"+a+"'>"+
                  "<td></td>"+
                  "<td></td>"+
                  "<td>"+icon+" "+link +"</a>"+obj[a]["description_item"]+"</td>"+
                  "<td></td>"+
                  "<td class='center' style='text-align: center;'>"+tahap+"</td>"+
                  "<td class='center'>"+obj[a]["status_item"]+"</td>"+
                  "<td class='center'>"+obj[a]["vendor_material_number"]+"</td>"+
                  "<td class='center'>"+obj[a]["plant"]+"</td>"+
                  "<td class='center'>"+obj[a]["sloc"]+"</td>"+
                  "<td class='center'>"+obj[a]["qty_sample"]+" <sub>"+obj[a]["base_unit"]+"</td>"+
                  "<td class='center'>"+moment(obj[a]["eta_sample"]).format('ddd, DD MMM YYYY')+"</td>"+
                  "<td class='center'>"+pin+"</td>"+
                  "<td class='center'>"+obj[a]["note"]+"</td>"+
                  "<td class='center'>"+oprname+"</td>"+
                  "<td class='center'></td>"+
                  "</tr>"
              );
          }
        }
        SpecDrwList();
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });
  }
}

//Function Read All Data Item PSS
function ReadAllItem() {
  var idpss = PSSID;
  $.ajax({
    type: "POST",
    url: `${restlocpss}read_itempss`,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: { idpss: idpss },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      if (isEmpty(obj)) {
        console.log("Gagal load, data kosong");
        return false;
      } else if (obj) {
        jmlData = obj.length;
        $("#DetailItemData").empty();
        for (a = 0; a < jmlData; a++) {
          if (obj[a]["nama_file"] !== null && obj[a]["nama_file"] !== "") {
            var file = "<i class='check icon'></i>";
          } else {
            var file = "";
          }
          if (
            obj[a]["link_documents"] !== null &&
            obj[a]["link_documents"] !== ""
          ) {
            var linkdoc = "<i class='check icon'></i>";
          } else {
            var linkdoc = "";
          }
          $("#DetailItem")
            .find("tbody")
            .append(
              "<tr><td>" +
                obj[a]["description_item"] +
                "</td><td class='center'>" +
                obj[a]["vendor_material_number"] +
                "</td><td class='center'>" +
                obj[a]["plant"] +
                "</td><td class='center'>" +
                obj[a]["sloc"] +
                "</td><td class='center'>" +
                obj[a]["qty_sample"] +
                "</td><td class='center'>" +
                obj[a]["base_unit"] +
                "</td><td class='center'>" +
                moment(obj[a]["eta_sample"]).format('ddd, DD MMM YYYY') +
                "</td><td class='center'>" +
                obj[a]["reference_material"] +
                "</td><td class='center'>" +
                obj[a]["note"] +
                "</td><td class='center'>" +
                obj[a]["pic_vendor_inhouse"] +
                "</td><td class='center'>" +
                linkdoc +
                "</td><td class='center'>" +
                file +
                "</td><td class='center'>" +
                obj[a]["currency"] +
                "</td><td class='center'>" +
                obj[a]["target_price"] +
                "</td><td class='center'>" +
                obj[a]["lead_time_part"] +
                "</td></tr>"
            );
        }
      }
    },
    error: function () {
      window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
}

function ReadPickItem() {
  var idpss = PSSID;
  var reffpss = ReffIDPSS;
  $.ajax({
    type: "POST",
    url: `${restlocpss}read_itemreff`,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: {
      idpss: idpss,
      reffpss: reffpss,
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      if (isEmpty(obj)) {
        console.log("Gagal load, data kosong");
        return false;
      } else if (obj) {
        jmlData = obj.length;
        $("#ListReffItem").empty();
        for (a = 0; a < jmlData; a++) {
          if (obj[a]["vendor"] == null) {
            obj[a]["vendor"] = "-";
          }
          $("#ListReffItem").append(
            "<div class='ui checkbox'>" +
              "<input type='checkbox' name='itempss' value='" +
              obj[a]["id_item"] +
              "'>" +
              "<label><b>" +
              obj[a]["description_item"] +
              "</b> - Vendor : <i>" +
              obj[a]["vendor"] +
              "</i></label>" +
              "</div>" +
              "</p>" +
              "<p>"
          );
        }
      }
    },
    error: function () {
      window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
}

//Save pick item
$("#SavePickItem").on("click", function () {
  var allitem = [];
  var idpss = PSSID;
  var reffpss = ReffIDPSS;

  $.each($("input[name='itempss']:checked"), function () {
    allitem.push($(this).val());
  });

  $.ajax({
    type: "POST",
    url: `${restlocpss}save_itemreff`,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: {
      idpss: idpss,
      reffpss: reffpss,
      allitem: allitem.join(", ")
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      //console.log(obj);
      if (obj.status == false) {
        Swal.fire(
          "Error",
          "Ada kendal di koneksi/database, data tidak tersimpan !",
          "error"
        );
      } else {
        Swal.fire({
          title: "Saved!",
          text: "Item sudah berhasil ditambahkan.",
          timer: 1500,
          position: "top-end",
          icon: "success",
          showConfirmButton: false,
        });
        
      }
      ReadItemPSSTable();
      $(".windowpickitem").modal("hide");
    },
    error: function () {
      window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
});

//Function Read All Data Item PSS
function ReadHistoryNego() {
  var idpss = PSSID;
  $.ajax({
    type: "POST",
    url: `${restlocpss}table_historynegosiator`,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: { idpss: idpss },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      if (isEmpty(obj)) {
        console.log("Gagal load, data kosong");
        return false;
      } else if (obj) {
        jmlData = obj.length;
        $("#NegoChangeTable").empty();
        for (a = 0; a < jmlData; a++) {
          obj[0]["nego_semula"] = "";
          $("#NegoChangeList")
            .find("tbody")
            .append(
              "<tr>"+
                "<td>"+moment(obj[a]["date"]).format('ddd, DD MMM YYYY')+"</td>"+
                "<td class='center'>"+obj[a]["nego_semula"]+"</td>"+
                "<td class='center'>"+obj[a]["nego_menjadi"]+"</td>"+
                "<td class='center'>"+obj[a]["pic"]+"</td>"+
              "</tr>"
            );
        }
      }
    },
    error: function () {
      window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
}

//Function Delete Item PSS
function DelItemPSSTable() {
  $(".actdelete").on("click", function (e) {
    var eid = $(this).attr("id");
    var enm = $(this).attr("nm");
    Swal.fire({
      title: "<h3>Remove Request Item</h3>",
      text: enm,
      icon: "warning",
      confirmButtonText: "Yes",
      showCancelButton: true,
      cancelButtonText: "Back",
    }).then((result) => {
      if (result.value) {
        $.ajax({
          type: "POST",
          url: `${restlocpss}delete_itempss`,
          headers: {
            user: vusrnm,
            token: vtoken,
          },
          data: {
            id_itempss: eid,
          },
          cache: false,
          success: function (response) {
            var obj = JSON.parse(JSON.parse(response));
            if (obj.status == false) {
              Swal.fire(
                "Error",
                "Ada kendal di koneksi/database, data tidak tersimpan !",
                "error"
              );
            } else {
              Swal.fire({
                title: "Deleted!",
                text: "Item yang anda maksud sudah dihapus dari database.",
                timer: 1500,
                position: "top-end",
                icon: "success",
                showConfirmButton: false,
              });
              ReadItemPSSTable();
            }
          },
          error: function () {
            window.location.href = "./?link=loclogout";
            console.log(
              "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
            );
          },
        });
      }
    });
  });
}

function EditItemPSSTable() {
  $(".actedit").on("click", function (e) {
    var iditem = $(this).attr("id");
    $.ajax({
      type: "POST",
      url: `${restlocpss}edit_item`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: { iditem: iditem },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(JSON.parse(response));
        if (isEmpty(obj)) {
          console.log("Gagal load tabel, data kosong");
        } else if (obj) {
          if (obj.status == false) {
            Swal.fire(
              "Error",
              "Ada kendal di koneksi/database, data gagal diload !",
              "error"
            );
          } else {
            var plantss = obj[0]["plant"];
            var plantarray = plantss.split(",");
            $(".windowadditem").modal("show");
            $(".AddItemText").text("EDIT REQUEST ITEM");
            $("#AddIdItemReq").val(iditem);
            $("#AddItemDescription").val(obj[0]["description_item"]);
            $("#AddItemVendorMatNum").val(obj[0]["vendor_material_number"]);
            $("#AddItemPlant").dropdown("clear");
            $("#AddItemPlant").dropdown("set selected", plantarray);
            $("#AddItemQtySample").val(obj[0]["qty_sample"]);

            $("#AddItemETASample").val(obj[0]["eta_sample"]);
            $("#AddItemSLoc").val(obj[0]["sloc"]);
            $("#AddItemBaseUnit").val(obj[0]["base_unit"]);
            $("#AddItemStandarUse").val(obj[0]["std_used"]);
            $("#AddItemRefMaterial").val(obj[0]["reference_material"]);
            $("#AddItemNote").val(obj[0]["note"]);
            $("#AddItemPICVendorInHouse").val(obj[0]["pic_vendor_inhouse"]);
            $("#AddItemLinkDocument").val(obj[0]["link_documents"]);
            $("#AddItemPrice").val(obj[0]["target_price"]);
            $("#AddItemCurrency").dropdown("set selected", obj[0]["currency"]);
            $("#AddItemCharacteristic").dropdown("clear");
            $("#AddItemCharacteristic").dropdown(
              "set selected",
              obj[0]["lead_time_part"]
            );
            DatePickerETA();
            FCountCharLeft();

            //vendor autocomplete
            $(".ui.search.vendor").search({
              minCharacters: 1,
              apiSettings: {
                url: "2_psonline/_autocompleteDNSN.php?q={query}",
              },
              fields: {
                results: "data",
                title: "id",
                description: "desc",
              },
            });

            //baseunit autocomplete
            $(".ui.search.baseunit").search({
              minCharacters: 1,
              apiSettings: {
                url: "2_psonline/_autocompletebaseunit.php?q={query}",
              },
              fields: {
                results: "data",
                title: "sap",
                description: "description",
              },
            });

            //sloc autocomplete base-on plant
            $("#AddItemSLoc").focus(function () {
              var plant = $("#AddItemPlant").val();
              var splant = plant.toString();
              $(".ui.search.sloc").search({
                minCharacters: 1,
                apiSettings: {
                  url: "2_psonline/_autocompletesloc.php?q={query}&p=" + splant,
                },
                fields: {
                  results: "data",
                  title: "value",
                  description: "storage_location_name",
                },
              });
            });

            //ref-material autocomplete
            $("#AddItemRefMaterial").focus(function () {
              var plant = $("#AddItemPlant").val();
              var splant = plant.toString();
              $(".ui.search.refmat").search({
                minCharacters: 2,
                apiSettings: {
                  url:
                    "2_psonline/_autocompletematerial.php?q={query}&p=" + splant,
                },
                fields: {
                  results: "data",
                  title: "MATNR",
                  description: "MAKTX"
                },
              });
            });

            //vendorinhouse autocomplete
            // $('.ui.search.vendorinhouse').search({
            //   minCharacters : 1,
            //   apiSettings   : {
            //     url: '2_psonline/_autocompletevendorname.php?q={query}'
            //   },
            //   fields: {
            //     results : 'data',
            //     title   : 'id',
            //     description : 'desc'
            //   },
            // });

            var day = $("#AddItemCharacteristic")
              .find(":selected")
              .attr("charday");
            $("#AddItemLeadTime").val(day);

            //Add Characteristic Lead Time
            $("#AddItemCharacteristic").on("change", function (e) {
              var day = $("#AddItemCharacteristic")
                .find(":selected")
                .attr("charday");
              $("#AddItemLeadTime").val(day);
            });

            //Add comma separator
            $("#AddItemPrice").number(true, 3);
          }
        }
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        Swal.fire(
          "Error",
          "Ada kendal di koneksi/database, data gagal diload !",
          "error"
        );
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });
  });
}

//Function Upload File
function UploadSpec() {
  $(".actupload").on("click", function (e) {
    var idpss = PSSID;
    var iditem = $(this).attr("iditem");
    var namaitem = $(this).attr("namaitem");

    $("#UploadedSpec").text("");
    $("#UploadedLink").text("");
    $("#trashfile").text('');
    $("#trashlink").text('');
    $("#FileSpec").val("");
    $("#LinkSpec").val("");
    $("#idpssupload").val(idpss);
    $("#iditemupload").val(iditem);
    $("#namaitem").html(namaitem);
    $(".windowuploadspec").modal("show");

    $.ajax({
      type: "POST",
      url: `${restlocpss}read_upload`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: { iditem: iditem },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(JSON.parse(response));
        if (isEmpty(obj)) {
          console.log("Gagal Load Data mas brooo, data error");
        } else if (obj) {
          if (obj.status == false) {
            console.log("Gagal Load Data mas brooo, data error");
          } else {
            if (obj[0]["nama_file"]!== null && obj[0]["nama_file"]){
              var filename = obj[0]["nama_file"].replace("SpecDesigner/", "");
              var fname = filename.split('_');
              var filen = fname[2];
              $("#trashfile").html('<i class="trash alternate outline red link icon listspec deletefile"></i>');
            } else {
              var filen = "";
            }
            var link = obj[0]["link_documents"];
            if(link!==""){
              $("#trashlink").html('<i class="trash alternate outline red link icon listspec deletelink"></i>');
            }

            $("#NamaFile").val(namaitem);
            $("#UploadedSpec").html(`<a target='_blank' href='${filelocpss}${obj[0]["nama_file"]}'>${filen}</a>`);
            $("#UploadedLink").html(`<a target='_blank' href='${link}'>${link}</a>`);
          }
        } else {
          Swal.fire(
            "Error",
            "Ada kendal di koneksi/database, data tidak tersimpan !",
            "error"
          );
        }
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        Swal.fire(
          "Error",
          "Ada kendal di koneksi/database, data gagal diload !",
          "error"
        );
      },
    });
  });
}



function UploadItem(){
  $("#uploaditem").on("click", function (e) {
    $(".windowuploaditem").modal("show");
  });
}

//Function Spec/Drawing List
function SpecDrwList() {
  $(".listspec").on("click", function (e) {
    $(".windowdrwspec").modal("show");
    var iditem = $(this).attr("iditem");

    $.ajax({
      type: "POST",
      url: `${restlocpss}read_reportdrawing`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        iditem: iditem
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        if (isEmpty(obj)) {
          console.log("Gagal load, data kosong");
          return false;
        } else if (obj) {
          jmlData = obj.length;
          $("#SpecList").empty();
          for (a = 0; a < jmlData; a++) {
            
            if(obj[a]["link_documents"]!==null && obj[a]["link_documents"]){
              var iconlink = "<i class='linkify icon'></i>";
            } else {
              obj[a]["link_documents"] ="";
              var iconlink = "";
            }
            
            if (obj[a]["nama_file"]!==null && obj[a]["nama_file"]){
              var filename = obj[a]["nama_file"].replace("SpecDesigner/", "");
              var fname = filename.split('_');
              var filen = fname[2];
              var iconfile = "<i class='file outline red icon'></i>";
            } else {
              var filen = "";
              var iconfile = "";
            }
            
            $("#TableSpecList").find("tbody").append(
              "<tr>"+
                "<td>"+moment(obj[a]["created_date"]).format('ddd, DD MMM YYYY')+"</td>"+
                "<td class='center'><a href='"+obj[a]["link_documents"]+"' target='_blank'>" +iconlink+
                obj[a]["link_documents"]+"</td>"+
                "<td class='center'><a href='../RND_Upload/"+obj[a]["nama_file"]+"' target='_blank'>" +iconfile+filen +"</a>"+"</td>"+
                "<td class='center'>"+obj[a]["user"]+"</td>"+
              "</tr>"
            );
          }
        }
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });


  });
}




//validasi mandatory input untuk reff material
$("#AddItemPrice").on("keyup", function () {
  var targetprice = $("#AddItemPrice").val();
  var a = Number(targetprice) + 0;
  if (targetprice && a !== 0) {
    $("#AddItemRefMaterial").removeClass("mandatoryclass");
  } else {
    $("#AddItemRefMaterial").addClass("mandatoryclass");
  }
});

//Upload File
$("#UploadButtonSave").on("click", function () {
  var file_data = $("#FileSpec").prop("files")[0];
  var namaitem = $("#namaitem").text();
  var link = $("#LinkSpec").val();
  var idpss = $("#idpssupload").val();
  var reqid = $("#iditemupload").val();
  var user = Username;
  var form_data = new FormData();
  form_data.append("file", file_data);
  form_data.append("namaitem", namaitem);
  form_data.append("link", link);
  form_data.append("idpss", idpss);
  form_data.append("reqid", reqid);
  form_data.append("user", user);
  $.ajax({
    url: `${restlocpss}upload_spec`,
    dataType: "text",
    cache: false,
    contentType: false,
    processData: false,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: form_data,
    type: "post",
    success: function (response) {
      var obj = JSON.parse(JSON.parse(response));
      if (isEmpty(obj)) {
        console.log("Gagal Simpan mas brooo, data error");
      } else if (obj) {
        if (obj.status == false) {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: "warning",
            showConfirmButton: false,
          });
        } else {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: "success",
            showConfirmButton: false,
          });
        }
        ReadItemPSSTable();
      } else {
        Swal.fire(
          "Error",
          "Ada kendal di koneksi/database, data tidak tersimpan !",
          "error"
        );
      }
    },
    error: function () {
      window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
  $(".windowuploadspec").modal("hide");
});


//Upload File item PSS
$("#UploadButtonSaveItem").on("click", function () {
  var file_data = $("#FileItem").prop("files")[0];
  var idpss = PSSID;
  var user = Username;
  var form_data = new FormData();
  form_data.append("import_excel", file_data);
  form_data.append("pssid", idpss);
  form_data.append("user", user);
  $.ajax({
    url: `${restlocuploadexcel}UploadExcelDesigner`,
    dataType: "text",
    cache: false,
    contentType: false,
    processData: false,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: form_data,
    type: "post",
    success: function (response) {
      var obj = JSON.parse(JSON.parse(response));
      if (isEmpty(obj)) {
        console.log("Gagal Simpan mas brooo, data error");
      } else if (obj) {
        if (obj.status == false) {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: "warning",
            showConfirmButton: false,
          });
        } else {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: "success",
            showConfirmButton: false,
          });
        }
        ReadItemPSSTable();
      } else {
        Swal.fire(
          "Error",
          "Ada kendal di koneksi/database, data tidak tersimpan !",
          "error"
        );
      }
    },
    error: function () {
      // window.location.href = "./?link=loclogout";
      console.log(
        "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
      );
    },
  });
  $(".windowuploaditem").modal("hide");
});

//Delete File Spec
$("#trashfile").on("click", function () {
  var iditem = $("#iditemupload").val();
  Swal.fire({
    title: "<h3>Hapus File Spec ?</h3>",
    icon: "warning",
    confirmButtonText: "Ya",
    showCancelButton: true,
  }).then((result) => {
    if (result.value) {
      $.ajax({
        type: "POST",
        url: `${restlocpss}delete_spec`,
        headers: {
          user: vusrnm,
          token: vtoken,
        },
        data: {
          iditem: iditem
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(JSON.parse(response));
          if (obj.status == false) {
            Swal.fire(
              "Error",
              "Ada kendal di koneksi/database, data tidak tersimpan !",
              "error"
            );
          } else {
            Swal.fire({
              title: "Deleted!",
              text: "Spec yang anda maksud sudah dihapus dari database.",
              timer: 1500,
              position: "top-end",
              icon: "success",
              showConfirmButton: false,
            });
            ReadItemPSSTable();
          }
        },
        error: function () {
          window.location.href = "./?link=loclogout";
          Swal.fire(
            "Error",
            "Server tidak merespon, segera hubungi Administrator di ext. 3553 !",
            "error"
          );
        },
      });
    }
  });
  $(".windowuploadspec").modal("hide");
});


//pssid

//Delete File Link
$("#trashlink").on("click", function () {
  var iditem = $("#iditemupload").val();
  Swal.fire({
    title: "<h3>Hapus Link Documents ?</h3>",
    icon: "warning",
    confirmButtonText: "Ya",
    showCancelButton: true,
  }).then((result) => {
    if (result.value) {
      $.ajax({
        type: "POST",
        url: `${restlocpss}delete_link`,
        headers: {
          user: vusrnm,
          token: vtoken,
        },
        data: {
          iditem: iditem
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(JSON.parse(response));
          if (obj.status == false) {
            Swal.fire(
              "Error",
              "Ada kendal di koneksi/database, data tidak tersimpan !",
              "error"
            );
          } else {
            Swal.fire({
              title: "Deleted!",
              text: "Link Documents yang anda maksud sudah dihapus dari database.",
              timer: 1500,
              position: "top-end",
              icon: "success",
              showConfirmButton: false,
            });
            ReadItemPSSTable();
          }
        },
        error: function () {
          window.location.href = "./?link=loclogout";
          Swal.fire(
            "Error",
            "Server tidak merespon, segera hubungi Administrator di ext. 3553 !",
            "error"
          );
        },
      });
    }
  });
  $(".windowuploadspec").modal("hide");
});



//-----------------------------------------------------------------------------------------------------------

$(document).ready(function () {
  ReadItemPSSTable();
  UploadItem();
  //activate popup ms project description
  $(".descpopup").popup();

  $(".ui.checkbox").checkbox();

  //Input Number Only
  $("#AddItemQtySample").bind("keyup paste", function () {
    this.value = this.value.replace(/[^0-9]/g, "");
  });

  //klik link PSS List ( PSS Home )
  $("#tabpsslist").on("click", function () {
    window.location.href = "./?link=pss";
  });
  $("#tabihp").on("click", function () {
    window.location.href = "./?link=ihp";
  });
  $("#tabihpeval").on("click", function () {
    window.location.href = "./?link=ihpevaluation";
  });
  
  $('.tabuserguide').on('click', function() {
    window.location.href = "./?link=guidepss";
  });
  $('.tabsuratgolive').on('click', function() {
    window.location.href = "./?link=golivepss";
  });
  $('.tabhasilmonitoring').on('click', function() {
    window.location.href = "./?link=monitorpss";
  });
  $('.tabversion').on('click', function() {
    window.location.href = "./?link=versionhistory&app=PSS";
  });
  $("#tabpssreport").on("click", function () {
    window.location.href = "./?link=reportingpss";
  });

  //klik back
  $("#HeaderButtonBack").on("click", function () {
    window.location.href = "./?link=pss";
  });

  //Edit PSS Link
  $("#HeaderEdit").on("click", function () {
    var eidpss = PSSID;
    var nonceValue = decodeURIComponent(getCookie("nonceValue"));
    let encryption = new Encryption();
    var eidpssENC = encryption.encrypt(eidpss, nonceValue);
    window.location.href = "./?link=pssheader&i=" + eidpssENC;
  });

  //Add Item PSS
  $("#pssadditem").on("click", function (e) {
    $(".windowadditem").modal("show");
    $("#AddIdItemReq").val("");
    //$("#AddItemQtySample").val('');
    $("#AddItemLinkDocument").val("");
    DatePickerETA();
    $(".char-count").text("40/40");

    //vendor autocomplete
    $(".ui.search.vendor").search({
      minCharacters: 1,
      apiSettings: {
        url: "2_psonline/_autocompleteDNSN.php?q={query}",
      },
      fields: {
        results: "data",
        title: "id",
        description: "desc",
      },
    });

    //baseunit autocomplete
    $(".ui.search.baseunit").search({
      minCharacters: 1,
      apiSettings: {
        url: "2_psonline/_autocompletebaseunit.php?q={query}",
      },
      fields: {
        results: "data",
        title: "sap",
        description: "description",
      },
    });

    //sloc autocomplete base-on plant
    $("#AddItemSLoc").focus(function () {
      var plant = $("#AddItemPlant").val();
      var splant = plant.toString();
      $(".ui.search.sloc").search({
        minCharacters: 1,
        apiSettings: {
          url: "2_psonline/_autocompletesloc.php?q={query}&p=" + splant,
        },
        fields: {
          results: "data",
          title: "value",
          description: "storage_location_name",
        },
      });
    });

    //ref-material autocomplete
    $("#AddItemRefMaterial").focus(function () {
      var plant = $("#AddItemPlant").val();
      var splant = plant.toString();
      $(".ui.search.refmat").search({
        minCharacters: 2,
        apiSettings: {
          url: "2_psonline/_autocompletematerial.php?q={query}&p=" + splant,
        },
        fields: {
          results: "data",
          title: "MATNR",
          description: "MAKTX"
        },
      });
    });

    //vendorinhouse autocomplete
    // $('.ui.search.vendorinhouse').search({
    //   minCharacters : 1,
    //   apiSettings   : {
    //     url: '2_psonline/_autocompletevendorname.php?q={query}'
    //   },
    //   fields: {
    //     results : 'data',
    //     title   : 'id',
    //     description : 'desc'
    //   },
    // });

    //Add Characteristic Lead Time
    $("#AddItemCharacteristic").on("change", function (e) {
      var day = $("#AddItemCharacteristic").find(":selected").attr("charday");
      $("#AddItemLeadTime").val(day);
    });

    //Item Plant
    $("#AddItemPlant").on("change", function (e) {
      var plant = $("#AddItemPlant").val();
      var skm = plant.toString();
      if (skm == "SKM") {
        //console.log('only')
        $("#AddItemSLoc").toggleClass("mandatoryclass");
      } else {
        $("#AddItemSLoc").addClass("mandatoryclass");
      }
    });

    //Add comma separator
    $("#AddItemPrice").number(true, 3);
  });

  //Save Add Item
  $("#AddItemButtonSave").on("click", function (e) {
    SaveItem();
  });

  //Pick Item
  $("#psspickitem").on("click", function (e) {
    $(".windowpickitem").modal("show");
    ReadPickItem();
  });

  //Show Detail
  $("#showallitem").on("click", function (e) {
    $(".windowdetailitem").modal("show");
    ReadAllItem();
  });

  //Show Negosiator
  $(".editpssnego").on("click", function (e) {
    $(".windownegosiator").modal("show");
    $(".TitleNegoList").html(
      'TABEL NAMA NEGOSIATOR <br><span class="infoheader">beserta Handling Part-nya</span>'
    );
    Master();
  });

  //Show History Negosiator
  $(".historynego").on("click", function (e) {
    $(".windowhistorynego").modal("show");
    ReadHistoryNego();
  });

  //Change Status PSS
  $(".changestspss").on("click", function (e) {
    $(".windowchangestatuspss").modal("show");
    //ReadHistoryNego();
  });

  //Show Reason-CancelPSS Dialog
  $("#cancelpss").on("click", function (e) {
    $(".windowreason").modal("show");
  });

  //Back Close Modal Add Item
  $(".CloseModal").on("click", function (e) {
    $(".windowadditem").modal("hide");
    $(".windowuploadspec").modal("hide");
    $(".windowdrwspec").modal("hide");
    $(".windowdetailitem").modal("hide");
    $(".windowhistorynego").modal("hide");
    $(".windownegosiator").modal("hide");
    $(".windowpickitem").modal("hide");
    $(".windowreason").modal("hide");
    $(".windowchangestatuspss").modal("hide");
    $(".windowuploaditem").modal("hide");
  });

  //Back Close Modal Upload
  // $("#UploadButtonBack").on("click", function (e) {
  //   $(".windowuploadspec").modal("hide");
  // });
  $("#ChangePSSButtonBack").on("click", function (e) {
    $(".windowchangestatuspss").modal("hide");
  });

  $("#PickItemButtonBack").on("click", function (e) {
    $(".windowpickitem").modal("hide");
  });

  $("#downloadtemplate").on("click", function (e) {

    Swal.fire({
      title: "<h3>Perhatian Pengisian Template</h3>",
      html: "Lengkapi data item dalam file ini yg nantinya akan diinput dengan cara diupload.<br>Data item yang di tarik sistem adalah dimulai baris 2.<br>Input mandatory di tandai kolom warna kuning.<br>",
      confirmButtonText: "Download",
      showCancelButton: true,
      cancelButtonText: "Tutup",
    }).then((result) => {
      if (result.value) {
        
        $.redirect(
          "../RND/2_psonline/_template_itempssdesigner.xlsx",
          "POST",
          "_blank"
        );
      }
    });

    
  });


  

  // table negosiator
  var MTable = $("#Master").DataTable({
    dom:
      "<'ui grid'" +
      "<'row'" +
      "<'left aligned ten wide column'>" +
      "<'right aligned six wide column'>" +
      ">" +
      "<'row dt-table'" +
      "<'sixteen wide column'tr>" +
      ">" +
      "<'row'" +
      "<'left aligned ten wide column'f>" +
      "<'right aligned six wide column'p>" +
      ">" +
      ">",
    stateSave: false,
    pageLength: 10,
    data: [],
    order: [[0, "asc"]],
    language: {
      sLengthMenu: "_MENU_",
      search: "",
      searchPlaceholder: "Search..",
    },
    pagingType: "simple",
    columnDefs: [{ type: "natural", targets: 0 }],
    columns: [
      {
        data: null,
        render: function (data, type, row) {
          return (
            '<span class="actedit" enm="' +
            data["nama_negosiator"] +
            '">' +
            data["nama_negosiator"] +
            "</span>"
          );
        },
      },
      {
        data: null,
        render: function (data, type, row) {
          return (
            '<span class="actedit" enm="' +
            data["nama_negosiator"] +
            '">' +
            data["job_handle"] +
            "</span>"
          );
        },
      },
    ],
  });

  //Function Read Master Negosiator
  function Master() {
    var vusrnm = getCookie("usrnm");
    var vtoken = getCookie("token");

    //Load Data Master Negosiator
    $.ajax({
      type: "POST",

      url: `${restlocpss}read_negosiator`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        if (isEmpty(obj)) {
          console.log("Gagal load tabel, data kosong");
        } else {
          //DRAW ARRAY KE DATATABLES
          MTable.clear();
          $.each(obj, function (index, value) {
            MTable.row.add(value);
          });
          MTable.draw();
        }
      },

      //JIKA ERROR TAMPILKAN PESAN ATAU LOGOUT
      error: function () {
        window.location.href = "./?link=loclogout";
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });
  }

  $("#Master").on("click", ".actedit", function () {
    var enm = $(this).attr("enm");
    var epssid = PSSID;
    var user = Username;
    $("#HeaderNegosiator").val(enm);
    $.ajax({
      type: "POST",
      url: `${restlocpss}change_negosiator`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        idpss: epssid,
        nego: enm,
        user: user,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(JSON.parse(response));
        if (isEmpty(obj)) {
          console.log("Gagal Simpan mas brooo, data error");
        } else if (obj) {
          if (obj.status == false) {
            Swal.fire({
              text: obj.message,
              timer: 1500,
              icon: "warning",
              showConfirmButton: false,
            });
          } else {
            Swal.fire({
              text: obj.message,
              timer: 1500,
              icon: "success",
              showConfirmButton: false,
            });
          }
        } else {
          Swal.fire(
            "Error",
            "Ada kendal di koneksi/database, data tidak tersimpan !",
            "error"
          );
        }
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });
    $(".windownegosiator").modal("hide");
  });
  //----------------------------------------------------------------------------------------------

  //Sign PSS Designer
  $(SignDesigner).on("click", function (e) {
    var idpss = PSSID;
    var user = Username;
    var an = $(this).attr("idan");

    let encryption = new Encryption();
    var dlink = encryption.encrypt(idpss, NonceValue);

    $.ajax({
      type: "POST",
      url: `${restlocpss}sign_pssdesigner`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: { idpss: idpss, user: user, an: an, dlink   : 'pssitem&i='+dlink },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(JSON.parse(response));
        if (isEmpty(obj)) {
          console.log("Gagal Sign mas brooo, koneksi error");
        } else if (obj) {
          if (obj.status == false) {
            Swal.fire({
              text: obj.message,
              timer: 1500,
              icon: "warning",
              showConfirmButton: false,
            });
          } else {
            Swal.fire({
              text: obj.message,
              timer: 1500,
              icon: "success",
              showConfirmButton: false,
            });
            window.location.href = "./?link=pss";
          }
        } else {
          Swal.fire(
            "Error",
            "Ada kendal di koneksi/database, data tidak tersimpan !",
            "error"
          );
        }
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });
  });

  //----------------------------------------------------------------------------------------------

  //Sign PSS Head Of
  $(SignSecHead).on("click", function (e) {
    var idpss = PSSID;
    var user = Username;
    var an = $(this).attr("idan");
    let encryption = new Encryption();
    var dlink = encryption.encrypt(idpss, NonceValue);

    $.ajax({
      type: "POST",
      url: `${restlocpssshd}sign_psssectionhead`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: { idpss: idpss, user: user, an: an, dlink   : 'pssitem&i='+dlink },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(JSON.parse(response));
        if (isEmpty(obj)) {
          console.log("Gagal Sign mas brooo, koneksi error");
        } else if (obj) {
          if (obj.status == false) {
            Swal.fire({
              text: obj.message,
              timer: 1500,
              icon: "warning",
              showConfirmButton: false,
            });
          } else {
            Swal.fire({
              text: obj.message,
              timer: 1500,
              icon: "success",
              showConfirmButton: false,
            });
            window.location.href = "./?link=pss";
          }
        } else {
          Swal.fire(
            "Error",
            "Ada kendal di koneksi/database, data tidak tersimpan !",
            "error"
          );
        }
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });
  });

  //Fuction Save Item
  function SaveItem() {
    var psscat = "NEW";
    var pssid = PSSID;
    var iditem = $("#AddIdItemReq").val();
    var pssdesc = $("#AddItemDescription").val();
    var pssmatnum = $("#AddItemVendorMatNum").val();
    var pssplant = $("#AddItemPlant").val().toString();
    var pssqtyspl = $("#AddItemQtySample").val();
    var pssetaspl = $("#AddItemETASample").val();
    var psssloc = $("#AddItemSLoc").val();
    var pssbaseun = $("#AddItemBaseUnit").val();
    var pssstduse = $("#AddItemStandarUse").val();
    var pssrefmat = $("#AddItemRefMaterial").val();
    var pssnote = $("#AddItemNote").val();
    var psspicvih = $("#AddItemPICVendorInHouse").val();
    var psslink = $("#AddItemLinkDocument").val();
    var pssprice = $("#AddItemPrice").val();
    var psscurr = $("#AddItemCurrency").val();
    var psschar = $("#AddItemCharacteristic").val();

    if (iditem) {
      var namares = "update_itempss";
    } else {
      var namares = "create_itempss";
    }

    $.ajax({
      type: "POST",
      url: restlocpss + namares,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        pssid: pssid,
        iditem: iditem,
        psscat: psscat,
        pssdesc: pssdesc,
        pssmatnum: pssmatnum,
        pssplant: pssplant,
        pssqtyspl: pssqtyspl,
        pssetaspl: pssetaspl,
        psssloc: psssloc,
        pssbaseun: pssbaseun,
        pssstduse: pssstduse,
        pssrefmat: pssrefmat,
        pssnote: pssnote,
        psspicvih: psspicvih,
        psslink: psslink,
        pssprice: pssprice,
        psscurr: psscurr,
        psschar: psschar,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(JSON.parse(response));
        if (isEmpty(obj)) {
          console.log("Gagal Simpan mas brooo, data error");
        } else if (obj) {
          if (obj.status == false) {
            Swal.fire({
              text: obj.message,
              timer: 1500,
              icon: "warning",
              showConfirmButton: false,
            });
          } else {
            Swal.fire({
              text: obj.message,
              timer: 1500,
              icon: "success",
              showConfirmButton: false,
            });
            $(".windowadditem").modal("hide");
            ReadItemPSSTable();
          }
        } else {
          Swal.fire(
            "Error",
            "Ada kendal di koneksi/database, data tidak tersimpan !",
            "error"
          );
        }
      },
      error: function () {
        window.location.href = "./?link=loclogout";
        console.log(
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !"
        );
      },
    });
  }
});

//Modal Window Control
$(".windowadditem").modal({
  closable: false,
  autofocus: false,
});
