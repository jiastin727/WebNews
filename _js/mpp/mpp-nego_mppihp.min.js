
const LogoutProtect = false;

var GetCookieNego = decodeURIComponent(getCookie("CooNego"));
var GetCookieOpr  = decodeURIComponent(getCookie("CooOpr"));

function TableListFunc() {

  var NewDate = new Date();
  var YearNow = NewDate.getFullYear();

  var JsonFilter = getCookie('FilterMPPIHPList');
  var ArrayF = JSON.parse(JsonFilter);
  if(JsonFilter){
    var SearchF   = ArrayF[0];
    var TahunF    = ArrayF[1];
    var NamaF     = ArrayF[2];
    var StatusF   = ArrayF[3];
    var ProgressF = ArrayF[4];
  } else {
    var SearchF   = "";
    var TahunF    = YearNow;
    var NamaF     = "ALL";
    var StatusF   = "ALL";
    var ProgressF = "ALL";
  }

  if (SearchF) {
    $("#fcari_ihpmpp").val(SearchF);
    var SearchFStart = SearchF;
  } else {
    var SearchFStart = "";
  }
  if (TahunF) {
    $("#fthn_ihpmpp").dropdown("set selected", TahunF);
    var TahunFStart = TahunF;
  } else {
    var TahunFStart = YearNow;
  }
  if (NamaF) {
    $("#fmn_ihpmpp").dropdown("set selected", NamaF);
    var NamaFStart = NamaF;
  } else {
    var NamaFStart = "ALL";
  }
  if (StatusF) {
    $("#fsts_ihpmpp").dropdown("set selected", StatusF);
    var StatusFStart = StatusF;
  } else {
    var StatusFStart = "ALL";
  }

  if (ProgressF) {
    $("#fprog_ihpmpp").dropdown("set selected", ProgressF);
    var ProgressFStart = ProgressF;
  } else {
    var ProgressFStart = "ALL";
  }


  var FiterArry = [SearchFStart, TahunFStart, NamaFStart, StatusFStart, ProgressFStart];
  var JsonFilter = JSON.stringify(FiterArry);
  setCookie("FilterMPPIHPList", JsonFilter, 5);

  $("#TableList").DataTable({
    dom:
      "<'ui stackable grid'" +
      "<'row'" +
      "<'left aligned sixteen wide column'>" +
      ">" +
      "<'row dt-table'" +
      "<'sixteen wide column'tr>" +
      ">" +
      "<'row'" +
      "<'left aligned seven wide column'B>" +
      "<'left aligned two wide column'>" +
      "<'right aligned seven wide column'p>" +
      ">" +
      ">",
    destroy     : true,
    stateSave   : true,
    processing  : true,
    deferRender : true,
    serverSide  : true,
    orderClasses: false,
    scrollX     : true,
    scrollCollapse: true,
    // paging      : false,
    fixedColumns:   {
      leftColumns: 3
    },
    data        : [],
    language    : {
      sLengthMenu : "_MENU_",
      search      : "",
      searchPlaceholder: "Pencarian..",
      processing  : '<i class="spinner loading icon huge"></i>',
      info        : "_START_ sampai _END_ dari _TOTAL_ total data",
      paginate    : {
        "first"   : "Awal",
        "last"    : "Akhir",
        "next"    : "<i class='chevron right icon'></i>",
        "previous": "<i class='chevron left icon'></i>"
      },
      infoEmpty   : "Tidak ada data",
      select  : {
        rows  : ""
      }
    },
    buttons: [
      {
        text: "10",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(10).draw();
        },
      },
      {
        text: "25",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(25).draw();
        },
      },
      {
        text: "50",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(50).draw();
        },
      },
      {
        text: "100",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(100).draw();
        },
      },
      {
        text: "1000",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(1000).draw();
        },
      },
    ],
    order     : [[1, "desc"]],
    columns   : [
      { data: null,
        render: function (data) {
          if(data['status']==="REQUEST IHP"){
            if(data['negotiator'] == DUser || data['sourcing_operator'] == DUser){
              return `<span class="BtnConfirmReqIHP" eid="${data['id']}" edn="${data['drawing_number']}" eth="${data['tahap']}" eidmpp="${data['id_mpp']}" lkm="${data['localmaker']}" data-tooltip="Confirm IHP Request" data-inverted="" data-position="right center"><i class="check circle link circular teal icon "></i></span>`;
            } else {
              return '';
            }
          }  else {
            if(data['negotiator'] == DUser || data['sourcing_operator'] == DUser){
              return `<span class="BtnEditIHP" eid="${data['id']}" eidmpp="${data['id_mpp']}" thp="${data['tahap']}" lkm="${data['localmaker']}" data-tooltip="Edit Data IHP" data-inverted="" data-position="right center"><i class="pencil alternate link circular blue icon  "></i></span>`;
            } else {
              return '';
            }
          }
        }
      },
      { data: null,
        render: function (data) {
          if(data['no_ihp'].includes("/")){
            return data['no_ihp'];
          }  else {
            return ``;
          }
        }
      },
      { data  : 'description' },
      { data  : 'drawing_number' },
      { data  : 'vendor' },
      // { data: null,
      //   render: function (data) {
      //     return trimVendor(data['vendor']);
      //   },
      // },
      { data  : 'manufacture' },
      { data  : 'jenis_project' },
      { data  : 'chassis' },
      { data: null,
        render: function (data) {
          return data['tahap']+' / '+data['localmaker'];
        },
      },
      { data  : 'designer' },
      { data  : 'head_of' },
      { data  : 'negotiator' },
      { data  : 'sourcing_operator' },
      { data  : 'created_at' },
      { data  : 'final_result' },
      { data  : 'status' },
      { data  : 'progress' },
    ],

    createdRow: function (row, data, index) {

      //WARNA FREEZE LEFT COLUMNS 
      $(row).find("td:eq(2)").css("border-right", "inset");
      $(row).find("td:eq(2)").css("border-right-color", ColorBorderFreeze);

      //WARNA OWNER & PLACE IN
      if ((data['negotiator'] === DUser || data['sourcing_operator'] === DUser) && data['progress'] === "PLACEIN") {
        $(row).find("td").css("color", ColorIHPPlacein);
      }

      //WARNA OWNER & PROCCES
      if ((data['negotiator'] === DUser || data['sourcing_operator'] === DUser) && (data['progress'] === "PROCCES" || data['progress'] === "MSC OPR" || data['progress'] === "IHP KEMBALI")) {
        $(row).find("td").css("color", ColorIHPProcess);
      }
      
      if (data['designer'] == DUser && data['progress'] == "APPROVED") {
        $(row).find("td").css("background-color", BgColorIHPApproved);
        $(row).find("td").css("color", ColorIHPApproved);
      }

      

      //WARNA FINISH & CLOSE
      if (
        data['status'] == "FINISH" ||
        data['status'] == "CLOSE"
      ) {
        $(row).find("td").css("color", ColorIHPFinish);
      }

      //WARNA CANCEL
      if (data['status'] == "CANCEL") {
        $(row).find("td").css("color", ColorIHPCancel);
      }

      //WARNA REQUEST APPROVAL SHD
      if (
        data['progress'] == "REQ-APPROVAL" ||
        data['progress'] == "REQ-CLOSE" ||
        data['progress'] == "REQ-CANCEL"
      ) {
        $(row).find("td").css("color", ColorIHPNeedApprove);
        $(row).find("td").css("background-color", BgColorIHPNeedApprove);
      }

      if (data['final_result'] == "NOT OK") {
        $(row).find("td:eq(14)").css("color", ColorIHPNOT);
      }
    },
   
    ajax      : {
      url     : '../RND_BackEnd/backend_mpp/ihp/load/nego',
      type    : "POST",
      headers : {
        user  : VUserName,
        token : VToken,
      },
      data    : {
        FSearch   : SearchFStart,
        FYear     : TahunFStart,
        FNama     : NamaFStart,
        FStatus   : StatusFStart,
        FProg     : ProgressFStart,
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    },
  });
}

function trimVendor(s) {
  while (s.substr(0,1) == '0' && s.length>1) { s = s.substr(1,9999); }
  return s;
}


function LoadDetailIHP(a,b,c){
  $.ajax({
    type: "POST",
    url     : `../RND_BackEnd/backend_mpp/ihp/load-item/`+a,
    headers: {
      user  : VUserName,
      token : VToken
    },
    data: {   
      tahap : b,
      localmaker : c
    },
    cache: false,
    success: function (data){
      var obj = JSON.parse(data);
      let IsIHPNum = obj.no_ihp.includes("/");
      if(IsIHPNum){
        $('#EditNoIHP').text(obj.no_ihp);
        $('#EditDateIHP').text(obj.created_at);
      } else {
        $('#EditNoIHP').html('<i>Belum create nomor IHP</i>');
        $('#EditDateIHP').html('<i>Belum create nomor IHP</i>');
      }
      // var vendor = obj.vendor+' - '+obj.vendorTerm;
      var vendor = obj.vendor;
      $('#EditDesignerIHP').text(obj.designer);
      $('#EditHeadOfIHP').text(obj.head_of);
      $('#EditJenisPrjIHP').text(obj.jenis_project);
      $('#EditNegoIHP').text(obj.negotiator);
      $('#EditChassisIHP').text(obj.chassis);
      $('#EditIHPTahap').val(obj.tahap);
      $("#EditIHPBaseUnit").dropdown("clear");
      $("#EditIHPBaseUnit").dropdown("set selected",obj.base_unit);
      $('#EditIHPDescript').val(obj.description);
      $('#EditIHPVendorMatNum').val(obj.drawing_number);
      $('#EditIHPVendor').val(vendor);
      $('#EditIHPManufaktur').val(obj.manufacture);
      $('#EditIHPQtySample').val(obj.qty_sample);
      $('#EditIHPReffPIN').val(obj.reff_pin);
      $('#EditIHPTanggalIHPKembali').val(obj.tgl_ihp_kembali);
      $('#EditIHPMSCNote').val(obj.msc_note);
      $('#EditIHPIdItemMPP').val(obj.id);
      $('#EditIHPCompare').val(CryptoJS.MD5(obj.base_unit+obj.qty_sample+obj.reff_pin+obj.tgl_ihp_kembali+obj.msc_note).toString());
      $('#EditLkmIHP').val(c);

      if(obj.localmaker == "MAKER"){
        $("#localmakerTr").show();
      } else {
        $("#localmakerTr").hide();
      }


      if(obj.status ==="FINISH" || obj.status ==="CLOSE" || obj.status ==="CANCEL") {

        $('#FeatureSaveData').html('');
        $('#FeatureCreateIHP').html('');
        $('#FeatureSendDesigner').html('');
        $('#FeatureSetToFinish').html('<i class="exclamation orange triangle icon"></i>IHP ini sudah di '+obj.status.toLowerCase()+', segala perubahan di halaman IHP ini tidak akan tersimpan kedalam database IHP.');

      } else {

        if(obj.status ==="ACTIVE" && obj.progress ==="MSC OPR") {

          $('#FeatureSaveData').html('');
          $('#FeatureCreateIHP').html('');
          $('#FeatureSendDesigner').html('');
          $('#FeatureSetToFinish').html('<div id="FinishDone" class="ui teal small compact button" data-tooltip="IHP sudah selesai dan di-set ke Finish - Done" data-inverted="">IHP Finish-Done</div>');

        } else {
// console.log(obj.status);
// console.log(obj.progress);
// console.log(IsIHPNum);
// console.log(obj.tgl_ihp_kembali);
          $('#FeatureSaveData').html('<div id="SaveData" class="ui teal small compact button" data-tooltip="Simpan perubahan" data-inverted="">Save Data</div>');
          $('#FeatureSetToFinish').html('');

          if(obj.status ==="REQUEST IHP" && obj.progress ==="MSC" && IsIHPNum === false) {
            $('#FeatureCreateIHP').html('<div id="CreateIHP" class="ui blue small compact button" data-tooltip="Buat IHP" data-inverted="">Create IHP</div>');
            $('#FeatureSendDesigner').html('<div class="ui small compact button disabled" data-tooltip="Kirimkan IHP ini ke designer (designer akan menerima notifikasi email)" data-inverted="">Send to Designer</div>');
          
          } else if(obj.status ==="ACTIVE" && obj.progress ==="MSC" && IsIHPNum === true && obj.tgl_ihp_kembali) {
            $('#FeatureCreateIHP').html('<div class="ui small compact button disabled" data-tooltip="Buat IHP" data-inverted="">Create IHP</div>');
            $('#FeatureSendDesigner').html('<div id="SendDesigner" class="ui blue small compact button" data-tooltip="Kirimkan IHP ini ke designer (designer akan menerima notifikasi email)" data-inverted="">Send to Designer</div>');
            
          } else if(obj.status ==="ACTIVE" && obj.progress ==="MSC" && IsIHPNum === false && obj.tgl_ihp_kembali) {
            $('#FeatureCreateIHP').html('<div id="CreateIHP" class="ui blue small compact button" data-tooltip="Buat IHP" data-inverted="">Create IHP</div>');
            $('#FeatureSendDesigner').html('<div class="ui small compact button disabled" data-tooltip="Kirimkan IHP ini ke designer (designer akan menerima notifikasi email)" data-inverted="">Send to Designer</div>');
            
          } else {
            $('#FeatureCreateIHP').html('<div class="ui small compact button disabled" data-tooltip="Buat IHP" data-inverted="">Create IHP</div>');
            $('#FeatureSendDesigner').html('<div class="ui small compact button disabled" data-tooltip="Kirimkan IHP ini ke designer (designer akan menerima notifikasi email)" data-inverted="">Send to Designer</div>');

          }
        }
      }
      SaveData();
      CreateIHP();
      SendDesigner();
      IHPFinish();

      
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });
}

function LoadViewDetailIHP(eid,edn,id_mpp,eth,lkm){
  $.ajax({
    type: "POST",
    url     : `../RND_BackEnd/backend_mpp/ihp/load-item/`+eid,
    headers: {
      user  : VUserName,
      token : VToken
    },
    data: {   
      tahap : eth,
      localmaker : lkm
    },
    cache: false,
    success: function (data){
      var obj = JSON.parse(data);
      
      var vendor = obj.vendor;
      $('#ViewDesignerIHP').text(obj.designer);
      $('#ViewHeadOfIHP').text(obj.head_of);
      $('#ViewJenisPrjIHP').text(obj.jenis_project);
      $('#ViewNegoIHP').text(obj.negotiator);
      $('#ViewChassisIHP').text(obj.chassis);
      $('#ViewIHPTahap').text(obj.tahap);
      $('#ViewIHPBaseUnit').text(obj.base_unit);
      $('#ViewIHPDescript').text(obj.description);
      $('#ViewIHPVendorMatNum').text(obj.drawing_number);
      $('#ViewIHPVendor').text(vendor);
      $('#ViewIHPManufaktur').text(obj.manufacture);
      $('#ViewIHPQtySample').text(obj.qty_sample);
      $('#ViewIHPReffPIN').text(obj.reff_pin);

      $('#ViewIHPIdItemMPP').val(eid);
      $('#ViewIHPDN').val(edn);
      $('#ViewIHPIdMPP').val(id_mpp);
      $('#ViewIHPTahap2').val(eth);
      $('#ViewLkmIHP').val(lkm);


      // if(obj.localmaker == "MAKER"){
      //   $("#localmakerTr").show();
      // } else {
      //   $("#localmakerTr").hide();
      // }


      // if(obj.status ==="FINISH" || obj.status ==="CLOSE" || obj.status ==="CANCEL") {

      //   $('#FeatureSaveData').html('');
      //   $('#FeatureCreateIHP').html('');
      //   $('#FeatureSendDesigner').html('');
      //   $('#FeatureSetToFinish').html('<i class="exclamation orange triangle icon"></i>IHP ini sudah di '+obj.status.toLowerCase()+', segala perubahan di halaman IHP ini tidak akan tersimpan kedalam database IHP.');

      // } else {

      //   if(obj.status ==="ACTIVE" && obj.progress ==="MSC OPR") {

      //     $('#FeatureSaveData').html('');
      //     $('#FeatureCreateIHP').html('');
      //     $('#FeatureSendDesigner').html('');
      //     $('#FeatureSetToFinish').html('<div id="FinishDone" class="ui teal small compact button" data-tooltip="IHP sudah selesai dan di-set ke Finish - Done" data-inverted="">IHP Finish-Done</div>');

      //   } else {
      //     // console.log(obj.status);
      //     // console.log(obj.progress);
      //     // console.log(IsIHPNum);
      //     // console.log(obj.tgl_ihp_kembali);
      //     $('#FeatureSaveData').html('<div id="SaveData" class="ui teal small compact button" data-tooltip="Simpan perubahan" data-inverted="">Save Data</div>');
      //     $('#FeatureSetToFinish').html('');

      //     if(obj.status ==="REQUEST IHP" && obj.progress ==="MSC" && IsIHPNum === false) {
      //       $('#FeatureCreateIHP').html('<div id="CreateIHP" class="ui blue small compact button" data-tooltip="Buat IHP" data-inverted="">Create IHP</div>');
      //       $('#FeatureSendDesigner').html('<div class="ui small compact button disabled" data-tooltip="Kirimkan IHP ini ke designer (designer akan menerima notifikasi email)" data-inverted="">Send to Designer</div>');
          
      //     } else if(obj.status ==="ACTIVE" && obj.progress ==="MSC" && IsIHPNum === true && obj.tgl_ihp_kembali) {
      //       $('#FeatureCreateIHP').html('<div class="ui small compact button disabled" data-tooltip="Buat IHP" data-inverted="">Create IHP</div>');
      //       $('#FeatureSendDesigner').html('<div id="SendDesigner" class="ui blue small compact button" data-tooltip="Kirimkan IHP ini ke designer (designer akan menerima notifikasi email)" data-inverted="">Send to Designer</div>');
            
      //     } else if(obj.status ==="ACTIVE" && obj.progress ==="MSC" && IsIHPNum === false && obj.tgl_ihp_kembali) {
      //       $('#FeatureCreateIHP').html('<div id="CreateIHP" class="ui blue small compact button" data-tooltip="Buat IHP" data-inverted="">Create IHP</div>');
      //       $('#FeatureSendDesigner').html('<div class="ui small compact button disabled" data-tooltip="Kirimkan IHP ini ke designer (designer akan menerima notifikasi email)" data-inverted="">Send to Designer</div>');
            
      //     } else {
      //       $('#FeatureCreateIHP').html('<div class="ui small compact button disabled" data-tooltip="Buat IHP" data-inverted="">Create IHP</div>');
      //       $('#FeatureSendDesigner').html('<div class="ui small compact button disabled" data-tooltip="Kirimkan IHP ini ke designer (designer akan menerima notifikasi email)" data-inverted="">Send to Designer</div>');

      //     }
      //   }
      // }
      // SaveData();
      // CreateIHP();
      // SendDesigner();
      // IHPFinish();

      
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });
}


function ConfirmIHPRequest(a,b,c,d,e){
  console.log(a);
  console.log(b);
  console.log(c);
  console.log(d);
  $.ajax({
      url     : '../RND_BackEnd/backend_mpp/ihp/status/nego',
      type    : "POST",
      headers : {
        user  : VUserName,
        token : VToken,
      },
      data    : {
        id       : a,
        username : VUserName,
        drawing_number: b,
        id_mpp: c,
        tahap: d,
        localmaker: e,
      },
    cache: false,
    success: function (response){
      var obj = JSON.parse(response);
      var JmlDataZ = obj['data'].length;
      
      if(JmlDataZ > 0) {
        for (z = 0; z < JmlDataZ; z++) {
          if (obj['data'][z]['id'] === a){
            console.log(obj['data'][z]['status']);
            if(obj['data'][z]['status'] !== 'REQUEST IHP'){
              
              IsResponseFalse('Gagal Confirm, karena IHP yang hendak anda confirm sudah di confirm oleh rekan lain. Silakan re-load halaman IHP ini. (Sts!=ReqIHP)');

            } else {

              // Swal.fire({
              //   title: "<h3>Konfirmasi permintaan pembuatan IHP ini?</h3>",
              //   confirmButtonText: "Ya",
              //   showCancelButton: true,
              // }).then((result) => {
              //   if (result.value) {
                  $.ajax({
                    type    : "POST",
                    url     : `../RND_BackEnd/backend_mpp/ihp/confirm-request`,
                    headers : {
                      user  : VUserName,
                      token : VToken
                    },
                    data: {   
                      id       : a,
                      username : VUserName,
                      drawing_number: b,
                      id_mpp: c,
                      tahap: d,
                      localmaker: e,
                    },
                    cache: false,
                    success: function (response) {
                      var obj = JSON.parse(response);
                      if(isEmpty(obj)) {
                        IsResponseEmptyObj();
                      } else if(obj) {
                        if (obj.status == false){
                          IsResponseFalse(obj.message);
                        } else {
                          IsResponseTrue(obj.message);
                          TableListFunc();
                        }
                      } else {
                        IsResponseErrorElse();
                      }
                    },
                    error: function () {
                      IsTimeOut(LogoutProtect);
                    },
                  });
              //   }
              // });

            }
          
          } 
        }
      } else {
        IsResponseFalse('Gagal Confirm, karena IHP yang hendak anda confirm sudah di confirm oleh rekan lain. Silakan re-load halaman IHP ini.(JmlData0)');
      }

    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });

}

function ReturnIHPRequest(a,b,c,d,e){

  // Swal.fire({
  //   title: "<h3>kembalikan permintaan pembuatan IHP ini?</h3>",
  //   confirmButtonText: "Ya",
  //   showCancelButton: true,
  // }).then((result) => {
  (async () => {
    const { value: reason } = await Swal.fire({
      html: "<h3>Alasan penolakan dan pengembalian permintaan IHP</h3>",
      input: 'text',
      inputPlaceholder: 'Alasan'
    });

    if (reason) {
      $.ajax({
        type    : "POST",
        url     : `../RND_BackEnd/backend_mpp/ihp/return-request`,
        headers : {
          user  : VUserName,
          token : VToken
        },
        data: {   
          id       : a,
          username : VUserName,
          drawing_number: b,
          id_mpp: c,
          tahap: d,
          localmaker: e,
          reason: reason,
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(response);
          if(isEmpty(obj)) {
            IsResponseEmptyObj();
          } else if(obj) {
            if (obj.status == false){
              IsResponseFalse(obj.message);
            } else {
              IsResponseTrue(obj.message);
              TableListFunc();
              $(".WindowViewConfirmIHP").modal("hide");
            }
          } else {
            IsResponseErrorElse();
          }
        },
        error: function () {
          IsTimeOut(LogoutProtect);
        },
      });
    }
  })();
            

}


function SaveData(){

  $("#SaveData").on("click", function (e) {

    var EditIHPCompare  = $('#EditIHPCompare').val();
    var IdIHP           = $("#EditIHPIdItemMPP").val();
    var EditIHPTahap    = $("#EditIHPTahap").val();
    var EditLkmIHP      = $("#EditLkmIHP").val();
    $.ajax({
      type: "POST",
      url     : `../RND_BackEnd/backend_mpp/ihp/load-item/`+IdIHP,
      headers: {
        user  : VUserName,
        token : VToken
      },
      data: {   
        tahap : EditIHPTahap,
        localmaker : EditLkmIHP
      },
      cache: false,
      success: function (data){
        var obj = JSON.parse(data);
        var LoadNewItem = CryptoJS.MD5(obj.base_unit+obj.qty_sample+obj.reff_pin+obj.tgl_ihp_kembali+obj.msc_note).toString();
        
        // if (EditIHPCompare !== LoadNewItem){

        //   IsResponseFalse('Gagal Simpan, karena data yang anda edit sudah ada perubahan terbaru oleh rekan lain. Silakan Refresh halaman dan ulangi editing di field yang dimaksud');

        // } else {

          $.ajax({
            type    : "POST",
            url     : `../RND_BackEnd/backend_mpp/ihp/edit-item`,
            headers : {
              user  : VUserName,
              token : VToken
            },
            data: {   
              id            : $("#EditIHPIdItemMPP").val(),
              username      : VUserName,
              base_unit     : $("#EditIHPBaseUnit").val(),
              qty_sample    : $("#EditIHPQtySample").val(),
              reff_pin      : $("#EditIHPReffPIN").val(),
              tgl_ihp_kembali: $("#EditIHPTanggalIHPKembali").val(),
              msc_note      : $("#EditIHPMSCNote").val(),
              drawing_number : $("#EditIHPVendorMatNum").val(),
              tahap : EditIHPTahap,
              localmaker : EditLkmIHP
            },
            cache: false,
            success: function (response){
              var obj = JSON.parse(response);
              if(isEmpty(obj)) {
                IsResponseEmptyObj();
              } else if(obj) {
                if (obj.status == false){
                  IsResponseFalse(obj.message);
                } else {
                  IsResponseTrue(obj.message);
                  // $(".WindowAddEditIHP").modal("hide");
                  TableListFunc();
                  LoadDetailIHP(IdIHP,EditIHPTahap,EditLkmIHP);
                }
              } else {
                IsResponseErrorElse();
              }
            },
            error: function () {
              IsTimeOut(LogoutProtect);
            },
          });
        // }
      
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });


  
  });
}

function CreateIHP(){
  $("#CreateIHP").on("click", function (e) {
    var IdIHP           = $("#EditIHPIdItemMPP").val();
    var ThIHP           = $("#EditIHPTahap").val();
    var LkmIHP          = $("#EditLkmIHP").val();
    $.ajax({
      type: "POST",
      url     : `../RND_BackEnd/backend_mpp/ihp/load-item/`+IdIHP,
      headers: {
        user  : VUserName,
        token : VToken
      },
      data: {   
        tahap : ThIHP,
        localmaker : LkmIHP
      },
      cache: false,
      success: function (data){
        var obj = JSON.parse(data);
        console.log(obj.created_at);

        if(obj.created_at !== '' && obj.created_at !== null && obj.created_at !== 'null'){

          IsResponseFalse('Gagal Create IHP, karena IHP yang anda maksud sudah terbentuk No IHP-nya. Silakan Refresh halaman dan cek ulang IHP yang dimaksud.');

        } else {

          $.ajax({
            type    : "POST",
            url     : `../RND_BackEnd/backend_mpp/ihp/create-item`,
            headers : {
              user  : VUserName,
              token : VToken
            },
            data: {   
              id            : $("#EditIHPIdItemMPP").val(),
              username      : VUserName,
              drawing_number: $("#EditIHPVendorMatNum").val(),
              tahap : ThIHP,
              localmaker : LkmIHP
            },
            cache: false,
            success: function (response){
              var obj = JSON.parse(response);
              if(isEmpty(obj)) {
                IsResponseEmptyObj();
              } else if(obj) {
                if (obj.status == false){
                  IsResponseFalse(obj.message);
                } else {
                  IsResponseTrue(obj.message);
                  // $(".WindowAddEditIHP").modal("hide");
                  TableListFunc();
                  LoadDetailIHP(IdIHP,ThIHP,LkmIHP);
                }
              } else {
                IsResponseErrorElse();
              }
            },
            error: function () {
              IsTimeOut(LogoutProtect);
            },
          });
          
        }

      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });





   
  });
}

function SendDesigner(){
  $("#SendDesigner").on("click", function (e) {
    var IdIHP           = $("#EditIHPIdItemMPP").val();
    var EditIHPTahap    = $("#EditIHPTahap").val();
    var LkmIHP    = $("#EditLkmIHP").val();
    $.ajax({
      type: "POST",
      url     : `../RND_BackEnd/backend_mpp/ihp/load-item/`+IdIHP,
      headers: {
        user  : VUserName,
        token : VToken
      },
      data: {   
        tahap : EditIHPTahap,
        localmaker : LkmIHP
      },
      cache: false,
      success: function (data){
        var obj = JSON.parse(data);
        console.log(obj.created_at);

        if(obj.progress !== 'MSC' ){

          IsResponseFalse('Gagal Kirim IHP, karena IHP yang anda maksud sudah dikirimkan ke Designer oleh rekan yang lain. Silakan Refresh halaman dan cek ulang IHP yang dimaksud.');

        } else {
          
          $.ajax({
            type    : "POST",
            url     : `../RND_BackEnd/backend_mpp/ihp/send-to-designer`,
            headers : {
              user  : VUserName,
              token : VToken
            },
            data: {   
              id            : $("#EditIHPIdItemMPP").val(),
              username      : VUserName,
              tahap : EditIHPTahap,
              localmaker : LkmIHP
            },
            cache: false,
            success: function (response){
              var obj = JSON.parse(response);
              if(isEmpty(obj)) {
                IsResponseEmptyObj();
              } else if(obj) {
                if (obj.status == false){
                  IsResponseFalse(obj.message);
                } else {
                  IsResponseTrue(obj.message);
                  $(".WindowAddEditIHP").modal("hide");
                  TableListFunc();
                }
              } else {
                IsResponseErrorElse();
              }
            },
            error: function () {
              IsTimeOut(LogoutProtect);
            },
          });

        }

      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });


  });
}


function IHPFinish(){
  $("#FinishDone").on("click", function (e) {
    var IdIHP           = $("#EditIHPIdItemMPP").val();
    var EditIHPTahap    = $("#EditIHPTahap").val();
    var LkmIHP    = $("#EditLkmIHP").val();
    $.ajax({
      type: "POST",
      url     : `../RND_BackEnd/backend_mpp/ihp/load-item/`+IdIHP,
      headers: {
        user  : VUserName,
        token : VToken
      },
      data: {   
        tahap : EditIHPTahap,
        localmaker : LkmIHP
      },
      cache: false,
      success: function (data){
        var obj = JSON.parse(data);
        console.log(obj.created_at);

        if(obj.progress !== 'MSC OPR' ){

          IsResponseFalse('Gagal Finish IHP, karena IHP yang anda maksud sudah di Finish oleh rekan yang lain. Silakan Refresh halaman dan cek ulang IHP yang dimaksud.');

        } else {
          
          $.ajax({
            type    : "POST",
            url     : `../RND_BackEnd/backend_mpp/ihp/finish`,
            headers : {
              user  : VUserName,
              token : VToken
            },
            data: {   
              id            : $("#EditIHPIdItemMPP").val(),
              username      : VUserName,
              tahap : EditIHPTahap,
              localmaker : LkmIHP
            },
            cache: false,
            success: function (response){
              var obj = JSON.parse(response);
              if(isEmpty(obj)) {
                IsResponseEmptyObj();
              } else if(obj) {
                if (obj.status == false){
                  IsResponseFalse(obj.message);
                } else {
                  IsResponseTrue(obj.message);
                  $(".WindowAddEditIHP").modal("hide");
                  TableListFunc();
                }
              } else {
                IsResponseErrorElse();
              }
            },
            error: function () {
              IsTimeOut(LogoutProtect);
            },
          });

        }

      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });


  });
}


$(document).ready(function () {

  TableListFunc();
  // CreateIHP();
  // SendDesigner();

  $('[data-toggle="datepicker"]').datepicker({
    format: 'yyyy-mm-dd',
    autoHide: true,
    weekStart: 1
  });

  $("#TableList").on("click", ".BtnConfirmReqIHP", function(){
    var eid  = $(this).attr('eid');
    var edn  = $(this).attr('edn');
    var eth  = $(this).attr('eth');
    var id_mpp  = $(this).attr('eidmpp');
    var lkm  = $(this).attr('lkm');
    // ConfirmIHPRequest(eid,edn,id_mpp,eth,lkm);
    $(".WindowViewConfirmIHP").modal({ autofocus: false, closable : false, }).modal("show");
    LoadViewDetailIHP(eid,edn,id_mpp,eth,lkm)
  });

  $("#TableList").on("click", ".BtnEditIHP", function(){
    var eid  = $(this).attr('eid');
    var thp  = $(this).attr('thp');
    var lkm  = $(this).attr('lkm');
    $(".WindowAddEditIHP").modal({ autofocus: false, closable : false, }).modal("show");
    LoadDetailIHP(eid,thp,lkm);
  });


  $("#ConfirmIHPReq").on("click", function(){
    var eid2 = $('#ViewIHPIdItemMPP').val();
    var edn2 = $('#ViewIHPDN').val();
    var id_mpp2 = $('#ViewIHPIdMPP').val();
    var eth2 = $('#ViewIHPTahap2').val();
    var lkm2 = $('#ViewLkmIHP').val();
    ConfirmIHPRequest(eid2,edn2,id_mpp2,eth2,lkm2);
  });

  $("#ReturnIHPReq").on("click", function(){
    var eid2 = $('#ViewIHPIdItemMPP').val();
    var edn2 = $('#ViewIHPDN').val();
    var id_mpp2 = $('#ViewIHPIdMPP').val();
    var eth2 = $('#ViewIHPTahap2').val();
    var lkm2 = $('#ViewLkmIHP').val();
    ReturnIHPRequest(eid2,edn2,id_mpp2,eth2,lkm2);
  });

  $(".CloseModal").on("click", function(){
    $(".WindowAddEditIHP").modal("hide");
    $(".WindowViewConfirmIHP").modal("hide");
  });


  //RESPON KETIKA INPUT PENCARIAN DI KETIK
  $("#fcari_ihpmpp").on("keyup", function () {
    var FilterCari = $("#fcari_ihpmpp").val();
    var FilterTahun = $("#fthn_ihpmpp").val();
    var FilterNama = $("#fmn_ihpmpp").val();
    var FilterStatus = $("#fsts_ihpmpp").val();
    var FilterProg = $("#fprog_ihpmpp").val();
    var FiterArry = [FilterCari, FilterTahun, FilterNama, FilterStatus, FilterProg];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterMPPIHPList", JsonFilter, 5);
    $("#TableList").DataTable().destroy();
    TableListFunc();
    $("#TableList").DataTable().page(0).draw();
  });

  //RESPON KETIKA FILTER TAHUN DI RUBAH
  $("#fthn_ihpmpp, #fmn_ihpmpp, #fsts_ihpmpp, #fprog_ihpmpp").on(
    "change",
    function () {
      var FilterCari = $("#fcari_ihpmpp").val();
      var FilterTahun = $("#fthn_ihpmpp").val();
      var FilterNama = $("#fmn_ihpmpp").val();
      var FilterStatus = $("#fsts_ihpmpp").val();
      var FilterProg = $("#fprog_ihpmpp").val();
      var FiterArry = [FilterCari, FilterTahun, FilterNama, FilterStatus, FilterProg];
      var JsonFilter = JSON.stringify(FiterArry);
      setCookie("FilterMPPIHPList", JsonFilter, 5);
      TableListFunc();
      $("#TableList").DataTable().page(0).draw();
    }
  );

  //RESET FILTER
  $(".resetfilter").on("click", function () {
    var d = new Date();
    var YearNow = d.getFullYear();
    $("#fcari_ihpmpp").val("");
    $("#fthn_ihpmpp").dropdown("set selected", YearNow);
    $("#fmn_ihpmpp").dropdown("set selected", "ALL");
    $("#fsts_ihpmpp").dropdown("set selected", "ALL");
    $("#fprog_ihpmpp").dropdown("set selected", "ALL");
    var FiterArry = ["", YearNow, "ALL", "ALL", "ALL"];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterMPPIHPList", JsonFilter, 5);
    $("#TableList").DataTable().destroy();
    TableListFunc("", YearNow, "ALL", "ALL", "ALL");
    $("#TableList").DataTable().page(0).draw();
  });



});