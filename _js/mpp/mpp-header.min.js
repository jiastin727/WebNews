const NonceValue = "rdsystem2020";
const LogoutProtect = false;
var restlocupo = decodeURIComponent(getCookie("restlocupo"));
var restlocpss = decodeURIComponent(getCookie("restlocpss"));
var VUserName = getCookie("usrnm");
var VToken = getCookie("token");

let Ucrypt = new Encryption();
// var DUser  = Ucrypt.decrypt(EUser, NonceValue);
// var DJbtn  = Ucrypt.decrypt(EJbtn, NonceValue);
// var DSect  = Ucrypt.decrypt(ESect, NonceValue);
// var DGrup  = Ucrypt.decrypt(EGrup, NonceValue);

// Function Load Data Header
function LoadDataHeaderMPP(a) {
  $.ajax({
    type: "POST",
    url: `../RND_BackEnd/backend_mpp/mpp/load-header/` + a,
    headers: {
      user: VUserName,
      token: VToken
    },
    cache: false,
    success: function (data) {
      var obj = JSON.parse(data);
      $("#HeaderNoMPP").val(obj.NoMPP + " " + obj.Rev);
      $("#HeaderTitleMPP").val(obj.Title);
      $("#HeaderPrjID").val(obj.ProjectIDs);
      $("#HeaderPrjOwn").val(obj.ProjectOwners);
      $("#HeaderPrjTMP").val(obj.TargetMP);
      $("#HeaderJenisPrj").dropdown("set selected", obj.JenisProject);
      $("#HeaderProduct").dropdown("set selected", obj.Product);
      $("#HeaderChassis").dropdown("set selected", obj.Chassis);
      $("#HeaderCabinet").dropdown("set selected", obj.Cabinet);
      $("#HeaderEstKurs").val(obj.EstKurs);
      $("#MDDesign").val(obj.DesignerMD1);
      $("#MDDesign1").val(obj.DesignerMD2);
      $("#MDDesign2").val(obj.DesignerMD3);
      $("#MDDesign3").val(obj.DesignerMD4);
      $("#MDDesign4").val(obj.DesignerMD5);
      $("#MDDesign5").val(obj.DesignerMD6);
      $("#IDDesign11").val(obj.DesignerID1);
      $("#IDDesign12").val(obj.DesignerID2);
      $("#IDDesign13").val(obj.DesignerID3);
      $("#IDDesign14").val(obj.DesignerID4);
      $("#IDDesign15").val(obj.DesignerID5);
      $("#MDHeadOf").val(obj.HeadOfMD);
      $("#IDHeadOf").val(obj.HeadOfID);
      $("#ProjectLeader").val(obj.ProjectLeader);
      $("#HeaderTglUsulanModif").val(obj.UsulanModif);
      $("#HeaderNote").val(obj.Note);
      $("#Negotiator").val(obj.Negotiator);

      if (obj.DesignerMD2) {
        $("#trmd2").show();
        $("#BtnAddMD1").hide();
        $("#BtnTrashMD1").show();
      } else {
        $("#trmd2").hide();
        $("#BtnAddMD1").show();
        $("#BtnTrashMD1").hide();
      }

      if (obj.DesignerMD3) {
        $("#trmd3").show();
        $("#BtnAddMD2").hide();
        $("#BtnTrashMD2").show();
        $("#BtnTrashMD1").hide();
      } else {
        $("#trmd3").hide();
        $("#BtnAddMD2").show();
        $("#BtnTrashMD2").hide();
      }

      if (obj.DesignerMD4) {
        $("#trmd4").show();
        $("#BtnAddMD3").hide();
        $("#BtnTrashMD3").show();
        $("#BtnTrashMD2").hide();
      } else {
        $("#trmd4").hide();
        $("#BtnAddMD3").show();
        $("#BtnTrashMD3").hide();
      }

      if (obj.DesignerMD5) {
        $("#trmd5").show();
        $("#BtnAddMD4").hide();
        $("#BtnTrashMD4").show();
        $("#BtnTrashMD3").hide();
      } else {
        $("#trmd5").hide();
        $("#BtnAddMD4").show();
        $("#BtnTrashMD4").hide();
      }

      if (obj.DesignerMD6) {
        $("#BtnAddMD5").hide();
        $("#BtnTrashMD5").show();
        $("#BtnTrashMD4").hide();
      } else {
        $("#BtnAddMD5").show();
        $("#BtnTrashMD5").hide();
      }

      if (obj.DesignerID1) {
        $("#trid12").show();
        $("#BtnAddID11").hide();
        $("#BtnTrashID11").show();
      } else {
        $("#trid12").hide();
        $("#BtnAddID11").show();
        $("#BtnTrashID11").hide();
      }

      if (obj.DesignerID2) {
        $("#trid13").show();
        $("#BtnAddID12").hide();
        $("#BtnTrashID12").show();
        $("#BtnTrashID11").hide();
      } else {
        $("#trid13").hide();
        $("#BtnAddID12").show();
        $("#BtnTrashID12").hide();
      }

      if (obj.DesignerID3) {
        $("#trid14").show();
        $("#BtnAddID13").hide();
        $("#BtnTrashID13").show();
        $("#BtnTrashID12").hide();
      } else {
        $("#trid14").hide();
        $("#BtnAddID13").show();
        $("#BtnTrashID13").hide();
      }

      if (obj.DesignerID4) {
        $("#trid15").show();
        $("#BtnAddID14").hide();
        $("#BtnTrashID14").show();
        $("#BtnTrashID13").hide();
      } else {
        $("#trid15").hide();
        $("#BtnAddID14").show();
        $("#BtnTrashID14").hide();
      }

      if (obj.DesignerID5) {
        $("#BtnAddID15").hide();
        $("#BtnTrashID15").show();
        $("#BtnTrashID14").hide();
      } else {
        $("#BtnAddID15").show();
        $("#BtnTrashID15").hide();
      }

      if (obj.HeadOfMD) {
        $("#BtnAddHOMD").hide();
        $("#BtnTrashHOMD").show();
      } else {
        $("#BtnAddHOMD").show();
        $("#BtnTrashHOMD").hide();
      }

      if (obj.HeadOfID) {
        $("#BtnAddHOID").hide();
        $("#BtnTrashHOID").show();
      } else {
        $("#BtnAddHOID").show();
        $("#BtnTrashHOID").hide();
      }

      if (obj.ProjectLeader) {
        $("#BtnAddPL").hide();
        $("#BtnTrashPL").show();
      } else {
        $("#BtnAddPL").show();
        $("#BtnTrashPL").hide();
      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    }
  });
}

// Fuction Load Microsoft Project - Function RESt dari PSS
function LoadMsProject() {
  var user = $("#MPPUser").val();
  $("#TableMsProject").find("tbody").empty();
  $.ajax({
    type: "POST",
    url: `${restlocpss}read_msproject`,

    headers: {
      user: VUserName,
      token: VToken
    },
    data: {
      user: user
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(JSON.parse(response));
      if (isEmpty(obj)) {
        console.log("Gagal load tabel, data kosong");
      } else if (obj) {
        if (obj.code == "error8") {
          $("#TableMsProject").find("tbody").append("<tr><td width='400px'>&nbsp;" + "</td><td class='center' >" + "</td><td class='center'></td></tr>");
        } else {
          jmlData = obj.length;
          for (a = 0; a < jmlData; a ++) {
            $("#TableMsProject").find("tbody").append("<tr id='" + a + "'><td width='80px'>" + obj[a]["ProjectIdentifier"] + "</td><td class='center' width='400px'>" + obj[a]["Z2ProjectDescription"] + "</td><td class='center' width='150px'>" + obj[a]["ProjectOwnerName"] + "</td><td class='center'><i class='trash actdeleteprjid iconcoloredit icon' id='" + obj[a]["ProjectIdentifier"] + "'></i></td></tr>");
          }

          // Hapus Project ID
          $(".actdeleteprjid").on("click", function (e) {
            var idprj = $(this).attr("id");
            var user = $("#MPPUser").val();
            $.ajax({
              type: "POST",
              url: `${restlocpss}delete_tempmsproject`,
              headers: {
                user: VUserName,
                token: VToken
              },
              data: {
                idprj: idprj,
                user: user
              },
              cache: false,
              success: function (response) {
                var obj = JSON.parse(JSON.parse(response));
                if (obj.code == "error9") {
                  Swal.fire("Error", "Ada kendal di koneksi/database, data tidak tersimpan !", "error");
                } else if (obj.code == "error10") {
                  Swal.fire("Error", "Item yang dimaksud tidak ada !", "error");
                } else {
                  Swal.fire({
                    text: "Item berhasil dihapus dari daftar",
                    timer: 1000,
                    position: "top-right",
                    toast: true,
                    showConfirmButton: false
                  });
                  LoadMsProject();
                }
              },
              error: function () {
                IsTimeOut(LogoutProtect);
              }
            });
          });
        }
      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    }
  });
}

// Fuction Read Data Microsoft Project - Function RESt dari PSS
function ReadAfterAddMsProject() {
  var user = $("#MPPUser").val();
  $.ajax({
    type: "POST",
    url: `${restlocpss}read_msproject`,
    headers: {
      user: VUserName,
      token: VToken
    },
    data: {
      user: user
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(JSON.parse(response));
      if (isEmpty(obj)) {
        console.log("Gagal load, data kosong");
      } else if (obj) {
        jmlData = obj.length;
        var strprjid = "";
        var strprjown = "";
        var strprjbase = "";
        for (a = 0; a < jmlData; a ++) {
          strprjid += obj[a]["ProjectIdentifier"] + ", ";
          strprjown += obj[a]["ProjectOwnerName"] + ", ";
          strprjbase += obj[a]["ProjectBaselineFinishDate"] + ", ";
        }
        $("#HeaderPrjID").val(removeLastComma(strprjid));
        $("#HeaderPrjOwn").val(removeLastComma(strprjown));
        $("#HeaderPrjTMP").val(removeLastComma(strprjbase));
      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    }
  });
}

function TableListFunc(FSearch, FBagian, FJabatan) {
  $("#ApprovalList").DataTable({
    dom: "<'ui stackable grid'" + "<'row'" + "<'left aligned sixteen wide column'>" + ">" + "<'row dt-table'" + "<'sixteen wide column'tr>" + ">" + "<'row'" + "<'left aligned eight wide column'>" + "<'right aligned eight wide column'>" + ">" + ">",

    destroy: true,
    stateSave: true,
    processing: true,
    deferRender: true,
    serverSide: true,
    ordering: false,
    pageLength: 10,
    data: [],
    language: {
      sLengthMenu: "_MENU_",
      search: "",
      searchPlaceholder: "Search..",
      processing: '<i class="spinner loading icon huge"></i>'
    },
    columns: [
      {
        data: null,
        render: function (data, type, row) {
          if (data[0] != "") {
            return(`<span class="edit outline optionselect SelectApp" AppName="${
              data[1]
            }">` + data[1] + `</span>`);
          } else {
            return "";
          }
        }
      }, {
        data: null,
        render: function (data, type, row) {
          if (data[0] != "") {
            return(`<span class="edit outline optionselect SelectApp" AppName="${
              data[1]
            }">` + data[3] + `</span>`);
          } else {
            return "";
          }
        }
      }, {
        data: null,
        render: function (data, type, row) {
          if (data[0] != "") {
            return(`<span class="edit outline optionselect SelectApp" AppName="${
              data[1]
            }">` + data[4] + `</span>`);
          } else {
            return "";
          }
        }
      },
    ],

    ajax: {
      url: `${restlocupo}table_jabatan`,
      type: "POST",
      headers: {
        user: VUserName,
        token: VToken
      },
      data: {
        FSearch: FSearch,
        FBagian: FBagian,
        FJabatan: FJabatan
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      }
    }
  });
  $("#ApprovalList").css("cursor", "pointer");
}

$(".AddProjectId").on("click", function (e) {
  var VToken = getCookie("token");
  var user = $("#MPPUser").val();
  var idmsprj = $("#HeaderPrjID").val();

  $.ajax({
    type: "POST",
    url: "./2_psonline/_ajxaddmsprj.php",
    data: {
      user: user,
      idmsprj: idmsprj
    },
    cache: false,
    success: function (response) {},
    error: function () {
      IsTimeOut(LogoutProtect);
    }
  });

  LoadMsProject();

  $(".WindowPrjID").modal({autofocus: false, closable: false, keyboardShortcuts: false}).modal("show");

  $(".sync").popup({on: "hover", movePopup: false});

  $(".msproject").dropdown({fullTextSearch: "exact", match: "both", selectOnBlur: false, selectOnKeydown: false});
});

$("#AddHeaderPrjID").on("change", function () {
  var pid = this.options[this.selectedIndex].getAttribute("value");
  var user = $("#MPPUser").val();

  $.ajax({
    type: "POST",
    url: `${restlocpss}create_msproject`,
    headers: {
      user: VUserName,
      token: VToken
    },
    data: {
      pid: pid,
      user: user
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(JSON.parse(response));
      if (isEmpty(obj)) {
        console.log("Gagal save DN Mechanical, data kosong");
      } else if (obj) {
        if (obj.code == "error9") {
          Swal.fire("Error", "Ada kendal di koneksi/database, data tidak tersimpan !", "error");
        } else if (obj.code == "error11") {
          Swal.fire("Error", "Data DN Mechanical kosong!", "error");
        } else {
          Swal.fire({
            text: "Item berhasil ditambahkan di daftar",
            timer: 1000,
            position: "top-right",
            toast: true,
            showConfirmButton: false
          });
          LoadMsProject();
        }
      } else {
        Swal.fire("Error", "Error ?.", "error");
      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    }
  });
});

var MTable = $("#Master").DataTable({
  dom: "<'ui stackable grid'" + "<'row'" + "<'left aligned ten wide column'<'TitleNegoList'>>" + "<'right aligned six wide column'f>" + ">" + "<'row dt-table'" + "<'sixteen wide column'tr>" + ">" + "<'row'" + "<'left aligned ten wide column'l>" + "<'right aligned six wide column'p>" + ">" + ">",
  stateSave: false,
  pageLength: 10,
  pagingType: "simple",
  data: [],
  order: [
    [0, "asc"]
  ],
  language: {
    sLengthMenu: "_MENU_",
    search: "",
    searchPlaceholder: "Search.."
  },
  columnDefs: [
    {
      type: "natural",
      targets: 0
    }
  ],
  columns: [
    {
      data: null,
      render: function (data, type, row) {
        return('<span class="actedit optionselect" enm="' + data["nama_negosiator"] + '">' + data["nama_negosiator"] + "</span>");
      }
    }, {
      data: null,
      render: function (data, type, row) {
        return('<span class="actedit optionselect" enm="' + data["nama_negosiator"] + '">' + data["job_handle"] + "</span>");
      }
    },
  ]
});

function MasterNegosiator() {
  $.ajax({
    type: "POST",
    url: `${restlocupo}list_negosiator`,
    headers: {
      user: VUserName,
      token: VToken
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      if (isEmpty(obj)) {
        console.log("Gagal load tabel, data kosong");
      } else {
        MTable.clear();
        $.each(obj, function (index, value) {
          MTable.row.add(value);
        });
        MTable.draw();

        $("#Master").on("click", ".actedit", function () {
          var enm = $(this).attr("enm");
          $("#Negotiator").val(enm);
          Swal.fire({
            text: "Updated to Negosiator Input (Header)",
            timer: 1000,
            position: "top-right",
            toast: true,
            showConfirmButton: false
          });
        });
      }
    },

    error: function () {
      IsTimeOut(LogoutProtect);
    }
  });
}


$("#ApprovalList").on("click", ".SelectApp", function () {
  var AppName = $(this).attr("AppName");
  var idApp = $("#IdApp").val();
  var idApp2 = parseInt(idApp) + 1;
  var idApp3 = parseInt(idApp) - 1;
  $(".windowapproval").modal("hide");

  if (idApp < 10) {
    $("#MDDesign" + idApp).val(AppName);
    $("#BtnTrashMD" + idApp).show();
    $("#BtnAddMD" + idApp).hide();
    $("#trmd" + idApp2).show();
    $("#BtnTrashMD" + idApp3).hide();
  } else if (idApp == 10) {
    $("#MDHeadOf").val(AppName);
    $("#BtnTrashHOMD").show();
    $("#BtnAddHOMD").hide();
  } else if (idApp > 10 && idApp < 20) {
    $("#IDDesign" + idApp).val(AppName);
    $("#BtnTrashID" + idApp).show();
    $("#BtnAddID" + idApp).hide();
    $("#trid" + idApp2).show();
    $("#BtnTrashID" + idApp3).hide();
  } else if (idApp == 20) {
    $("#IDHeadOf").val(AppName);
    $("#BtnTrashHOID").show();
    $("#BtnAddHOID").hide();
  } else if (idApp == 21) {
    $("#ProjectLeader").val(AppName);
    $("#BtnTrashPL").show();
    $("#BtnAddPL").hide();
  } else if (idApp == 22) {
    $("#Negotiator").val(AppName);
    $("#BtnTrashNego").show();
    $("#BtnAddNego").hide();
  }
});

$("#HeaderButtonSave").click(function () {
  var TitleMPP = $("#HeaderTitleMPP").val().toUpperCase();
  var PrjID = $("#HeaderPrjID").val();
  var PrjOwn = $("#HeaderPrjOwn").val();
  var PrjTMP = $("#HeaderPrjTMP").val();
  var JenisPrj = $("#HeaderJenisPrj").val();
  var Product = $("#HeaderProduct").val();
  var Chassis = $("#HeaderChassis").val();
  var Cabinet = $("#HeaderCabinet").val();
  var EstKurs = $("#HeaderEstKurs").val();
  var UsulanModif = $("#HeaderTglUsulanModif").val();
  var MDDesigner1 = $("#MDDesign").val();
  var MDDesigner2 = $("#MDDesign1").val();
  var MDDesigner3 = $("#MDDesign2").val();
  var MDDesigner4 = $("#MDDesign3").val();
  var MDDesigner5 = $("#MDDesign4").val();
  var MDDesigner6 = $("#MDDesign5").val();
  var IDDesigner1 = $("#IDDesign11").val();
  var IDDesigner2 = $("#IDDesign12").val();
  var IDDesigner3 = $("#IDDesign13").val();
  var IDDesigner4 = $("#IDDesign14").val();
  var IDDesigner5 = $("#IDDesign15").val();
  var HeadOfMD = $("#MDHeadOf").val();
  var HeadOfID = $("#IDHeadOf").val();
  var ProjectLeader = $("#ProjectLeader").val();
  var Negotiator = $("#Negotiator").val();
  var Note = $("#HeaderNote").val().toUpperCase();
  if (IdMPP) {
    var restsave = "edit-header";
  } else {
    var restsave = "create-header";
  }
  data = [{
      TitleMPP: TitleMPP,
      PrjID: PrjID,
      PrjOwn: PrjOwn,
      PrjTMP: PrjTMP,
      JenisPrj: JenisPrj,
      Product: Product,
      Chassis: Chassis,
      Cabinet: Cabinet,
      EstKurs: EstKurs,
      UsulanModif: UsulanModif,
      MDDesigner1: MDDesigner1,
      MDDesigner2: MDDesigner2,
      MDDesigner3: MDDesigner3,
      MDDesigner4: MDDesigner4,
      MDDesigner5: MDDesigner5,
      MDDesigner6: MDDesigner6,
      IDDesigner1: IDDesigner1,
      IDDesigner2: IDDesigner2,
      IDDesigner3: IDDesigner3,
      IDDesigner4: IDDesigner4,
      IDDesigner5: IDDesigner5,
      HeadOfMD: HeadOfMD,
      HeadOfID: HeadOfID,
      ProjectLeader: ProjectLeader,
      Negotiator: Negotiator,
      Note: Note,
      IdMPP: IdMPP,
      Username: VUserName
    },];

  $.ajax({
    type: "POST",
    url: `../RND_BackEnd/backend_mpp/mpp/` + restsave,
    headers: {
      user: VUserName,
      token: VToken
    },
    data: {
      data: data
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      if (isEmpty(obj)) {
        IsResponseEmptyObj();
      } else if (obj) {
        if (obj.status == false) {
          IsResponseFalse(obj.message);
        } else {
          IsResponseTrue(obj.message);
          window.location.href = "./?link=mppindex";
        }
      } else {
        IsResponseErrorElse();
      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    }
  });
});

function LoadDataSignMPP(b) {
  $.ajax({
    type: "POST",
    url: `../RND_BackEnd/backend_mpp/sign/load/`+b,
    headers: {
      user: VUserName,
      token: VToken
    },
    cache: false,
    success: function (data) {
      var obj = JSON.parse(data);
      if(obj.DateSignMD1 ===null && obj.SignByMD1 === null ){
        LoadDataHeaderMPP(IdMPP);
        $('.inputheader').removeClass('disabled');
        $('.BtnAddPIC').removeClass('disabled');
        $('.BtnTrashPI2').removeClass('disabled');
        $('.BtnTrashPIC2').removeClass('disabled');
        $('.BtnTrashHOMD').removeClass('disabled');
        $('.BtnTrashHOID').removeClass('disabled');
        $('.BtnTrashPL').removeClass('disabled');
        $('.mastertbl').show();
      } else {
        LoadDataHeaderMPP(IdMPP);
        $('.inputheader').addClass('disabled');
        $('.BtnAddPIC').addClass('disabled');
        $('.BtnTrashPIC').addClass('disabled');
        $('.BtnTrashPIC2').addClass('disabled');
        $('.BtnTrashHOMD').addClass('disabled');
        $('.BtnTrashHOID').addClass('disabled');
        $('.BtnTrashPL').addClass('disabled');
        $('.inputheader').removeClass('mnd');
        $('.mastertbl').hide();

      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });
}


$(document).ready(function () {
  $("#HeaderButtonBack").on("click", function () {
    window.location.href = "./?link=mppindex";
  });
  $("#AddItemButtonBack").on("click", function (e) {
    $(".WindowPrjID").modal("hide");
  });
  $("#AddItemButtonSave").on("click", function (e) {
    $(".WindowPrjID").modal("hide");
    ReadAfterAddMsProject();
  });
  $("#ButtonReload").on("click", function (e) {
    ReloadAddMsProject();
  });
  $(".CloseModal").on("click", function (e) {
    $(".windowapproval").modal("hide");
  });

  $("#BtnTrashMD1").hide();
  $("#BtnTrashMD2").hide();
  $("#BtnTrashMD3").hide();
  $("#BtnTrashMD4").hide();
  $("#BtnTrashMD5").hide();
  $("#BtnTrashHOMD").hide();
  $("#BtnTrashID11").hide();
  $("#BtnTrashID12").hide();
  $("#BtnTrashID13").hide();
  $("#BtnTrashID14").hide();
  $("#BtnTrashID15").hide();
  $("#BtnTrashHOID").hide();
  $("#BtnTrashPL").hide();
  $("#BtnTrashNego").hide();
  $(".trmd").hide();
  $(".trid").hide();

  MasterNegosiator();
  $(".TitleNegoList").html('NEGOSIATOR <br><span class="infoheader">Tabel Nama Negosiator + Handling Part</span>');


  $(".BtnAddPIC").on("click", function () {
    var idx = $(this).attr("idx");
    var sect = $(this).attr("sect");
    var role = $(this).attr("role");
    if (sect === "MD") {
      var sectx = "MECHANICAL DESIGN+PROTOTYPE";
    } else if (sect === "ID") {
      var sectx = "INDUSTRIAL DESIGN";
    } else {
      var sectx = "ALL";
    }

    if (role === "PL") {
      var rolex = "PROJECT LEADER";
    } else if (role === "HEADOF") {
      var rolex = "HEAD OF";
    } else {
      var rolex = "";
    }

    $(".windowapproval").modal({ autofocus: false, closable : false, }).modal("show");
    $("#IdApp").val(idx);
    $("#filtercari").val("");
    $("#fiterbagian").dropdown("clear");
    $("#filterjabatan").dropdown("clear");
    $("#fiterbagian").dropdown("set selected", sectx);
    $("#filterjabatan").dropdown("set selected", rolex);
    TableListFunc("", sectx, rolex);
  });

  // RESPON KETIKA INPUT PENCARIAN DI KETIK
  $("#filtercari").on("keyup", function () {
    var FilterCari = $("#filtercari").val();
    var FilterBag = $("#fiterbagian").val();
    var FilterJab = $("#filterjabatan").val();
    $("#ApprovalList").DataTable().destroy();
    TableListFunc(FilterCari, FilterBag, FilterJab);
  });

  $("#fiterbagian, #filterjabatan").on("change", function () {
    var FilterCari = $("#filtercari").val();
    var FilterBag = $("#fiterbagian").val();
    var FilterJab = $("#filterjabatan").val();
    $("#ApprovalList").DataTable().destroy();
    TableListFunc(FilterCari, FilterBag, FilterJab);
  });

  $(".BtnTrashPIC").on("click", function () {
    var idApp = $(this).attr("idx");
    var idApp2 = parseInt(idApp) + 1;
    var idApp3 = parseInt(idApp) - 1;
    $("#MDDesign" + idApp).val("");
    $("#trmd" + idApp2).hide();
    $("#BtnTrashMD" + idApp).hide();
    $("#BtnAddMD" + idApp).show();
    $("#BtnTrashMD" + idApp3).show();
    $("#BtnAddMD" + idApp3).hide();
  });

  $(".BtnTrashPIC2").on("click", function () {
    var idApp = $(this).attr("idx");
    var idApp2 = parseInt(idApp) + 1;
    var idApp3 = parseInt(idApp) - 1;
    $("#IDDesign" + idApp).val("");
    $("#trid" + idApp2).hide();
    $("#BtnTrashID" + idApp).hide();
    $("#BtnAddID" + idApp).show();
    $("#BtnTrashID" + idApp3).show();
    $("#BtnAddID" + idApp3).hide();
  });

  $("#BtnTrashHOMD").on("click", function () {
    $("#MDHeadOf").val("");
    $("#BtnAddHOMD").show();
    $("#BtnTrashHOMD").hide();
  });
  $("#BtnTrashHOID").on("click", function () {
    $("#IDHeadOf").val("");
    $("#BtnAddHOID").show();
    $("#BtnTrashHOID").hide();
  });
  $("#BtnTrashPL").on("click", function () {
    $("#ProjectLeader").val("");
    $("#BtnAddPL").show();
    $("#BtnTrashPL").hide();
  });

  if (IdMPP) {

    LoadDataSignMPP(IdMPP);

  }
});
