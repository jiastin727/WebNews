const LogoutProtect = false;

function TableListFunc() {

  var JsonFilter = getCookie('FilterMPPMaterialList');
  var ArrayF = JSON.parse(JsonFilter);
  if(JsonFilter){
    var SearchF   = ArrayF[0];
    var MatTypeF  = ArrayF[1];
  } else {
    var SearchF   = "";
    var MatTypeF  = "ALL";
  }

  if (SearchF) {
    $("#fcari_mpp").val(SearchF);
    var SearchFStart = SearchF;
  } else {
    var SearchFStart = "";
  }
  if (MatTypeF) {
    $("#fmaterialtype_mpp").dropdown("set selected", MatTypeF);
    var MatTypeFStart = MatTypeF;
  } else {
    var MatTypeFStart = "ALL";
  }
  

  var FiterArry = [SearchFStart, MatTypeFStart];
  var JsonFilter = JSON.stringify(FiterArry);
  setCookie("FilterMPPMaterialList", JsonFilter, 5);

  $("#TableList").DataTable({
    dom:
      "<'ui stackable grid'" +
      "<'row'" +
      "<'left aligned sixteen wide column'>" +
      ">" +
      "<'row dt-table'" +
      "<'sixteen wide column'tr>" +
      ">" +
      "<'row'" +
      "<'left aligned seven wide column'B>" +
      "<'left aligned two wide column'>" +
      "<'right aligned seven wide column'p>" +
      ">" +
      ">",
    buttons: [
      {
        text: "10",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(10).draw();
        },
      },
      {
        text: "25",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(25).draw();
        },
      },
      {
        text: "50",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(50).draw();
        },
      },
      {
        text: "100",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(100).draw();
        },
      },
      {
        text: "1000",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(1000).draw();
        },
      },
    ],     
    destroy     : true,
    stateSave   : true,
    processing  : true,
    deferRender : true,
    serverSide  : true,
    orderClasses: false,
    scrollX     : true,
    scrollCollapse: true,
    pageLength  : 10,
    data        : [],
    language    : {
      sLengthMenu : "_MENU_",
      search      : "",
      searchPlaceholder: "Pencarian..",
      processing  : '<i class="spinner loading icon huge"></i>',
      info        : "_START_ sampai _END_ dari _TOTAL_ total data",
      paginate    : {
        "first"   : "Awal",
        "last"    : "Akhir",
        "next"    : "<i class='chevron right icon'></i>",
        "previous": "<i class='chevron left icon'></i>"
      },
      infoEmpty   : "Tidak ada data",
      select  : {
        rows  : ""
      }
    },
    order     : [[1, "desc"]],
    columns   : [
      { data  : 'MaterialNum' },
      { data  : 'Description' },
      { data  : 'VendorMatNum' },
      { data  : 'MaterialType' },
      { data  : 'Color' },
      { data  : 'ColorPercent' },
      { data  : 'BasedResin' },
      { data  : 'ColorVendor' },
      { data  : 'Note' },
    ],
   
    ajax      : {
      url     : `../RND_BackEnd/backend_mpp/master-material/load-list-noprice`,
      type    : "POST",
      headers : {
        user  : VUserName,
        token : VToken,
      },
      data    : {
        FSearch   : SearchFStart,
        FMaterialType : MatTypeFStart,
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    },
  });
}


function LoadhistoryPrice(idx){
  $.ajax({
    type: "POST",
    url     : `../RND_BackEnd/backend_mpp/master-material/load-history/`+idx,
    headers: {
      user  : VUserName,
      token : VToken
    },
    cache: false,
    success: function (data){
      var obj = JSON.parse(data);
      JmlDataA = obj.length;
      $("#TbodyHistPrice").empty();
      console.log(JmlDataA);
      for (a = 0; a < JmlDataA; a++) {
        $("#TbodyHistPrice").append(
          "<tr><td>"+
          obj[a]['Timestamp']+"</td><td class='center aligned'>"+
          obj[a]['Currency']+"</td><td class='right aligned'>"+
          obj[a]['Price']+"</td><td>"+
          obj[a]['UpdatedBy']+"</td><tr>"
        )
      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });

}



$(document).ready(function () {

  TableListFunc();

  $("#TableList").on("click", ".BtnHistoryPrice", function(){
    var idx = $(this).attr('eid');
    var mnum = $(this).attr('mnum');
    var mdes = $(this).attr('mdes');
    $(".WindowHistoryPrice").modal({ autofocus: false, closable : false, }).modal("show");
    LoadhistoryPrice(idx);
    $('#HistMatNum').text(mnum);
    $('#HistMatDes').text(mdes);
  });

  $(".CloseModal").on("click", function(){
    $(".WindowHistoryPrice").modal("hide");
  });


  //RESPON KETIKA INPUT PENCARIAN DI KETIK
  $("#fcari_mpp").on("keyup", function () {
    var FilterCari = $("#fcari_mpp").val();
    var FilterMatType = $("#fmaterialtype_mpp").val();
    var FiterArry = [FilterCari, FilterMatType];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterMPPMaterialList", JsonFilter, 5);
    $("#TableList").DataTable().destroy();
    TableListFunc();
    $("#TableList").DataTable().page(0).draw();
  });

  //RESPON KETIKA FILTER TAHUN DI RUBAH
  $("#fmaterialtype_mpp").on(
    "change",
    function () {
      var FilterCari = $("#fcari_mpp").val();
      var FilterMatType = $("#fmaterialtype_mpp").val();
      var FiterArry = [FilterCari, FilterMatType];
      var JsonFilter = JSON.stringify(FiterArry);
      setCookie("FilterMPPMaterialList", JsonFilter, 5);
      TableListFunc();
      $("#TableList").DataTable().page(0).draw();
    }
  );

  //RESET FILTER
  $(".resetfilter").on("click", function () {
    $("#fcari_mpp").val("");
    $("#fmaterialtype_mpp").dropdown("set selected", "ALL");
    var FiterArry = ["", "ALL"];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterMPPMaterialList", JsonFilter, 5);
    $("#TableList").DataTable().destroy();
    TableListFunc("", "ALL");
    $("#TableList").DataTable().page(0).draw();
  });

});