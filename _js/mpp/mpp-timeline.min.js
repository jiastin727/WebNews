// $(".ui.dropdown").dropdown();
// $(".menu .item").tab();

// Global Variable
// const NonceValue = "rdsystem2020";
const LogoutProtect = false;

// const ColorSignNo  = "#00139f";
// const ColorOwner  = "#00139f";
// const BgColorOwner  = "#eff0ff";
// const ColorRelease= "#505050";
// const ColorCancel = "#be0000";
// const ColorLock = "#860954";
// const BgColorLock = "#f3ebeb";

// var VUserName = getCookie("usrnm");
// var VToken    = getCookie("token");
// var RestLocMPP = decodeURIComponent(getCookie("restlocpsc"));
// let Ucrypt = new Encryption();
// var DUser  = Ucrypt.decrypt(EUser, NonceValue);
// var DJbtn  = Ucrypt.decrypt(EJbtn, NonceValue);
// var DSect  = Ucrypt.decrypt(ESect, NonceValue);
// var DGrup  = Ucrypt.decrypt(EGrup, NonceValue);


function TableListFunc() {

  var JsonFilter = getCookie('FilterMPPTimeline');
  var ArrayF = JSON.parse(JsonFilter);
  if(JsonFilter){
    var SearchF   = ArrayF[0];
    var JenisF    = ArrayF[1];
  } else {
    var SearchF   = "";
    var JenisF    = "mpp";
  }

  if (SearchF) {
    $("#fcari_mpp").val(SearchF);
    var SearchFStart = SearchF;
  } else {
    var SearchFStart = "";
  }

  if (JenisF) {
    $("#fjns_mpp").dropdown("set selected", JenisF);
    var JenisFStart = JenisF;
  } else {
    var JenisFStart = "mpp";
  }

  var FiterArry = [SearchFStart, JenisFStart];
  var JsonFilter = JSON.stringify(FiterArry);
  setCookie("FilterMPPTimeline", JsonFilter, 5);

  if (JenisFStart === 'mpp'){
    $("#TableList").DataTable({
      dom:
        "<'ui stackable grid'" +
        "<'row'" +
        "<'left aligned sixteen wide column'>" +
        ">" +
        "<'row dt-table'" +
        "<'sixteen wide column'tr>" +
        ">" +
        "<'row'" +
        "<'left aligned three wide column'>" +
        "<'right aligned five wide column'i>" +
        "<'right aligned eight wide column'B>" +
        ">" +
        ">",
      buttons: [
        {
          text: "10",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(10).draw();
          },
        },
        {
          text: "25",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(25).draw();
          },
        },
        {
          text: "50",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(50).draw();
          },
        },
        {
          text: "100",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(100).draw();
          },
        },
        {
          text: "1000",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(1000).draw();
          },
        },
      ],
      destroy     : true,
      stateSave   : true,
      processing  : true,
      deferRender : true,
      serverSide  : true,
      orderClasses: false,
      scrollY     : '60vh',
      pageLength  : 10,
      data        : [],
      language    : {
        sLengthMenu : "_MENU_",
        search      : "",
        searchPlaceholder: "Pencarian..",
        processing  : '<i class="spinner loading icon huge"></i>',
        info        : "_START_ sampai _END_ dari _TOTAL_ total data",
        paginate    : {
          "first"   : "Awal",
          "last"    : "Akhir",
          "next"    : "<i class='chevron right icon'></i>",
          "previous": "<i class='chevron left icon'></i>"
        },
        infoEmpty   : "Tidak ada data",
        select  : {
          rows  : ""
        }
      },
      order     : [[1, "desc"]],
      columns   : [
        { data  : 'no_mpp' },
        { data  : 'event' },
        { data  : 'timestamp' },
        { data  : 'progress' },
        { data  : 'status' },
        { data  : 'username' },
        { data: null,
          render: function (data) {
            if(DGrup === "ADMINISTRATOR"){
              return data['query'];
            } else {
              return ``;
            }
          },
        },
      ],

      createdRow: function (row, data, index) {
        $(row).find("td:eq(0)").css("border-right", "inset");
        $(row).find("td:eq(0)").css("border-right-color", ColorBorderFreeze);
      },

      columnDefs: [
        { className : "collapsing", targets: [2] },
      ],

      ajax : {
        url     : `../RND_BackEnd/backend_mpp/timeline/load/`+JenisFStart,
        type    : "POST",
        headers : {
          user  : VUserName,
          token : VToken,
        },
        data    : {
          FSearch   : SearchFStart,
          FJenis     : JenisFStart,
        },

        error: function () {
          IsTimeOut(LogoutProtect);
        },
      },
    });
  } else if (JenisFStart === 'ihp'){
    $("#TableList").DataTable({
      dom:
        "<'ui stackable grid'" +
        "<'row'" +
        "<'left aligned sixteen wide column'>" +
        ">" +
        "<'row dt-table'" +
        "<'sixteen wide column'tr>" +
        ">" +
        "<'row'" +
        "<'left aligned three wide column'>" +
        "<'right aligned five wide column'i>" +
        "<'right aligned eight wide column'B>" +
        ">" +
        ">",
      buttons: [
        {
          text: "10",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(10).draw();
          },
        },
        {
          text: "25",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(25).draw();
          },
        },
        {
          text: "50",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(50).draw();
          },
        },
        {
          text: "100",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(100).draw();
          },
        },
        {
          text: "1000",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(1000).draw();
          },
        },
      ],
      destroy     : true,
      stateSave   : true,
      processing  : true,
      deferRender : true,
      serverSide  : true,
      orderClasses: false,
      scrollY     : '60vh',
      pageLength  : 10,
      data        : [],
      language    : {
        sLengthMenu : "_MENU_",
        search      : "",
        searchPlaceholder: "Pencarian..",
        processing  : '<i class="spinner loading icon huge"></i>',
        info        : "_START_ sampai _END_ dari _TOTAL_ total data",
        paginate    : {
          "first"   : "Awal",
          "last"    : "Akhir",
          "next"    : "<i class='chevron right icon'></i>",
          "previous": "<i class='chevron left icon'></i>"
        },
        infoEmpty   : "Tidak ada data",
        select  : {
          rows  : ""
        }
      },
      order     : [[1, "desc"]],
      columns   : [
        { data  : 'no_ihp' },
        { data  : 'event' },
        { data  : 'timestamp' },
        { data  : 'progress' },
        { data  : 'status' },
        { data  : 'username' },
        { data: null,
          render: function (data) {
            if(DGrup === "ADMINISTRATOR"){
              return data['query'];
            } else {
              return ``;
            }
          },
        },
      ],

      createdRow: function (row, data, index) {
        $(row).find("td:eq(0)").css("border-right", "inset");
        $(row).find("td:eq(0)").css("border-right-color", ColorBorderFreeze);
      },

      columnDefs: [
        { className : "collapsing", targets: [2] },
      ],

      ajax : {
        url     : `../RND_BackEnd/backend_mpp/timeline/load/`+JenisFStart,
        type    : "POST",
        headers : {
          user  : VUserName,
          token : VToken,
        },
        data    : {
          FSearch   : SearchFStart,
          FJenis     : JenisFStart,
        },

        error: function () {
          IsTimeOut(LogoutProtect);
        },
      },
    });
  } else {
    $("#TableList").DataTable({
      dom:
        "<'ui stackable grid'" +
        "<'row'" +
        "<'left aligned sixteen wide column'>" +
        ">" +
        "<'row dt-table'" +
        "<'sixteen wide column'tr>" +
        ">" +
        "<'row'" +
        "<'left aligned three wide column'>" +
        "<'right aligned five wide column'i>" +
        "<'right aligned eight wide column'B>" +
        ">" +
        ">",
      buttons: [
        {
          text: "10",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(10).draw();
          },
        },
        {
          text: "25",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(25).draw();
          },
        },
        {
          text: "50",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(50).draw();
          },
        },
        {
          text: "100",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(100).draw();
          },
        },
        {
          text: "1000",
          action: function (e, dt, node, config) {
            $("#TableList").DataTable().page.len(1000).draw();
          },
        },
      ],
      destroy     : true,
      stateSave   : true,
      processing  : true,
      deferRender : true,
      serverSide  : true,
      orderClasses: false,
      scrollY     : '60vh',
      pageLength  : 10,
      data        : [],
      language    : {
        sLengthMenu : "_MENU_",
        search      : "",
        searchPlaceholder: "Pencarian..",
        processing  : '<i class="spinner loading icon huge"></i>',
        info        : "_START_ sampai _END_ dari _TOTAL_ total data",
        paginate    : {
          "first"   : "Awal",
          "last"    : "Akhir",
          "next"    : "<i class='chevron right icon'></i>",
          "previous": "<i class='chevron left icon'></i>"
        },
        infoEmpty   : "Tidak ada data",
        select  : {
          rows  : ""
        }
      },
      order     : [[1, "desc"]],
      columns   : [
        { data  : 'id_shipment' },
        { data  : 'event' },
        { data  : 'timestamp' },
        { data  : 'progress' },
        { data  : 'status' },
        { data  : 'username' },
        { data: null,
          render: function (data) {
            if(DGrup === "ADMINISTRATOR"){
              return data['query'];
            } else {
              return ``;
            }
          },
        },
      ],

      createdRow: function (row, data, index) {
        $(row).find("td:eq(0)").css("border-right", "inset");
        $(row).find("td:eq(0)").css("border-right-color", ColorBorderFreeze);
      },

      columnDefs: [
        { className : "collapsing", targets: [2] },
      ],

      ajax : {
        url     : `../RND_BackEnd/backend_mpp/timeline/load/`+JenisFStart,
        type    : "POST",
        headers : {
          user  : VUserName,
          token : VToken,
        },
        data    : {
          FSearch   : SearchFStart,
          FJenis     : JenisFStart,
        },

        error: function () {
          IsTimeOut(LogoutProtect);
        },
      },
    });
  }




}

$(document).ready(function () {

  TableListFunc();

  //RESPON KETIKA INPUT PENCARIAN DI KETIK
  $("#fcari_mpp").on("keyup", function () {
    var FilterCari = $("#fcari_mpp").val();
    var FilterJenis = $("#fjns_mpp").val();
    var FiterArry = [FilterCari, FilterJenis];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterMPPTimeline", JsonFilter, 5);
    $("#TableList").DataTable().destroy();
    TableListFunc();
    $("#TableList").DataTable().page(0).draw();
  });

  //RESPON KETIKA FILTER TAHUN DI RUBAH
  $("#fjns_mpp").on(
    "change",
    function () {
      var FilterCari = $("#fcari_mpp").val();
      var FilterJenis = $("#fjns_mpp").val();
      var FiterArry = [FilterCari, FilterJenis];
      var JsonFilter = JSON.stringify(FiterArry);
      setCookie("FilterMPPTimeline", JsonFilter, 5);
      TableListFunc();
      $("#TableList").DataTable().page(0).draw();
    }
  );

  //RESET FILTER
  $(".resetfilter").on("click", function () {
    $("#fcari_mpp").val("");
    $("#fjns_mpp").dropdown("set selected", "mpp");
    var FiterArry = ["", "mpp"];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterMPPTimeline", JsonFilter, 5);
    $("#TableList").DataTable().destroy();
    TableListFunc("", "mpp");
    $("#TableList").DataTable().page(0).draw();
  });


});