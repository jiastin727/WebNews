const NonceValue = "rdsystem2020";
const LogoutProtect = false;

const ColorSignNo = "#00139f";
const ColorOwner = "#00139f";
const BgColorOwner = "#eff0ff";
const ColorRelease = "#505050";
const ColorCancel = "#be0000";
const ColorLock = "#860954";
const BgColorLock = "#f3ebeb";

var restlocactiva = decodeURIComponent(getCookie("restlocactiva"));
var restlocpscxls = decodeURIComponent(getCookie("restlocpscxls"));
var restlocms = decodeURIComponent(getCookie("restlocms"));
var vusrnm = getCookie("usrnm");
var vtoken = getCookie("token");
let Ucrypt = new Encryption();
var Udecrypt = Ucrypt.decrypt(EncU, NonceValue);
var Jdecrypt = Ucrypt.decrypt(EncJ, NonceValue);

if (id_outstanding) {

  LoadDataAktiva(id_outstanding);

}

function LoadDataHRIS() {
  var itype = $('#NIKAktiva').val();
  console.log(itype);
  if (itype) {
    $('.NIKInput').addClass('loading');
    $.ajax({
      type: "POST",
      url: `${restlocactiva}datahris`,
      headers: {
        user: vusrnm,
        token: vtoken
      },
      data: {
        nik: itype,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        if (response.length > 3) {
          var nm = obj.name;
          var dept = obj.department;
          var bag = obj.ou_desc;
          $('.NIKInput').removeClass('loading');
          $('#PICAktiva').val(GetValuePTB(nm));
          $('#NamaHistoryAktiva').val(GetValuePTB(nm));
          $('#BagianAktiva').val(GetValuePTB(bag));
          $('#BagHistoryAktiva').val(GetValuePTB(bag));
          $('#DeptAktiva').val(GetValuePTB(dept));
          $('#DeptHistoryAktiva').val(GetValuePTB(dept));

        } else {

          $('.NIKInput').removeClass('loading');
          $('#PICAktiva').val('-');
          $('#BagianAktiva').val('-');
          Swal.fire({
            text: "Data tidak ditemukan di Database PTB !",
            timer: 3000,
            toast: true,
            showConfirmButton: false,
          });
        }
      },
      error: function () {
        if (LogoutProtect) {
          window.location.href = "./?link=loclogout";
        } else {
          Swal.fire("Error", "Server tidak merespon, segera hubungi Administrator di ext. 3553 !", "error");
        }
      },
    });
  }
}

$('#NIKAktiva').keyup(function (event) {
  if (event.keyCode == 13) {
    LoadDataHRIS();
  }
});

$('#NIKAktiva').on('blur', function () {
  LoadDataHRIS();
});

function GetValuePTB(a) {
  if (a) {
    return a;
  } else {
    return '-';
  }
}

function LoadDataAktiva(a) {
  $.ajax({
    type: "POST",
    url: `${restlocactiva}aktiva/load-aktiva/` + a,
    headers: {
      user: vusrnm,
      token: vtoken
    },
    cache: false,
    success: function (data) {
      var obj = JSON.parse(data);
      $("#JenisAktiva").dropdown("set selected", obj.jenis);
      $("#MerkAktiva").val();
      $("#DescAktiva").val(obj.description);
      $("#NoEquipAktiva").val(obj.no_equipment);
      $("#NoAssetAktiva").val(obj.asset);
      $("#SubAssetAktiva").val(obj.subnumber);
      $("#adminCC").val();
      $("#MatNumAktiva").val(obj.material_number);
      $("#NIKAktiva").val();
      $("#PlantAktiva").val();
      $("#PICAktiva").val();
      $("#VendorAktiva").val(obj.vendor);
      $("#VendorMatNumAktiva").val(obj.vendor_material_number);
      $("#NamaHistoryAktiva").val();
      $("#NoSeriAktiva").val();
      $("#BagHistoryAktiva").val();
      $("#JumlahAktiva").val(obj.qty);
      $("#golonganItem").val();
      $("#BaseUnitAktiva").val(obj.satuan);
      $("#statusBarang").val();
      $("#kodeStatus").val();
      $("#NOGRAktiva").val(obj.gr);
      $("#DateGRAktiva").val(obj.tgl_gr);
      $("#DateStatusAktiva").val();
      $("#PriceAktiva").val(obj.harga);
      $("#kalibrasiItem").val();
      $("#BuktiAktiva").val();
      $("#matauang").dropdown("set selected", obj.currency);
      $("#NoteAktiva").val();
      $("#GRYearAktiva").val(obj.gr_year);
      $("#GRLineAktiva").val(obj.gr_line);

    },
    error: function () {
      IsTimeOut(LogoutProtect);
    }
  });
}


function TableListFunc(FilterCariOutstanding, FilterPICOutstanding, FilterJenisOutstanding) {
  var DTables = $("#tableListOutstanding").DataTable({
    dom: "<'ui stackable grid'" +
      "<'row'" +
      "<'left aligned sixteen wide column'>" +
      ">" +
      "<'row dt-table'" +
      "<'sixteen wide column'tr>" +
      ">" +
      "<'row'" +
      "<'left aligned seven wide column'B>" +
      "<'left aligned two wide column'i>" +
      "<'right aligned seven wide column'p>" +
      ">" +
      ">",
    buttons: [{
        text: "10",
        action: function (e, dt, node, config) {
          $("#tableListOutstanding").DataTable().page.len(10).draw();
        },
      },
      {
        text: "25",
        action: function (e, dt, node, config) {
          $("#tableListOutstanding").DataTable().page.len(25).draw();
        },
      },
      {
        text: "50",
        action: function (e, dt, node, config) {
          $("#tableListOutstanding").DataTable().page.len(50).draw();
        },
      },
      {
        text: "100",
        action: function (e, dt, node, config) {
          $("#tableListOutstanding").DataTable().page.len(100).draw();
        },
      },
      {
        text: "1000",
        action: function (e, dt, node, config) {
          $("#tableListOutstanding").DataTable().page.len(1000).draw();
        },
      },
    ],
    destroy: true,
    stateSave: true,
    processing: true,
    deferRender: true,
    serverSide: true,
    orderClasses: false,
    pageLength: 10,
    data: [],
    language: {
      sLengthMenu: "_MENU_",
      search: "",
      searchPlaceholder: "Pencarian..",
      processing: '<i class="circle notch loading icon huge"></i>',
      info: "_START_ sampai _END_ dari _TOTAL_ total data",
      paginate: {
        "first": "Awal",
        "last": "Akhir",
        "next": "Berikutnya",
        "previous": "Sebelumnya"
      },
      infoEmpty: "Tidak ada data",
      select: {
        rows: ""
      }
    },
    order: [
      [2, "desc"]
    ],
    columns: [{
        data: null,
        render: function (data) {
          return `<span class="btnAddData" data-tooltip='Tambah Data Outstanding ke Aktiva RD' data-position = 'right center' data-inverted='' data-variation='basic' eid="${data['id']}"><i class="plus iconcoloradd circular icon"></i></span>`;
        },
      },
      {
        data: 'gr'
      },
      {
        data: 'tgl_gr'
      },
      {
        data: 'material_number'
      },
      {
        data: 'description'
      },
      {
        data: 'vendor_material_number'
      },
      {
        data: 'qty'
      },
      {
        data: 'currency'
      },
      {
        data: 'harga',  render: $.fn.dataTable.render.number( '.', ',', 0)
      },
      {
        data: 'asset'
      },
      {
        data: null,
        render: function (data) {
          if(data["status"] === 'OUTSTANDING'){
            return `<span class='DelItems' eid="${data['id']}" edesc="${data['description']}" data-tooltip='Hapus dari data Outstanding' data-inverted=''><i class='trash alternate circular red link icon'></i></span>`;
          } else if(data["status"] === 'VIEW'){
            return `<span class='RecoverItems' eid="${data['id']}" edesc="${data['description']}" data-tooltip='Pulihkan data ke Outstanding' data-inverted=''><i class='recycle grey circular link icon'></i></span>`;
          }
        },
      },

    ],
    columnDefs: [{
        className: "center aligned",
        targets: [0,2,10]
      },
      {
        className: "collapsing",
        targets: [3, 7, 8]
      },
      {
        targets: [0, 8],
        orderable: false
      },
    ],

    createdRow: function (row, data, index) {

      //WARNA OWNER & STATUS ACTIVE/DRAFT
      if (data["peminta"] == Udecrypt) {
        $(row).find("td").css("color", ColorOwner);
      }
      if(data["status"] === 'VIEW'){
        $(row).find("td").css("background-color","#ebebeb");
        $(row).find("td").css("color", '#cbc9c9');
      } else { 
        $(row).find("td").css("background-color",'#fff');
        $(row).find("td").css("color", '#000');
      }
    },

    ajax: {
      url: `${restlocactiva}getOutstanding`,
      type: "POST",
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        FSearch: FilterCariOutstanding,
        FNama: FilterPICOutstanding,
        FJenis: FilterJenisOutstanding,
      },

      error: function () {
        if (LogoutProtect) {
          window.location.href = "./?link=loclogout";
        } else {
          Swal.fire("Error", "Server tidak merespon, segera hubungi Administrator di ext. 3553 !", "error");
        }
      },
    },
  });
}

$("#tableListOutstanding").on("click", ".btnAddData", function () {
  var eid = $(this).attr("eid");
  let encryption = new Encryption();
  var eidENC = encryption.encrypt(eid, NonceValue);
  window.location.href = "./?link=aktivaAddItem&i=" + eidENC;
});

$("#tableListOutstanding").on("click", ".DelItems", function () {
  var eid  = $(this).attr('eid');
  var edesc = $(this).attr('edesc');
  DeleteDocument(eid,edesc);
});

$("#tableListOutstanding").on("click", ".RecoverItems", function () {
  var eid  = $(this).attr('eid');
  var edesc = $(this).attr('edesc');
  RecoverDocument(eid,edesc);
});

$('#btnAddtoDB').on('click', function () {
  data = [{
    // IdMkg         : IdEdit,
    JnsAct: $("#JenisAktiva").val(),
    MrkAct: $("#MerkAktiva").val(),
    DscAct: $("#DescAktiva").val(),
    EqpAct: $("#NoEquipAktiva").val(),
    AstAct: $("#NoAssetAktiva").val(),
    SubAct: $("#SubAssetAktiva").val(),
    CstAct: $("#adminCC").val(),
    MatAct: $("#MatNumAktiva").val(),
    NikAct: $("#NIKAktiva").val(),
    Plant: $("#PlantAktiva").val(),
    user: Udecrypt,
    PicAct: $("#PICAktiva").val(),
    DeptAct: $("#DeptAktiva").val(),
    VendAct: $("#VendorAktiva").val(),
    VMatAct: $("#VendorMatNumAktiva").val(),
    NamHAct: $("#NamaHistoryAktiva").val(),
    DeptHAct: $("#DeptHistoryAktiva").val(),
    SeriAct: $("#NoSeriAktiva").val(),
    BagHAct: $("#BagHistoryAktiva").val(),
    JmlAct: $("#JumlahAktiva").val(),
    GolAct: $("#golonganItem").val(),
    BaseAct: $("#BaseUnitAktiva").val(),
    StBrAct: $("#statusBarang").val(),
    KDStAct: $("#kodeStatus").val(),
    NoGRAct: $("#NOGRAktiva").val(),
    DtGrAct: $("#DateGRAktiva").val(),
    GRyrAct: $("#GRYearAktiva").val(),
    PrceAct: $("#PriceAktiva").val(),
    KalbAct: $("#kalibrasiItem").val(),
    GRLnAct: $("#GRLineAktiva").val(),
    CurrAct: $("#matauang").val(),
    NoteAct: $("#NoteAktiva").val(),
  }, ];
  $.ajax({
    type: "POST",
    url: `${restlocactiva}CreateItemManual`,
    headers: {
      user: vusrnm,
      token: vtoken
    },
    data: {
      data: data
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      if (isEmpty(obj)) {
        IsResponseEmptyObj();
      } else if (obj) {
        if (obj.status == false) {
          IsResponseFalse(obj.message);
        } else {
          IsResponseTrue(obj.message);
          window.location.href = "./?link=aktiva";
        }
      } else {
        Swal.fire('Error', 'Ada kendal di koneksi/database, data tidak tersimpan !', 'error')
      }
    },
    error: function () {
      if (LogoutProtect) {
        window.location.href = "./?link=loclogout";
      } else {
        Swal.fire("Error", "Server tidak merespon, segera hubungi Administrator di ext. 3553 !", "error");
      }
    },
  });
});

$("#HeaderButtonEdit").click(function () {
  data = [{
    // IdMkg         : IdEdit,
    JnsAct: $("#JenisAktiva").val(),
    MrkAct: $("#MerkAktiva").val(),
    DscAct: $("#DescAktiva").val(),
    EqpAct: $("#NoEquipAktiva").val(),
    AstAct: $("#NoAssetAktiva").val(),
    CstAct: $("#adminCC").val(),
    MatAct: $("#MatNumAktiva").val(),
    NikAct: $("#NIKAktiva").val(),
    Plant: $("#PlantAktiva").val(),
    user: Udecrypt,
    PicAct: $("#PICAktiva").val(),
    DeptAct: $("#DeptAktiva").val(),
    VendAct: $("#VendorAktiva").val(),
    VMatAct: $("#VendorMatNumAktiva").val(),
    NamHAct: $("#NamaHistoryAktiva").val(),
    DeptHAct: $("#DeptHistoryAktiva").val(),
    SeriAct: $("#NoSeriAktiva").val(),
    BagHAct: $("#BagHistoryAktiva").val(),
    JmlAct: $("#JumlahAktiva").val(),
    GolAct: $("#golonganItem").val(),
    BaseAct: $("#BaseUnitAktiva").val(),
    StBrAct: $("#statusBarang").val(),
    KDStAct: $("#kodeStatus").val(),
    NoGRAct: $("#NOGRAktiva").val(),
    DtGrAct: $("#DateGRAktiva").val(),
    GRyrAct: $("#GRYearAktiva").val(),
    PrceAct: $("#PriceAktiva").val(),
    KalbAct: $("#kalibrasiItem").val(),
    GRLnAct: $("#GRLineAktiva").val(),
    CurrAct: $("#matauang").val(),
    NoteAct: $("#NoteAktiva").val(),
  }, ];
  console.log(data);
  $.ajax({
    type: "POST",
    url: `${restlocactiva}CreateItemOutstanding/` + id_outstanding,
    headers: {
      user: vusrnm,
      token: vtoken
    },
    data: {
      data: data
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      if (isEmpty(obj)) {
        IsResponseEmptyObj();
      } else if (obj) {
        if (obj.status == false) {
          IsResponseFalse(obj.message);
        } else {
          IsResponseTrue(obj.message);
          // console.log(id_outstanding);
          let encryption = new Encryption();
          var eidENC = encryption.encrypt(id_outstanding, NonceValue);
          // window.location.href = "./?link=aktiva";
          window.location.href = "./?link=aktivaSignAdd&n=" + eidENC;
        }
      } else {
        Swal.fire('Error', 'Ada kendal di koneksi/database, data tidak tersimpan !', 'error')
      }
    },
    error: function () {
      if (LogoutProtect) {
        window.location.href = "./?link=loclogout";
      } else {
        Swal.fire("Error", "Server tidak merespon, segera hubungi Administrator di ext. 3553 !", "error");
      }
    },
  });
});

$('#dwnldxlsoutstanding').on('click', function() {
    var FilterCariOutstanding = $("#fcarioutstanding").val();
    var FilterPICOutstanding = $("#filterPICOut").val();
    var FilterJenisOutstanding = $("#filterJenis").val();
  $.ajax({
    type    : "GET",
    url     : `${restlocpscxls}DownloadExcelListOutstanding`,
    headers: {
        user: vusrnm,
        token: vtoken,
    },
    data: {
      FSearch: FilterCariOutstanding,
      FNama: FilterPICOutstanding,
      FJenis: FilterJenisOutstanding,
    },
    cache: false,
    success: function (response){
      window.location.href = "../RND_Upload/Aktiva/Excel/ListItemOutstanding.xlsx";
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });
});

$('#syncoutstanding').on('click', function() {
  $('.segment').dimmer('show');
  $.ajax({
    type: "POST",
    url: `${restlocactiva}sync-sap`,
    headers: {
      user  : vusrnm,
      token : vtoken
    },
    data: { user :Udecrypt},
    cache: false,
    success: function (response){
      var obj = JSON.parse(response);
      console.log(obj.message);
      if(obj.status === true){
        $('.segment').dimmer('hide');
        var json_str = getCookie('FilterOutstandingActiva');
        var arr = JSON.parse(json_str);
        if (json_str) {
          var sfilter = arr[0];
          var pfilter = arr[1];
          var jfilter = arr[2];
        } else {
          var sfilter = "";
          var pfilter = "ALL";
          var jfilter = "ALL";
        }

        if (sfilter) {
          $("#fcarioutstanding").val(sfilter);
          var sfilterstart = sfilter;
        } else {
          var sfilterstart = "";
        }
        if (pfilter) {
          $("#filterPICOut").dropdown("set selected", pfilter);
          var pfilterstart = pfilter;
        } else {
          var pfilterstart = "ALL";
        }
        if (jfilter) {
          $("#filterJenis").dropdown("set selected", jfilter);
          var jfilterstart = jfilter;
        } else {
          var jfilterstart = "ALL";
        }

        var FiterArry = [sfilterstart, pfilterstart, jfilterstart];
        var JsonFilter = JSON.stringify(FiterArry);
        setCookie("FilterOutstandingActiva", JsonFilter, 5);

        TableListFunc(sfilterstart, pfilterstart, jfilterstart);
      }else if(obj.status === false){
        $('.segment').dimmer('hide');
        IsResponseFalse(obj.message);
      }
    },
    error: function(){
      //window.location.href = "./?link=loclogout";
      console.log('Server tidak merespon, segera hubungi Administrator di ext. 3553 !');
    }
  });
});

function DeleteDocument(eid,edesc){
  Swal.fire({
    title: "<h3>Hapus Outstanding '"+edesc+"' ini?</h3>",
    html: "Silakan tentukan pilihan model penghapusan dokumen yang dimaksud.",
    showDenyButton: true,
    showCancelButton: false,
    confirmButtonText: 'Hapus, Jangan Tampilkan Lagi',
    denyButtonText: `Tandai sebagai hapus`,
  }).then((result) => {
    // console.log(result);
    var Flag = "";
    if (result.isConfirmed) {
      var Flag = "DELETEALL";
    } else if (result.isDenied) {
      var Flag = "DELETEVIEW";
    } 
    if(Flag === 'DELETEALL' || Flag === 'DELETEVIEW'){
      if(Flag === 'DELETEALL'){
        var rest = `${restlocactiva}deleteOutstanding`;
      }
      else if (Flag === 'DELETEVIEW'){
        var rest = `${restlocactiva}deleteSoftOutstanding`;
      }
      $.ajax({
        type: "POST",
        url     : rest,
        headers: {
          user  : vusrnm,
          token : vtoken
        },
        data: { 
          id: eid,
          edesc  : edesc, 
          Flag  : Flag ,
          pic : Udecrypt
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(response);
          if(isEmpty(obj)) {
            IsResponseEmptyObj();
          } else if(obj) {
            if (obj.status == false){
              IsResponseFalse(obj.message);
            } else {
              IsResponseTrue(obj.message);
              $(".WindowEditDocument").modal("hide");
              location.reload();
            }
          } else {
            IsResponseErrorElse();
          }
        },
        error: function () {
          IsTimeOut(LogoutProtect);
        },
      });
    }
  });
}

function RecoverDocument(eid,edesc){
  Swal.fire({
    title: "<h3>Recover Outstanding '"+edesc+"' ini?</h3>",
    // html: "Silakan tentukan pilihan model penghapusan dokumen yang dimaksud.",
    showDenyButton: false,
    showCancelButton: true,
    confirmButtonText: "Kembalikan File ini",
    // denyButtonText: `Tandai sebagai dihapus`,
    
  }).then((result) => {
    console.log(result);
    var Flag = "";
    if (result.isConfirmed) {
      var Flag = "RECOVER";
    }
    if(Flag === 'RECOVER'){
      $.ajax({
        type: "POST",
        url     : `${restlocactiva}recoverOutstanding`,
        headers: {
          user  : vusrnm,
          token : vtoken
        },
        data: { 
          id: eid,
          edesc  : edesc, 
          Flag  : Flag ,
          pic : Udecrypt
        },
        cache: false,
        success: function (response) {
          var obj = JSON.parse(response);
          if(isEmpty(obj)) {
            IsResponseEmptyObj();
          } else if(obj) {
            if (obj.status == false){
              IsResponseFalse(obj.message);
            } else {
              IsResponseTrue(obj.message);
              $(".WindowEditDocument").modal("hide");
              location.reload();
            }
          } else {
            IsResponseErrorElse();
          }
        },
        error: function () {
          IsTimeOut(LogoutProtect);
        },
      });
    }
  });
}

$(document).ready(function () {

  $("#signApprovalWO").click(function () {
    window.location.href = "./?link=aktivaSignApprovalWriteoff";
  });

  $('#btnAddManual').click(function () {
    window.location.href = "./?link=aktivaKeyIn";
  });


  $('#btnCancelAdd').click(function () {
    window.location.href = "./?link=aktiva";
  });


  //Read Filter Cookies
  var d = new Date();
  var yearnow = d.getFullYear();

  var json_str = getCookie('FilterOutstandingActiva');
  var arr = JSON.parse(json_str);
  if (json_str) {
    var sfilter = arr[0];
    var pfilter = arr[1];
    var jfilter = arr[2];
  } else {
    var sfilter = "";
    var pfilter = "ALL";
    var jfilter = "ALL";
  }

  if (sfilter) {
    $("#fcarioutstanding").val(sfilter);
    var sfilterstart = sfilter;
  } else {
    var sfilterstart = "";
  }
  if (pfilter) {
    $("#filterPICOut").dropdown("set selected", pfilter);
    var pfilterstart = pfilter;
  } else {
    var pfilterstart = "ALL";
  }
  if (jfilter) {
    $("#filterJenis").dropdown("set selected", jfilter);
    var jfilterstart = jfilter;
  } else {
    var jfilterstart = "ALL";
  }

  var FiterArry = [sfilterstart, pfilterstart, jfilterstart];
  var JsonFilter = JSON.stringify(FiterArry);
  setCookie("FilterOutstandingActiva", JsonFilter, 5);

  TableListFunc(sfilterstart, pfilterstart, jfilterstart);

  $("#addnewoutstanding").on("click", function () {
    window.location.href = "./?link=aktivaKeyIn";
  });

  $("#tableListItem").on("click", ".signItemAdd", function () {
    var eid = $(this).attr("eid");
    window.location.href = "./?link=aktivaSignAdd&n=" + eid;
  });

  $('[data-toggle="datepicker"]').datepicker({
    format: 'yyyy-mm-dd',
    autoHide: true,
    weekStart: 1
  });

  //RESPON KETIKA INPUT PENCARIAN DI KETIK
  $("#fcarioutstanding").on("keyup", function () {
    var FilterCariOutstanding = $("#fcarioutstanding").val();
    var FilterPICOutstanding = $("#filterPICOut").val();
    var FilterJenisOutstanding = $("#filterJenis").val();
    var FiterArry = [FilterCariOutstanding, FilterPICOutstanding, FilterJenisOutstanding];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterOutstandingActiva", JsonFilter, 5);
    $("#tableListOutstanding").DataTable().destroy();
    TableListFunc(FilterCariOutstanding, FilterPICOutstanding, FilterJenisOutstanding);
    $("#tableListOutstanding").DataTable().page(0).draw();

  });

  //RESPON KETIKA FILTER TAHUN DI RUBAH
  $("#filterPICOut, #filterJenis").on(
    "change",
    function () {
      var FilterCariOutstanding = $("#fcarioutstanding").val();
      var FilterPICOutstanding = $("#filterPICOut").val();
      var FilterJenisOutstanding = $("#filterJenis").val();
      var FiterArry = [FilterCariOutstanding, FilterPICOutstanding, FilterJenisOutstanding];
      var JsonFilter = JSON.stringify(FiterArry);
      setCookie("FilterOutstandingActiva", JsonFilter, 5);
      TableListFunc(FilterCariOutstanding, FilterPICOutstanding, FilterJenisOutstanding);
      // var table = $("#PSSList").DataTable();
      // var inff = table.page.info();
      // console.log(inff);
      $("#tableListOutstanding").DataTable().page(0).draw();

    }
  );

  // //RESET FILTER
  $(".resetfilter").on("click", function () {
    var d = new Date();
    var yearnow = d.getFullYear();
    $("#fcarioutstanding").val("");
    $("#filterPICOut").dropdown("set selected", "ALL");
    $("#filterJenis").dropdown("set selected", "ALL");
    var FiterArry = ["", "ALL", "ALL"];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterOutstandingActiva", JsonFilter, 5);
    $("#tableListOutstanding").DataTable().destroy();
    TableListFunc("", "ALL", "ALL");
    $("#tableListOutstanding").DataTable().page(0).draw();

  });

  // $("#filterPICOut").on('change', function(){
  //     var pic = document.getElementById("filterPICOut").value;
  //     var jenis = document.getElementById("filterJenis").value;
  //     TableListFunc(pic, jenis);
  // });

  // $("#filterJenis").on('change', function(){
  //     var pic = document.getElementById("filterPICOut").value;
  //     var jenis = document.getElementById("filterJenis").value;
  //     TableListFunc(pic, jenis);
  // });

  $('.ui.dropdown').dropdown();

  //baseunit autocomplete
  $(".ui.search.baseunit").search({
    minCharacters: 1,
    apiSettings: {
      url: "2_psonline/_autocompletebaseunit.php?q={query}",
    },
    fields: {
      results: "data",
      title: "sap",
      description: "description",
    },
  });

  $('.ui.search.appset')
    .search({
      apiSettings: {
        url: '3_aktiva/_autocompletenik.php?q={query}'
      },
      fields: {
        results: 'data',
        title: 'nik',
        description: 'name'
      },
      minCharacters: 1,
      onSelect: function (response) {
        $('#NIKAktiva').val(response.nik);
        LoadDataHRIS();
      },
    });

    $(".ui.search.vendor").search({
        minCharacters: 3,
        apiSettings: {
          url: `${restlocms}search-vendor?q={query}`,
        },
        fields: {
          results: "data",
          title: "id",
          description: "desc",
        }
    });


});