//Activate dropdown & tab
$(".ui.pssdropdown").dropdown();
$(".ui.dropdown").dropdown();
$(".menu .item").tab();

// Global Variable
const NonceValue = "rdsystem2020";
const ColorOwner = "#00139f";
var vusrnm = getCookie("usrnm");
var vtoken = getCookie("token");
var restlocvideonum = decodeURIComponent(getCookie("restlocvideonum"));
let Ucrypt = new Encryption();
var Udecrypt = Ucrypt.decrypt(EncU, NonceValue);
const LogoutProtect = false;

function TableListFunc(FSearch, FYear, FNama, FBagian) {
  $("#TMPBList").DataTable({
    dom:
      "<'ui stackable grid'" +
      "<'row'" +
      "<'left aligned sixteen wide column'>" +
      ">" +
      "<'row dt-table'" +
      "<'sixteen wide column'tr>" +
      ">" +
      "<'row'" +
      "<'left aligned eight wide column'B>" +
      "<'right aligned eight wide column'p>" +
      ">" +
      ">",
    buttons: [
      {
        text: "10",
        action: function (e, dt, node, config) {
          $("#TMPBList").DataTable().page.len(10).draw();
        },
      },
      {
        text: "25",
        action: function (e, dt, node, config) {
          $("#TMPBList").DataTable().page.len(25).draw();
        },
      },
      {
        text: "50",
        action: function (e, dt, node, config) {
          $("#TMPBList").DataTable().page.len(50).draw();
        },
      },
      {
        text: "100",
        action: function (e, dt, node, config) {
          $("#TMPBList").DataTable().page.len(100).draw();
        },
      },
      {
        text: "1000",
        action: function (e, dt, node, config) {
          $("#TMPBList").DataTable().page.len(1000).draw();
        },
      },
    ],
    destroy: true,
    stateSave: true,
    processing: true,
    deferRender: true,
    serverSide: true,
    orderClasses: false,
    pageLength: 10,
    data: [],
    language: {
      sLengthMenu: "_MENU_",
      search: "",
      searchPlaceholder: "Search..",
      processing: '<i class="circle notch loading icon huge"></i>',
    },
    order: [[0, "desc"]],
    columns: [
      { data: null,
        render: function (data, type, row) {
            return parseInt(data[0]).toString(16).toUpperCase();
        },
      },
      { data: null,
        render: function (data, type, row) {
            return data[2];
        },
      },
      { data: null,
        render: function (data, type, row) {
          if (data[12] !=="" ) {
            return `<i class="file outline red viewdoc icon" id="${data[0]}" num="${data[4]}" rev="${data[5]}" ext="${data[12]}">`;
          } else {
            return `<i class="file outline greyish icon">`;
          }
        },
      },
      { data: 4 },
      { data: 5 },
      { data: 8 },
      { data: 7 },
      { data: 13 },
      { data: 10 },
      { data: null,
        render: function (data, type, row) {
          if ( data[10] == Udecrypt ) {
            return `<i class="edit outline edittmpb iconcoloredit icon" id="${data[0]}" num="${data[4]}" chs="${data[8]}" typ="${data[7]}" not="${data[13]}" rev="${data[5]}">`;
          } else {
            return "";
          }
        },
      },
    ],
    columnDefs: [
      { className: "center aligned", targets: [0,1,2,4,5] },
      { className: "collapsing", targets: [0,1,3] },
      { orderable: false, targets: [2,9] },
    ],

    ajax: {
      url: `${restlocvideonum}table_tmpb`,
      type: "POST",
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        FSearch: FSearch,
        FYear: FYear,
        FNama: FNama,
      },
      error: function () {
        // window.location.href = "./?link=loclogout";
        Swal.fire(
          "Error",
          "Server tidak merespon, segera hubungi Administrator di ext. 3553 !",
          "error"
        );
      },
    },
  });

}


$(document).ready(function () {

  $("#addnewtmpb").click(function(){
    $(".additem").modal('show');
    $('#inputchs').val('')
    $('#inputtype').val('')
    $('#inputnote').val('')
  });

  $("#uploadtmpb").click(function(){
    var id   = $('#einputid').val();
    var num  = $('#einputnum').val();
    $("#uinputid").val(id);
    $("#uinputnum").val(num);
    $("#utmpbnumber").text(num);
    $(".uploaditem").modal('show');
    $(".edititem").modal('hide');
  });

  $("#TMPBList").on("click", ".edittmpb", function () {
    var id  = $(this).attr("id");
    var num = $(this).attr("num");
    var chs = $(this).attr("chs");
    var typ = $(this).attr("typ");
    var not = $(this).attr("not");
    var rev = $(this).attr("rev");
    $("#tmpbnumber").text(num);
    $("#einputid").val(id);
    $("#einputchs").val(chs);
    $("#einputtype").val(typ);
    $("#einputnote").val(not);
    $("#einputnum").val(num);
    if(rev){
      $(".diveditrev").hide();
      setTimeout(function() { $('#einputnote').focus() }, 1000);
    } else {
      $(".diveditrev").show();
    }
    $(".edititem").modal('show');
  });


  $("#TMPBList").on("click", ".viewdoc", function () {
    var num = $(this).attr("num").replaceAll("/", ".");
    var rev = $(this).attr("rev");
    var ext = $(this).attr("ext");
    window.open("../RND_Upload/VideoDoc/TMPB_"+num+rev+"."+ext, "_blank");
  });

  $("#tabtmpb").click(function(){
    window.location.href = "./?link=vidindex";
  });
  $("#tabta").click(function(){
    window.location.href = "./?link=vidindex&sub=TA";
  });
  $("#tabsercom").click(function(){
    window.location.href = "./?link=vidindex&sub=SC";
  });
  $("#tabcpv").click(function(){
    window.location.href = "./?link=vidindex&sub=CPV";
  });
  $("#tabdrr").click(function(){
    window.location.href = "./?link=vidindex&sub=DRR";
  });
  $("#tabfamily").click(function(){
    window.location.href = "./?link=vidindex&sub=FAM";
  });
  $("#tabsetting").click(function(){
    window.location.href = "./?link=vidindex&sub=SET";
  });


});

//SAVE NEW TMPB
$('#savedata').on('click', function(e){
  var ichss = $('#inputchs').val();
  var itype = $('#inputtype').val();
  var inote = $('#inputnote').val();
  $.ajax({
    type: "POST",
    url: `${restlocvideonum}create_tmpb`,
    headers : {
      user  : vusrnm,
      token : vtoken
    },
    data: {
      ichss     : ichss,
      itype     : itype,
      inote     : inote,
    },
    cache: false,
    success: function (response){
      var obj = JSON.parse(response);
      if(isEmpty(obj)) {
        console.log('Gagal Simpan mas brooo, data kosong');
      } else if(obj) {
        if (obj.status == false){
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: 'warning',
            showConfirmButton: false
          })
        } else {
          Swal.fire({
            title: 'Berhasil',
            text: obj.message,
            timer: 1500,
            position: 'top-end',
            icon: 'success',
            showConfirmButton: false
          })
          //window.location.href = "./?link=pscindex";
        }
        $(".additem").modal('hide');
        var d = new Date();
        var yearnow = d.getFullYear();
        var json_str = getCookie('FilterTMPB');
        var arr = JSON.parse(json_str);
        if(json_str){
          var sfilter = arr[0];
          var tfilter = arr[1];
          var mfilter = arr[2];
        } else {
          var sfilter = "";
          var tfilter = yearnow;
          var mfilter = "ALL";
        }
        TableListFunc( sfilter, tfilter, mfilter);

      } else {
        Swal.fire('Error','Ada kendal di koneksi/database, data tidak tersimpan !','error')
      }
    },
    error: function () {
      if (LogoutProtect){
        window.location.href = "./?link=loclogout";
      } else {
        Swal.fire("Error", "Server tidak merespon, segera hubungi Administrator di ext. 3553 !","error" );
      }
    },
  });
});


//SAVE EDIT TMPB
$('#saveedit').on('click', function(e){
  var iid   = $('#einputid').val();
  var inum  = $('#einputnum').val();
  var ichss = $('#einputchs').val();
  var itype = $('#einputtype').val();
  var inote = $('#einputnote').val();
  $.ajax({
    type: "POST",
    url: `${restlocvideonum}update_tmpb`,
    headers : {
      user  : vusrnm,
      token : vtoken
    },
    data: {
      iid       : iid,
      ichss     : ichss,
      itype     : itype,
      inote     : inote,
      inum      : inum,
    },
    cache: false,
    success: function (response){
      var obj = JSON.parse(response);
      if(isEmpty(obj)) {
        console.log('Gagal Simpan mas brooo, data kosong');
      } else if(obj) {
        if (obj.status == false){
          Swal.fire({
            text: obj.message,
            timer: 1500,
            icon: 'warning',
            showConfirmButton: false
          })
        } else {
          Swal.fire({
            text: obj.message,
            timer: 1500,
            position: 'top-end',
            icon: 'success',
            showConfirmButton: false
          })
        }
        $(".edititem").modal('hide');
        var d = new Date();
        var yearnow = d.getFullYear();
        var json_str = getCookie('FilterTMPB');
        var arr = JSON.parse(json_str);
        if(json_str){
          var sfilter = arr[0];
          var tfilter = arr[1];
          var mfilter = arr[2];
        } else {
          var sfilter = "";
          var tfilter = yearnow;
          var mfilter = "ALL";
        }
        TableListFunc( sfilter, tfilter, mfilter);

      } else {
        Swal.fire('Error','Ada kendal di koneksi/database, data tidak tersimpan !','error')
      }
    },
    error: function () {
      if (LogoutProtect){
        window.location.href = "./?link=loclogout";
      } else {
        Swal.fire("Error", "Server tidak merespon, segera hubungi Administrator di ext. 3553 !","error" );
      }
    },
  });
});



//REVISI DATA
$('#revisidata').on('click', function(e){

  var iid   = $('#einputid').val();
  var inum  = $('#einputnum').val();

  Swal.fire({
      title: '<h3>Revisi No '+inum+'?</h3>',
      icon: 'info',
      confirmButtonText: 'Ya',
      showCancelButton: true
    }).then((result) => {
      if (result.value) {
        $(".edititem").modal('hide');
        $.ajax({
          type: "POST",
          url: `${restlocvideonum}revisi_tmpb`,
          headers : {
            user  : vusrnm,
            token : vtoken
          },
          data: {
            inum  : inum,
            iid   : iid
          },
          cache: false,
          success: function (response){
            var obj = JSON.parse(response);
            if(isEmpty(obj)) {
              Swal.fire('Error','Server error, Data mungkin bermasalah !','error');
            } else if (obj.code == "error"){
              Swal.fire('',obj.message,'error');
            } else {
              Swal.fire('Berhasil','TMPB berhasil direvisi.','success');
              var d = new Date();
              var yearnow = d.getFullYear();
              var json_str = getCookie('FilterTMPB');
              var arr = JSON.parse(json_str);
              if(json_str){
                var sfilter = arr[0];
                var tfilter = arr[1];
                var mfilter = arr[2];
              } else {
                var sfilter = "";
                var tfilter = yearnow;
                var mfilter = "ALL";
              }
              TableListFunc( sfilter, tfilter, mfilter);
            }
          },
          error: function(){
            Swal.fire('Error','Server tidak merespon, segera hubungi Webmaster !','error')
          }
        });
      }
    })

});


// Upload TMPB Dokumen
$("#saveupload").on("click", function () {
  var file_data = $("#uinputfile").prop("files")[0];
  var idtmpb    = $('#uinputid').val();
  var numtmpb   = $('#uinputnum').val();
  var form_data = new FormData();
  form_data.append("file", file_data);
  form_data.append("idtmpb", idtmpb);
  form_data.append("numtmpb", numtmpb);
  $.ajax({
    type: "POST",
    dataType: "text",
    contentType: false,
    processData: false,
    url: `${restlocvideonum}upload_tmpb`,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: form_data,
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      if (obj.status == false) {
        Swal.fire({
          text: obj.message,
          timer: 1500,
          icon: "warning",
          showConfirmButton: false,
        });
      } else {
        Swal.fire({
          text: "Uploaded !",
          timer: 2000,
          toast: true,
          showConfirmButton: false,
        });
        var d = new Date();
        var yearnow = d.getFullYear();
        var json_str = getCookie('FilterTMPB');
        var arr = JSON.parse(json_str);
        if(json_str){
          var sfilter = arr[0];
          var tfilter = arr[1];
          var mfilter = arr[2];
        } else {
          var sfilter = "";
          var tfilter = yearnow;
          var mfilter = "ALL";
        }
        TableListFunc( sfilter, tfilter, mfilter);
        $(".uploaditem").modal("hide");
      }
    },
    error: function () {
      if (LogoutProtect){
        window.location.href = "./?link=loclogout";
      } else {
        Swal.fire("Error", "Server tidak merespon, segera hubungi Administrator di ext. 3553 !","error" );
      }
    },
  });
});


$(".canceldata").click(function(){
  $(".additem").modal('hide');
  $(".edititem").modal('hide');
  $(".uploaditem").modal('hide');
  $('#inputchs').val('')
  $('#inputtype').val('')
  $('#inputnote').val('')
});



    
//Read Filter Cookies
var d = new Date();
var yearnow = d.getFullYear();

var json_str = getCookie('FilterTMPB');
var arr = JSON.parse(json_str);
if(json_str){
  var sfilter = arr[0];
  var tfilter = arr[1];
  var mfilter = arr[2];
} else {
  var sfilter = "";
  var tfilter = yearnow;
  var mfilter = "ALL";
}

if (sfilter) {
  $("#fcari_tmpb").val(sfilter);
  var sfilterstart = sfilter;
} else {
  var sfilterstart = "";
}
if (tfilter) {
  $("#fthn_tmpb").dropdown("set selected", tfilter);
  var tfilterstart = tfilter;
} else {
  var tfilterstart = yearnow;
}
if (mfilter) {
  $("#fmn_tmpb").dropdown("set selected", mfilter);
  var mfilterstart = mfilter;
} else {
  var mfilterstart = "ALL";
}

var FiterArry = [sfilterstart, tfilterstart, mfilterstart];
var JsonFilter = JSON.stringify(FiterArry);
setCookie("FilterTMPB", JsonFilter, 5);

//Load Table
TableListFunc( sfilterstart, tfilterstart, mfilterstart);

//RESPON KETIKA INPUT PENCARIAN DI KETIK
$("#fcari_tmpb").on("keyup", function () {
  var FilterCari = $("#fcari_tmpb").val();
  var FilterTahun = $("#fthn_tmpb").val();
  var FilterNama = $("#fmn_tmpb").val();
  
  var FiterArry = [FilterCari, FilterTahun, FilterNama];
  var JsonFilter = JSON.stringify(FiterArry);
  setCookie("FilterTMPB", JsonFilter, 5);
  $("#PSSList").DataTable().destroy();
  TableListFunc(FilterCari, FilterTahun, FilterNama);
});

//RESPON KETIKA FILTER TAHUN DI RUBAH
$("#fthn_tmpb, #fmn_tmpb").on(
  "change",
  function () {
    var FilterCari = $("#fcari_tmpb").val();
    var FilterTahun = $("#fthn_tmpb").val();
    var FilterNama = $("#fmn_tmpb").val();
   
    var FiterArry = [FilterCari, FilterTahun, FilterNama];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterTMPB", JsonFilter, 5);
    TableListFunc(FilterCari, FilterTahun, FilterNama);
  }
);

//RESET FILTER
$(".resetfilter").on("click", function () {
  var d = new Date();
  var yearnow = d.getFullYear();
  $("#fcari_tmpb").val("");
  $("#fthn_tmpb").dropdown("set selected", yearnow);
  $("#fmn_tmpb").dropdown("set selected", "ALL");
  var FiterArry = ["", yearnow, "ALL"];
  var JsonFilter = JSON.stringify(FiterArry);
  setCookie("FilterTMPB", JsonFilter, 5);
  $("#PSSList").DataTable().destroy();
  TableListFunc("", yearnow, "ALL");
});
