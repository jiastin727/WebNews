$('.ui.dropdown').dropdown();
var restlocpsc = decodeURIComponent(getCookie("restlocpsc"));
var restlocbp = decodeURIComponent(getCookie("restlocbp"));
var vusrnm = getCookie("usrnm");
var vtoken = getCookie("token");
const NonceValue = "rdsystem2020";
const LogoutProtect = false;

$(document).ready(function() {

  if(IdEditBP){
    $('.inputsupply').addClass("disabled");
    
    $('#BPSlip').dropdown("clear");
    $('#BPSlip').dropdown("set selected", Slip);

    $('#BPGroupProduct').dropdown("clear");
    $('#BPGroupProduct').dropdown("set selected", GPrd);

    $('#BPJenisProduct').dropdown("clear");
    $('#BPJenisProduct').dropdown("set selected", JPrd);

    $('#BPProduct').dropdown("clear");
    $('#BPProduct').dropdown("set selected", Prod);
    // console.log(Prod);

    $('#BPSubPrd').dropdown("clear");
    $('#BPSubPrd').dropdown("set selected", SubP);

    $('#BPCekDQA').dropdown("clear");
    $('#BPCekDQA').dropdown("set selected", CekDQA);

    $('#BPDisperindag').dropdown("clear");
    $('#BPDisperindag').dropdown("set selected", Disperindag);

    $('#BPSite').dropdown("clear");
    $('#BPSite').dropdown("set selected", Site);

    $('#BPModel').dropdown("clear");
    $('#BPModel').dropdown("set selected", Model);

    // $('#BPKertas').dropdown("clear");
    // $('#BPKertas').dropdown("set selected", JKertas);

    // $('#BPKertas').dropdown("clear");
    // $('#BPKertas').dropdown("set selected", JKertas);

    // $('#BPTypeBP').dropdown("clear");
    // $('#BPTypeBP').dropdown("set selected", TypeBP);

    // $('#BPJumlahHalaman').dropdown("clear");
    // $('#BPJumlahHalaman').dropdown("set selected", JHal);
    
    $('#BPHeadofDQA').dropdown("clear");
    $('#BPHeadofDQA').dropdown("set selected", HDqa);

    $('#BPPL').dropdown("clear");
    $('#BPPL').dropdown("set selected", PeEl);
    $.ajax({
      type: "POST",
      url: `${restlocbp}readprd`,
      async: false,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        jprd  : JPrd,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        jmlData = obj.length;
        console.log(obj);
        if (obj.status == false) {
          IsResponseFalse(obj.message);
        } else {
          $('#BPProduct').dropdown('clear');
          $('#BPProduct').empty();
          $('#BPProduct').append(`<option value="-"></option>`);
          for (a = 0; a < jmlData; a++) {
            if(obj[a]['product'] === Prod){
              $('#BPProduct').append(`<option selected value="${obj[a]['product']}">${obj[a]['product']}</option>`);
            } else {
              $('#BPProduct').append(`<option value="${obj[a]['product']}">${obj[a]['product']}</option>`);
  
            }
          }
          
        }
          
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });


    $.ajax({
      type: "POST",
      url: `${restlocpsc}readsubprd`,
      async: false,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        prd  : Prod,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        jmlData = obj.length;
        // console.log(obj);
        if (obj.status == false) {
          IsResponseFalse(obj.message);
        } else {
          $('#BPSubPrd').dropdown('clear');
          $('#BPSubPrd').empty();
          $('#BPSubPrd').append(`<option value="-"></option>`);
          for (a = 0; a < jmlData; a++) {
            if(obj[a]['sub_product'] === SubP){
              $('#BPSubPrd').append(`<option selected value="${obj[a]['sub_product']}">${obj[a]['sub_product']}</option>`);
            } else {
              $('#BPSubPrd').append(`<option value="${obj[a]['sub_product']}">${obj[a]['sub_product']}</option>`);

            }
          }
          
        }
          
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });


  } else {
    $('#PSCGroupProduct').dropdown("clear");
  }


  $('#tabpsclist').on('click', function() {
    window.location.href = "./?link=pscindex";
  });

  $('#PSCGroupProduct').on('change', function() {
    var grprd = $(this).val();
    if (grprd === "BROWN GOODS") {
      $('.CycleUnitTd').addClass('disabled');
      $('.CycleUnitDiv').hide();
      $('#PSCCycle').dropdown("clear");
      $('#PSCCycle').dropdown("set selected", '-');
    } else {
      $('.CycleUnitTd').removeClass('disabled');
      $('.CycleUnitDiv').show();
    }
  });

  $('#PSCSupply').keyup(function (event) {
    if (event.keyCode == 13) {
      LoadDataPTB();
    }
  });

  $('#PSCSupply').on('blur', function() {
    LoadDataPTB();
  });

  function GetValuePTB(a){
    if(a){
      return a;
    } else {
      return '-';
    }
  }

$('.InputTarget').hide();
$('#BPSite').on('change', function() {
  var site = $('#BPSite').val();
  if (site=="SKM"){
    $('.InputTarget').show(500,"linear");
  } else {
    $('.InputTarget').hide(500);
    $('#HeaderTargetLunas').val('');
    $('#HeaderTargetPINECN').val('');
  }
});

$(".ui.search.vendor").search({
  minCharacters: 1,
  apiSettings: {
    url: "1_bukupetunjuk/_autocompleteSN.php?q={query}",
  },
  fields: {
    results: "data",
    title: "id",
    description: "desc",
  },
});

 //Fuction Load Microsoft Project - Function RESt dari PSS
 function LoadMsProject(){
  var user    = $("#MPPUser").val();
  
  $('#TableMsProject').find('tbody').empty();
  $.ajax({
    type: "POST",
    url: `${restlocbp}read_typepsc`,
    headers: {
      user  : vusrnm,
      token : vtoken
    },
    data: { user :user},
    cache: false,
    success: function (response){
      var obj = JSON.parse(response);
    // console.log(obj);
      if(isEmpty(obj)) {
        IsResponseEmptyObj();
      } else if(obj) {
        if (obj.code == 'error8'){
          $('#TableMsProject').find('tbody').append(
            "<tr><td width='400px'>&nbsp;"+
            "</td><td class='center' >"+
            "</td><td class='center'></td></tr>");
        } else {
          jmlData = obj.length;
          for(a = 0; a < jmlData; a++){
            $('#TableMsProject').find('tbody').append(
            "<tr id='"+a+"'><td width='80px'>"+obj[a]["TypeSupply"]+
            "</td><td class='center' width='400px'>"+obj[a]["TypeDemand"]+
            "</td><td class='center' width='150px'>"+obj[a]["TypeBasic"]+
            "</td><td class='center'><i class='trash actdeleteprjid iconcoloredit icon' id='"+obj[a]["id_temptype"]+"'></i></td></tr>");
          } 
          
          //Hapus Project ID
          $('.actdeleteprjid').on('click', function(e){
            var idprj  = $(this).attr('id');
            var user   = $("#MPPUser").val();
            $.ajax({
              type: "POST",
              url: `${restlocbp}delete_temptype`,
              headers: {
                user  : vusrnm,
                token : vtoken
              },
              data: {
                idprj : idprj,
                user  : user
              },
              cache: false,
              success: function (response){
                var obj = JSON.parse(response);
                if (obj.code == 'error9'){
                  Swal.fire('Error','Ada kendal di koneksi/database, data tidak tersimpan !','error')
                } else if (obj.code == 'error10'){
                  Swal.fire('Error','Item yang dimaksud tidak ada !','error')
                }  else {
                  Swal.fire({
                    text: 'Item berhasil dihapus dari daftar',
                    timer: 1000,
                    position: 'top-right',
                    toast: true,
                    showConfirmButton: false
                  });
                  LoadMsProject();
                }
              },
              error: function () {
                IsTimeOut(LogoutProtect);
              },
            });
          });
        }
      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });
}

//Function Remove Last comma
function removeLastComma(str) {
  return str.replace(/,(\s+)?$/, '');   
}

//Fuction Read Data Microsoft Project - Function RESt dari PSS
function ReadAfterAddMsProject(){
  var user    = $("#MPPUser").val();
  $.ajax({
    type: "POST",
    url: `${restlocbp}read_typepsc`,
    headers: {
      user  : vusrnm,
      token : vtoken
    },
    data: { user :user},
    cache: false,
    success: function (response){
      var obj = JSON.parse(response);
    // console.log(obj);
      if(isEmpty(obj)) {
        IsResponseEmptyObj();
      } else if(obj) {
        jmlData = obj.length;
        var TypeSupplys = '';
        for(a = 0; a < jmlData; a++){
          TypeSupplys += obj[a]["TypeSupply"]+", ";
        }
        // console.log(TypeSupply);
        $("#BPType").val(removeLastComma(TypeSupplys));
      }
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });
}

$('#BPJenisProduct').on('change', function() {
  var JProd = $('#BPJenisProduct').val();
  // console.log(prd);
  $.ajax({
    type: "POST",
    url: `${restlocbp}readprd`,
    async: false,
    headers: {
      user: vusrnm,
      token: vtoken,
    },
    data: {
      jprd  : JProd,
    },
    cache: false,
    success: function (response) {
      var obj = JSON.parse(response);
      jmlData = obj.length;
      console.log(obj);
      if (obj.status == false) {
        IsResponseFalse(obj.message);
      } else {
        $('#BPProduct').dropdown('clear');
        $('#BPProduct').empty();
        $('#BPProduct').append(`<option value="-"></option>`);
        for (a = 0; a < jmlData; a++) {
          if(obj[a]['product'] === Prod){
            $('#BPProduct').append(`<option selected value="${obj[a]['product']}">${obj[a]['product']}</option>`);
          } else {
            $('#BPProduct').append(`<option value="${obj[a]['product']}">${obj[a]['product']}</option>`);

          }
        }
        
      }
        
    },
    error: function () {
      IsTimeOut(LogoutProtect);
    },
  });
});


  $('#BPProduct').on('change', function() {
    var prd = $('#BPProduct').val();
    // console.log(prd);
    $.ajax({
      type: "POST",
      url: `${restlocpsc}readsubprd`,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        prd  : prd,
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        jmlData = obj.length;
        // console.log(obj);
        if (obj.status == false) {
          IsResponseFalse(obj.message);
        }  else {
          $('#BPSubPrd').dropdown('clear');
          $('#BPSubPrd').empty();
          $('#BPSubPrd').append(`<option value="-"></option>`);
          for (a = 0; a < jmlData; a++) {
          $('#BPSubPrd').append(`<option value="${obj[a]['sub_product']}">${obj[a]['sub_product']}</option>`);
          }
        }
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });
  });

  
  $("#HeaderButtonSave").click(function(){
    var BPSlip          = $("#BPSlip").val();
    var BPGroupProduct  = $("#BPGroupProduct").val();
    var BPJenisProduct  = $("#BPJenisProduct").val();
    var BPProduct       = $("#BPProduct").val();
    var BPSubPrd        = $("#BPSubPrd").val();
    var BPType          = $("#BPType").val();
    var BPCekDQA        = $("#BPCekDQA").val();
    var BPDiseprindag   = $("#BPDisperindag").val();
    var BPSite          = $("#BPSite").val();
    var BPSKMNama       = $("#BPSKMNama").val();
    var BPSKMKontak     = $("#BPSKMKontak").val();
    var BPSKMAlamat     = $("#BPSKMAlamat").val();
    // var BPKertas        = $("#BPKertas").val();
    var BPModel         = $("#BPModel").val();
    // var BPTypeBP        = $("#BPTypeBP").val();
    // var BPJumlahHalaman = $("#BPJumlahHalaman").val();
    var BPSNNumber      = $("#BPSNNumber").val();
    var BPHeaderTitle   = $("#BPHeaderTitle").val();
    var BPHeaderNote   = $("#BPHeaderNote").val();
    var BPHeaderUser    = $("#BPHeaderUser").val();
    var BPHeadofDQA     = $("#BPHeadofDQA").val();
    var BPProjectLeader     = $("#BPPL").val();
    var form_data   = new FormData();
    
    form_data.append("BPSlip", BPSlip);
    form_data.append("BPGroupProduct", BPGroupProduct);
    form_data.append("BPJenisProduct", BPJenisProduct);
    form_data.append("BPProduct", BPProduct);
    form_data.append("BPSubPrd", BPSubPrd);
    form_data.append("BPType", BPType);
    form_data.append("BPCekDQA", BPCekDQA);
    form_data.append("BPDiseprindag", BPDiseprindag);
    form_data.append("BPSite", BPSite);
    form_data.append("BPSKMNama", BPSKMNama);
    form_data.append("BPSKMKontak", BPSKMKontak);
    form_data.append("BPSKMAlamat", BPSKMAlamat);
    // form_data.append("BPKertas", BPKertas);
    form_data.append("BPModel", BPModel);
    // form_data.append("BPTypeBP", BPTypeBP);
    // form_data.append("BPJumlahHalaman", BPJumlahHalaman);
    form_data.append("BPSNNumber", BPSNNumber);
    form_data.append("BPHeaderTitle", BPHeaderTitle);
    form_data.append("BPHeaderNote", BPHeaderNote);
    form_data.append("BPHeaderUser", BPHeaderUser);
    form_data.append("BPHeadofDQA", BPHeadofDQA);
    form_data.append("BPProjectLeader", BPProjectLeader);
    // console.log(form_data);
    // data = [{
    //   BPSlip            : BPSlip,
    //   BPGroupProduct    : BPGroupProduct,
    //   BPJenisProduct    : BPJenisProduct,
    //   BPProduct         : BPProduct,
    //   BPSubPrd          : BPSubPrd,
    //   BPType            : BPType,
    //   BPCekDQA          : BPCekDQA,
    //   BPDiseprindag     : BPDiseprindag,
    //   BPSite            : BPSite,
    //   BPSKMNama         : BPSKMNama,
    //   BPSKMKontak       : BPSKMKontak,
    //   BPSKMAlamat       : BPSKMAlamat,
    //   BPKertas          : BPKertas,
    //   BPModel           : BPModel,
    //   BPTypeBP          : BPTypeBP,
    //   BPJumlahHalaman   : BPJumlahHalaman,
    //   BPSNNumber        : BPSNNumber,
    //   BPHeaderTitle     : BPHeaderTitle,
    //   BPHeaderUser      : BPHeaderUser,
    //   BPHeadofDQA       : BPHeadofDQA,
    //   BPDraft           : BPDraft
    // }];

    $.ajax({
      type    : "POST",
      url     : `../RND_BackEnd/backend_bp/bp/create-header`,
      headers : {
        user  : vusrnm,
        token : vtoken
      },
      data: form_data,
      // data: {data:[form_data]},
      cache: false,
      contentType: false,
      processData: false,
      success: function (response){
        var obj = JSON.parse(response);
        if(isEmpty(obj)) {
          IsResponseEmptyObj();
        } else if(obj) {
          if (obj.status == false) {
            IsResponseFalse(obj.message);
          } else {
            IsResponseTrue(obj.message);
            window.location.href = "./?link=bpindex";
          }
        } else {
          Swal.fire({
            text: 'Ada kendal di koneksi/database, data tidak tersimpan !',
            timer: 3500,
            showConfirmButton: false
          });
        }
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });
  });

  $("#HeaderButtonEdit").click(function(){
    var BPSlip          = $("#BPSlip").val();
    var BPGroupProduct  = $("#BPGroupProduct").val();
    var BPJenisProduct  = $("#BPJenisProduct").val();
    var BPProduct       = $("#BPProduct").val();
    var BPSubPrd        = $("#BPSubPrd").val();
    var BPType          = $("#BPType").val();
    var BPCekDQA        = $("#BPCekDQA").val();
    var BPDiseprindag   = $("#BPDisperindag").val();
    var BPSite          = $("#BPSite").val();
    var BPSKMNama       = $("#BPSKMNama").val();
    var BPSKMKontak     = $("#BPSKMKontak").val();
    var BPSKMAlamat     = $("#BPSKMAlamat").val();
    // var BPKertas        = $("#BPKertas").val();
    var BPModel         = $("#BPModel").val();
    // var BPTypeBP        = $("#BPTypeBP").val();
    // var BPJumlahHalaman = $("#BPJumlahHalaman").val();
    var BPSNNumber      = $("#BPSNNumber").val();
    var BPHeaderTitle   = $("#BPHeaderTitle").val();
    var BPHeaderNote   = $("#BPHeaderNote").val();
    var BPHeaderUser    = $("#BPHeaderUser").val();
    var BPHeadofDQA     = $("#BPHeadofDQA").val();
    var BPProjectLeader     = $("#BPPL").val();
    var form_data   = new FormData();
    
    form_data.append("BPidBP", IdEditBP);
    form_data.append("BPSlip", BPSlip);
    form_data.append("BPGroupProduct", BPGroupProduct);
    form_data.append("BPJenisProduct", BPJenisProduct);
    form_data.append("BPProduct", BPProduct);
    form_data.append("BPSubPrd", BPSubPrd);
    form_data.append("BPType", BPType);
    form_data.append("BPCekDQA", BPCekDQA);
    form_data.append("BPDiseprindag", BPDiseprindag);
    form_data.append("BPSite", BPSite);
    form_data.append("BPSKMNama", BPSKMNama);
    form_data.append("BPSKMKontak", BPSKMKontak);
    form_data.append("BPSKMAlamat", BPSKMAlamat);
    // form_data.append("BPKertas", BPKertas);
    form_data.append("BPModel", BPModel);
    // form_data.append("BPTypeBP", BPTypeBP);
    // form_data.append("BPJumlahHalaman", BPJumlahHalaman);
    form_data.append("BPSNNumber", BPSNNumber);
    form_data.append("BPHeaderTitle", BPHeaderTitle);
    form_data.append("BPHeaderNote", BPHeaderNote);
    form_data.append("BPHeaderUser", BPHeaderUser);
    form_data.append("BPHeadofDQA", BPHeadofDQA);
    form_data.append("BPProjectLeader", BPProjectLeader);
    // console.log(form_data);
    // data = [{
    //   BPSlip            : BPSlip,
    //   BPGroupProduct    : BPGroupProduct,
    //   BPJenisProduct    : BPJenisProduct,
    //   BPProduct         : BPProduct,
    //   BPSubPrd          : BPSubPrd,
    //   BPType            : BPType,
    //   BPCekDQA          : BPCekDQA,
    //   BPDiseprindag     : BPDiseprindag,
    //   BPSite            : BPSite,
    //   BPSKMNama         : BPSKMNama,
    //   BPSKMKontak       : BPSKMKontak,
    //   BPSKMAlamat       : BPSKMAlamat,
    //   BPKertas          : BPKertas,
    //   BPModel           : BPModel,
    //   BPTypeBP          : BPTypeBP,
    //   BPJumlahHalaman   : BPJumlahHalaman,
    //   BPSNNumber        : BPSNNumber,
    //   BPHeaderTitle     : BPHeaderTitle,
    //   BPHeaderUser      : BPHeaderUser,
    //   BPHeadofDQA       : BPHeadofDQA,
    //   BPDraft           : BPDraft
    // }];

    $.ajax({
      type    : "POST",
      url     : `../RND_BackEnd/backend_bp/bp/update-header`,
      headers : {
        user  : vusrnm,
        token : vtoken
      },
      data: form_data,
      // data: {data:[form_data]},
      cache: false,
      contentType: false,
      processData: false,
      success: function (response){
        var obj = JSON.parse(response);
        if(isEmpty(obj)) {
          IsResponseEmptyObj();
        } else if(obj) {
          if (obj.status == false) {
            IsResponseFalse(obj.message);
          } else {
            IsResponseTrue(obj.message);
            window.location.href = "./?link=bpindex";
          }
        } else {
          Swal.fire({
            text: 'Ada kendal di koneksi/database, data tidak tersimpan !',
            timer: 3500,
            showConfirmButton: false
          });
        }
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });
  });
  
  $('#AddItemButtonSave').on('click', function(e){
    $(".WindowPrjID").modal('hide');
    ReadAfterAddMsProject();
  });

  $('#AddItemButtonBack').on('click', function() {
    $(".WindowPrjID").modal('hide');
  });

  $('#HeaderButtonBack').on('click', function() {
    window.location.href = "./?link=bpindex";
  });

  $('#tabcompare').on('click', function() {
    window.location.href = "./?link=psccompare";
  });

  $('#tabPSC').on('click', function() {
    window.location.href = "./?link=pscindex";
  });

  $('#tabuserguide').on('click', function() {
    window.location.href = "./?link=guidebp";
  });
  $('.tabsuratgolive').on('click', function() {
    window.location.href = "./?link=golivembp";
  });
  $('.tabhasilmonitoring').on('click', function() {
    window.location.href = "./?link=monitormbp";
  });
  $('.tabversion').on('click', function() {
    window.location.href = "./?link=versionhistory&app=MBP";
  });


  // $('.ui.dropdown').dropdown({ fullTextSearch: true });
  $('.ui.dropdown.fullsearch').dropdown( {fullTextSearch:'exact', sortSelect: true, match:'text'} );

// Master();
// $('.TitleNegoList').html('NEGOSIATOR LIST <br><span class="infoheader">Tabel Nama Negosiator dan Handling Part-nya</span>');


// $('.menu .item').tab();

// var MTable = $('#Master').DataTable({
//   "dom"       : "<'ui stackable grid'"+
//                     "<'row'"+
//                         "<'left aligned ten wide column'<'TitleNegoList'>>"+
//                         "<'right aligned six wide column'f>"+
//                     ">"+
//                     "<'row dt-table'"+
//                         "<'sixteen wide column'tr>"+
//                     ">"+
//                     "<'row'"+
//                         "<'left aligned ten wide column'l>"+
//                         "<'right aligned four wide column'p>"+
//                     ">"+
//                 ">",
//   "stateSave" : false,
//   "pageLength"  : 25,
//   "data"      : [],
//   "order"     : [[ 0, "asc" ]],
//   "language"  : { sLengthMenu: "_MENU_", search: "",searchPlaceholder: "Search.." },
//   "columnDefs": [
//               { type: 'natural', targets: 0 },

//             ],
//   "columns"   : [
//     { "data"    : null, render    : function(data, type, row) 
//       { return '<span class="actedit" enm="'+data["TypeSupply"]+'">'+data["TypeSupply"]+'</span>';
//       }
//     },
//     { "data"    : null, render    : function(data, type, row) 
//       { return '<span class="actedit" enm="'+data["TypeSupply"]+'">'+data["TypeBasic"]+'</span>';
//       }
//     },
//     { "data"    : null, render    : function(data, type, row) 
//       { return '<span class="actedit" enm="'+data["TypeSupply"]+'">'+data["TypeDemand"]+'</span>';
//       }
//     },
//     { "data"    : null, render    : function(data, type, row) 
//       { return '<i class="trash actdeletetypesupply iconcoloredit icon" id="'+data["id_temptype"]+'"></i>';
//       }
//     }
//   ]
// });

$('#AddTypeSupply').on('change', function() {
  $('.msproject').dropdown({autofocus : false});
  var pid     = this.options[this.selectedIndex].getAttribute('value');
  // var user    = $("#PSSUser").val();
  var vusrnm  = getCookie('usrnm');
  var vtoken  = getCookie('token');
          
  $.ajax({
    type  : "POST",
    url   : "../RND_BackEnd/backend_bp/create_temptype",
    headers: {
      user  : vusrnm,
      token : vtoken
    },
    data: {
      pid     : pid
    },
    cache: false,
    success: function (response){
      var obj = JSON.parse(response);
      // console.log(obj);
      if(isEmpty(obj)) {
        IsResponseEmptyObj();
        } else if(obj) {
          if (obj.status == false) {
            IsResponseFalse(obj.message);
          } else {
            IsResponseTrue(obj.message);
            // $(".WindowPrjID").modal('hide');
            // Master();
            LoadMsProject();
          }
        } else {
          Swal.fire({
            text: 'Ada kendal di koneksi/database, data tidak tersimpan !',
            timer: 3500,
            showConfirmButton: false
          });
        }
    },
    error: function(){
      IsTimeOut(LogoutProtect);
    }
  });
});



$('.actprjid').on('click', function(e){
  // var vtoken  = getCookie('token');
  var BPProduct       = $("#BPProduct").val();

    $.ajax({
      type: "POST",
      url: `${restlocbp}readpsctype`,
      async: false,
      headers: {
        user: vusrnm,
        token: vtoken,
      },
      data: {
        prd  : BPProduct
      },
      cache: false,
      success: function (response) {
        var obj = JSON.parse(response);
        jmlData = obj.length;
        // console.log(obj[a]['TypeSupply']);
        if (obj.status == false) {
          IsResponseFalse(obj.message);
        } else {
          $('#AddTypeSupply').dropdown('clear');
          $('#AddTypeSupply').empty();
          $('#AddTypeSupply').append(`<option value="-"></option>`);
          for (a = 0; a < jmlData; a++) {
            $('#AddTypeSupply').append(`<option value="${obj[a]['TypeSupply']}">${obj[a]['TypeSupply']}</option>`);

          }
          
        }
          
      },
      error: function () {
        IsTimeOut(LogoutProtect);
      },
    });


  
  
  LoadMsProject();

  // $(".WindowPrjID").modal({
  //   autofocus: false,
  //   closable : false,
  //   keyboardShortcuts: false
  // }).modal('show');
  $(".WindowPrjID").modal({blurring: false, closable: false, autofocus: false,
  }).modal("show");

  $('.sync').popup({
    on: 'hover',
    movePopup: false,
  });

  $('.msproject').dropdown({
    fullTextSearch:'exact', 
    match:'both',
    selectOnBlur:false,
    selectOnKeydown: false
  });

});


});
 
  
// //Function Read Master Negosiator
// function Master(){
//   var vusrnm = getCookie('usrnm');
//   var vtoken = getCookie('token');
  
//   //Load Data Master Negosiator
//   $.ajax({
//     type: "POST",
//     url: `${restlocbp}read_typepsc`,
//     headers: {
//       user  : vusrnm,
//       token : vtoken
//     },
//     cache: false,
//     success: function (response){
//       var obj = JSON.parse(response);
//       if(isEmpty(obj)) {
//         console.log('Gagal load tabel, data kosong');
//       } else {
      
//         //DRAW ARRAY KE DATATABLES
//         MTable.clear();
//         $.each(obj, function(index, value) {
//           MTable.row.add(value);
//         });
//         MTable.draw();

//         $("#Master").on("click", ".actedit", function(){
//           var enm = $(this).attr('enm');
//           $('#HeaderNegosiator').dropdown('set selected',enm);
//           Swal.fire({
//             text: 'Updated to Negosiator Input (Header)',
//             timer: 1000,
//             position: 'top-right',
//             toast: true,
//             showConfirmButton: false
//           })
//         });
      
//       }
//     },
    
//     //JIKA ERROR TAMPILKAN PESAN ATAU LOGOUT
//     error: function(){
//       window.location.href = "./?link=loclogout";
//       console.log('Server tidak merespon, segera hubungi Administrator di ext. 3553 !');
//     }
//   });

// }

