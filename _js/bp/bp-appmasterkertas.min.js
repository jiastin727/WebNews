$(".ui.dropdown").dropdown(); 
$(".menu .item").tab();

// Global Variable
const NonceValue = "rdsystem2020";
const LogoutProtect = false;

// const ColorSignNo  = "#00139f";
// const ColorOwner  = "#00139f";
// const BgColorOwner  = "#eff0ff";
// const ColorRelease= "#505050";
// const ColorCancel = "#be0000";
// const ColorLock = "#860954";
// const BgColorLock = "#f3ebeb";

var VUserName = getCookie("usrnm");
var VToken    = getCookie("token");
var RestLocBP = decodeURIComponent(getCookie("restlocpsc"));
let Ucrypt = new Encryption();
var DUser  = Ucrypt.decrypt(EUser, NonceValue);
var DJbtn  = Ucrypt.decrypt(EJbtn, NonceValue);
var DSect  = Ucrypt.decrypt(ESect, NonceValue);
var DGrup  = Ucrypt.decrypt(EGrup, NonceValue);


function TableListFunc() {

  var JsonFilter = getCookie('FilterBPMasterHalaman');
  var ArrayF = JSON.parse(JsonFilter);
  if(JsonFilter){
    var SearchF   = ArrayF[0];
  } else {
    var SearchF   = "";
  }

  if (SearchF) {
    $("#fcari_bp").val(SearchF);
    var SearchFStart = SearchF;
  } else {
    var SearchFStart = "";
  }

  
  var FiterArry = [SearchFStart];
  var JsonFilter = JSON.stringify(FiterArry);
  setCookie("FilterBPMasterHalaman", JsonFilter, 5);

  var DTables = $("#TableList").DataTable({
    dom:
      "<'ui stackable grid'" +
      "<'row'" +
      "<'left aligned sixteen wide column'>" +
      ">" +
      "<'row dt-table'" +
      "<'sixteen wide column'tr>" +
      ">" +
      "<'row'" +
      // "<'left aligned seven wide column'B>" +
      // "<'left aligned two wide column'i>" +
      "<'left aligned seven wide column'p>" +
      ">" +
      ">",
    buttons: [
      {
        text: "10",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(10).draw();
        },
      },
      {
        text: "25",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(25).draw();
        },
      },
      {
        text: "50",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(50).draw();
        },
      },
      {
        text: "100",
        action: function (e, dt, node, config) {
          $("#TableList").DataTable().page.len(100).draw();
        },
      },
      // {
      //   text: "1000",
      //   action: function (e, dt, node, config) {
      //     $("#TableList").DataTable().page.len(1000).draw();
      //   },
      // },
    ],
    destroy     : true,
    stateSave   : true,
    processing  : true,
    deferRender : true,
    serverSide  : true,
    orderClasses: false,
    paging      : true,
    scrollY     : '60vh',
    pageLength  : 10,
    data        : [],
    language    : {
      sLengthMenu : "_MENU_",
      search      : "",
      searchPlaceholder: "Pencarian..",
      processing  : '<i class="circle notch loading icon huge"></i>',
      info        : "_START_ sampai _END_ dari _TOTAL_ total data",
      paginate    : {
        "first"   : "Awal",
        "last"    : "Akhir",
        // "next"    : "Berikutnya",
        // "previous": "Sebelumnya"
      },
      infoEmpty   : "Tidak ada data",
      select  : {
        rows  : ""
      }
    },
    order     : [[0, "desc"]],
    columns   : [
      { data  : 'jenis_kertas' },
    ],

    createdRow: function (row, data, index) {
      $(row).find("td:eq(0)").css("background-color", "#f5fbff");
    },


    ajax : {
      url     : `../RND_BackEnd/backend_bp/master-bp`,
      type    : "POST",
      headers : {
        user  : VUserName,
        token : VToken,
      },
      data    : {
        FSearch   : SearchFStart,
        master   : "kertas"
      },


      error: function () {
        IsTimeOut(LogoutProtect);
      },
    },
  });
}

$(document).ready(function () {

  TableListFunc();

  //RESPON KETIKA INPUT PENCARIAN DI KETIK
  $("#fcari_bp").on("keyup", function () {
    var FilterCari = $("#fcari_bp").val();
    var FiterArry = [FilterCari];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterBPMasterHalaman", JsonFilter, 5);
    $("#TableList").DataTable().destroy();
    TableListFunc(FilterCari);
    $("#TableList").DataTable().page(0).draw();
  });


  //RESET FILTER
  $(".resetfilter").on("click", function () {
    $("#fcari_bp").val("");
    var FiterArry = [""];
    var JsonFilter = JSON.stringify(FiterArry);
    setCookie("FilterBPMasterHalaman", JsonFilter, 5);
    $("#TableList").DataTable().destroy();
    TableListFunc("", "bp");
    $("#TableList").DataTable().page(0).draw();
  });

  
  $('#tabBPList').on('click', function() {
    window.location.href = "./?link=bpindex";
  });

  $('#tabPSC').on('click', function() {
    window.location.href = "./?link=pscindex";
  });

  $('#tabHalaman').on('click', function() {
    window.location.href = "./?link=bpmasterjumlahhalaman";
  });

  $('#tabKertas').on('click', function() {
    window.location.href = "./?link=bpmasterkertas";
  });

  $('#tabTypeBP').on('click', function() {
    window.location.href = "./?link=bpmastertypebp";
  });

  $('#addnewkertas').click(function(){
    $(".xwinaddnewkertas").modal({ autofocus: false }).modal("show");
  });

});

$("#SaveDataKertas").on("click", function () {
  var JnsKertas = $('#JnsKertas').val();
  $.ajax({
    type    : "POST",
    url     : `../RND_BackEnd/backend_bp/create-masterbp`,
    headers : {
      user  : VUserName,
      token : VToken,
    },
    data: {
      kertas   : JnsKertas,
      master   : "kertas",
    },
    cache: false,
    success: function (response){
      var obj = JSON.parse(response);
      if(isEmpty(obj)) {
        console.log('Gagal Simpan mas brooo, data kosong');
      } else if(obj) {
        if (obj.status == false){
          IsResponseFalse(obj.message);
        } else {
          IsResponseTrue(obj.message);
          TableListFunc();
          $(".xwinaddnewkertas").modal("hide");
        }
      } else {
        Swal.fire('Error','Ada kendal di koneksi/database, data tidak tersimpan !','error')
      }
    },
    error: function () {
      if (LogoutProtect){
        window.location.href = "./?link=loclogout";
      } else {
        Swal.fire("Error", "Server tidak merespon, segera hubungi Administrator di ext. 3553 !","error" );
      }
    },
  });
  
  
});